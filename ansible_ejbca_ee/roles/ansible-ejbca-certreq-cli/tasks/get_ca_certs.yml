---

- name: Get {{ item.caname }} chain file
  command: >
    {{ ejbca_sh }} ca getcacert 
    --caname {{ item.caname }}
    -f {{ identity_batch_output_dir }}/{{ item.caname }}
    --include-full-chain
  loop: "{{ httpd_trusted_cas }}"
  loop_control:
    label: "{{ item.caname }}"
  become: yes
  become_user: "{{ ejbca_user }}"
  register: ejbca_get_ca_chain
  failed_when: ejbca_get_ca_chain.rc >= 2
  changed_when: ejbca_get_ca_chain.rc == 0
  tags: ejbca-cli-cacert

- name: Copy {{ item.caname }} Chain file to localhost
  become: no
  fetch:
    src: "{{ identity_batch_output_dir }}/{{ item.caname }}"
    dest: "{{ ejbca_csr_dir_output }}/{{ item.caname }}"
    flat: yes
  loop: "{{ httpd_trusted_cas }}"
  loop_control:
    label: "{{ item.caname }}"
  tags: ejbca-cli-cacert

- name: Cleanup the {{ item.caname }} Chain files
  file:
    path: "{{ identity_batch_output_dir }}/{{ item.caname }}"
    state: absent
  loop: "{{ httpd_trusted_cas }}"
  loop_control:
    label: "{{ item.caname }}"
  tags: ejbca-cli-cacert