---

- name: Check if end entity exists
  command: "{{ ejbca_sh }} ra findendentity {{  item.name }}"
  args:
    chdir: "{{ ejbca_home }}"
  become_method: sudo
  become_user: "{{ ejbca_user }}"
  changed_when: False
  failed_when: "'FAILED' in endentity_exists.stderr"
  register: endentity_exists
  tags: certreq-cli-batch

- block:
    - name: Copy CSR file from Controller
      copy:
        src: "{{ ejbca_csr_dir_output }}/{{ item.name }}.csr"
        dest: "{{ identity_batch_output_dir }}/{{ item.name }}.csr"
        owner: "{{ ejbca_user }}"
        group: "{{ ejbca_group }}"
      register: file_copy
      tags: certreq-cli-csr

    - name: Create fact
      set_fact:
        entity_pass: "{{ pass_15 }}"
      no_log: true

    - name: Add end entity
      command: >
        "{{ ejbca_home }}/bin/ejbca.sh" ra addendentity
        --username "{{ item.name }}"
        --dn "{{ item.dn }}"
        --caname "{{ item.caname }}"
        --type 1
        --token {{ item.token }}
        --password {{ entity_pass }}
        --certprofile {{ item.certprofile }}
        --eeprofile {{ item.eeprofile }}
      no_log: true
      become_method: sudo
      become_user: "{{ ejbca_user }}"
      register: adding_csr_end_entity
      failed_when: adding_csr_end_entity.rc >= 2
      changed_when: adding_csr_end_entity.rc == 0
      tags: certreq-cli-csr

    - debug:
        msg: "Adding end entity failed with message: {{ adding_csr_end_entity.stdout }}"
      when: adding_csr_end_entity.rc == 1

    - name: Sign CSR for key binding 
      command: "{{ ejbca_home }}/bin/ejbca.sh createcert --username {{ item.name }}  --password {{ entity_pass }} -c {{ identity_batch_output_dir }}/{{ item.name }}.csr -f /var/tmp/{{ item.name }}.crt"
      no_log: true
      become: yes
      become_user: "{{ ejbca_user }}"
      register: ejbca_sign_csr
      failed_when: ejbca_sign_csr.rc >= 2
      changed_when: ejbca_sign_csr.rc == 0
      tags: certreq-cli-csr

    - name: Copy certificate files to localhost
      become: no
      fetch:
        src: "{{ identity_batch_output_dir }}/{{ item.name }}.crt"
        dest: "{{ ejbca_csr_dir_output }}/{{ item.name }}.crt"
        flat: yes
      tags: certreq-cli-csr

    - name: Cleanup the cert file in /var/tmp
      file:
        path: "{{ identity_batch_output_dir }}/{{ item.name }}.crt"
        state: absent
      tags: certreq-cli-csr

    - name: Cleanup the csr file in /var/tmp
      file:
        path: "{{ identity_batch_output_dir }}/{{ item.name }}.csr"
        state: absent
      tags: certreq-cli-csr

  when: endentity_exists.rc == 1
