---

- name: Query VA crypto tokens 
  command: "{{ ejbca_home }}/bin/ejbca.sh cryptotoken list"
  no_log: true
  become: yes
  become_user: "{{ ejbca_user }}"
  register: cryptoToken_list
  changed_when: false

#- name: Debug
#  debug:
#    var: item

- name: Create VA crypto token for OCSP {{ item.0.crypto_token_name }}
  command: >
    {{ ejbca_home }}/bin/ejbca.sh cryptotoken create --token {{ item.0.crypto_token_name }} --pin {{ item.0.tokenpass }} --autoactivate true 
    --type {% if "SoftCryptoToken" == item.0.tokentype %}"SoftCryptoToken"{% elif "PKCS11CryptoToken" == item.0.tokentype %}"PKCS11CryptoToken"
    --lib "{{ hsm_shared_library }}" 
    --slotlabel "{{ item.0.slot_identifier_value }}"
    --slotlabeltype "{{ item.0.slot_identifier_type }}"{% endif %}
  no_log: true
  become: yes
  become_user: "{{ ejbca_user }}"
  register: keybinding_cryptotoken
  failed_when: keybinding_cryptotoken.rc >= 2
  #changed_when: keybinding_cryptotoken.rc == 0
  when: ejbca_va_keybinding[0].crypto_token_name not in cryptoToken_list.stdout

- name: Create Keys using SoftCryptoToken
  block:

    - name: Check what keys are on the SoftCryptoToken {{ item.0.crypto_token_name }}
      command: >
        {{ ejbca_home }}/bin/ejbca.sh cryptotoken listkeys --token {{ item.0.crypto_token_name }}
      become: yes
      become_user: "{{ ejbca_user }}"
      register: va_cryptotoken_list_keys

    - name: Create OCSP Signing keys in crypto token {{ item.0.crypto_token_name }} - {{ item.1.key_label }}:{{ item.1.key_size }}
      command: >
        {{ ejbca_home }}/bin/ejbca.sh cryptotoken generatekey --token {{ item.0.crypto_token_name }} --alias {{ item.1.key_label }}  --keyspec {{ item.1.key_size }}
      no_log: true
      become_user: "{{ ejbca_user }}"
      when: item.0.name not in va_cryptotoken_list_keys.stdout

  when: ( "SoftCryptoToken" in item.0.tokentype ) 



