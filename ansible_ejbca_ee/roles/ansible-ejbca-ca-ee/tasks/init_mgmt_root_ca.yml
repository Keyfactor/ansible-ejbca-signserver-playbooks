---

- name: Ensure ejbca-custom/p12 directory exists
  file:
    path: "{{ ejbca_home }}/../ejbca-custom/p12"
    state: directory
    owner: "{{ ejbca_user }}"
    group: "{{ ejbca_group }}"

- name: Ensure Management & Root CA properties file is copied over
  template:
    src: "catoken_template.properties.j2"
    dest: "{{ ejbca_home }}/../ejbca-custom/conf/{{ item.caname }}.catoken.properties"
    owner: "{{ ejbca_user }}"
    group: "{{ ejbca_group }}"
  when: item.tokentype == "org.cesecore.keys.token.PKCS11CryptoToken"
  loop: "{{ management_add_certification_authorities }}"
  no_log: true

- name: Create Management & Root CA's
  command: >
   "{{ ejbca_home }}/bin/ejbca.sh" ca init
   --caname "{{ item.caname }}"
   --dn "{{ item.dn }}"
   --tokenType "{{ item.tokentype }}"
   --tokenPass "{{ item.tokenpass }}"
   {% if item.tokentype == "org.cesecore.keys.token.PKCS11CryptoToken" %}--tokenprop "{{ ejbca_home }}/../ejbca-custom/conf/{{ item.caname }}.catoken.properties"{% endif %}
   --keyspec "{{ item.keyspec }}"
   --keytype "{{ item.keytype }}" -s "{{ item.signalg }}"
   -v "{{ item.validity }}"
   --policy "{{ item.policy }}"
   {% if item.subjectaltname is defined %}--subjectaltname "{{ item.subjectaltname }}" {% endif %}
   -certprofile "{{ item.certprofile }}"
  loop: "{{ management_add_certification_authorities }}"
  no_log: true
  become: yes
  become_user: "{{ ejbca_user }}"
  register: initializing_management_ca
  failed_when: initializing_management_ca.rc >= 2
  changed_when: initializing_management_ca.rc == 0

- debug:
    msg: "Initializing CA failed with message: {{ item.stdout }}"
  when: item.rc == 1
  loop: "{{ initializing_management_ca.results }}"
  loop_control:
    label: "{{ item.item.caname }}"

- name: Configure Token to Auto Activate
  command: "{{ ejbca_home }}/bin/ejbca.sh cryptotoken setpin --token {{ item.caname }} {{ item.tokenpass }} {{ item.tokenpass }}"
  loop: "{{ management_add_certification_authorities }}"
  no_log: true
  become: yes
  become_user: "{{ ejbca_user }}"
  register: auto_activate_token_management
  failed_when: auto_activate_token_management.rc >= 2
  changed_when: auto_activate_token_management.rc == 0
