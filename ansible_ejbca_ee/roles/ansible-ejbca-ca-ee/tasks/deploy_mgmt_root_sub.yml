---
# tasks file for ansible-ejbca-ca-ee

- name: Test that HSM slots are available for Management & Root CA's
  include_tasks: hsm_test.yml
  loop: "{{ management_test_slots }}"
  no_log: true
  tags: hsm_test
  when: management_test_slots[0] is defined

- name: Test that HSM slots are available for Sub CA's
  include_tasks: hsm_test.yml
  loop: "{{ sub_test_slots }}"
  no_log: true
  tags: hsm_test
  when: sub_test_slots[0] is defined

- name: Generate HSM keys for Management & Root CA's
  include_tasks: clienttoolbox_key_generation.yml
  loop: "{{ management_generate_hsm_keys }}"
  no_log: true
  tags: clienttoolbox_key_generation
  when: management_generate_hsm_keys[0] is defined

- name: Generate HSM keys for Sub CA's
  include_tasks: clienttoolbox_key_generation.yml
  no_log: true
  loop: "{{ sub_generate_hsm_keys }}"
  tags: clienttoolbox_key_generation
  when: sub_generate_hsm_keys[0] is defined

- name: Check deployment
  include_tasks: check_deployment.yml
  tags: check_deployment
  when: management_database_indexes.apply_indexes or management_add_certification_authorities[0] is defined or management_import_certification_authorities[0] is defined or management_add_end_entities[0] is defined or management_add_administrators[0] is defined

- name: Prepare configdump template files
  include_tasks: config_configdump.yml

- name: Apply indexes
  include_tasks: config_apply_indexes.yml
  when: management_database_indexes.apply_indexes

- name: Use Configdump to create the Management & Root CA's
  block:

    - name: Create crypto tokens for Management & Root CA's
      include_tasks: add_crypto_token.yml
      loop: "{{ management_add_certification_authorities }}"
      no_log: true

    - name: Stage Management & Root CA to create with configdump
      template:
        src: ca-template.yml.j2
        dest: "{{ ejbca_home }}/dump/dump1/certification-authorities/{{ item.caname }}.yaml"
        owner: "{{ ejbca_user }}"
        group: "{{ ejbca_group }}"
        mode: 0664
      loop: "{{ management_add_certification_authorities }}"
      no_log: true

    - name: Intialize Management & Root CA's with configdump
      command: "./configdump.sh import  --ignore-errors --overwrite update --non-interactive continue -l {{ ejbca_home }}/dump/dump1 --initialize"
      args:
        chdir: "{{ ejbca_home }}/dist/configdump"
      become: yes 
      become_user: "{{ ejbca_user }}"
  when: deploy_with_configdump|bool and management_add_certification_authorities[0] is defined 

- name: Use CLI to create the Management & Root CA's
  block:

    - name: Import configdump of Root CA templates and EKU's
      command: "./configdump.sh import  --ignore-errors --overwrite update --non-interactive continue -l {{ ejbca_home }}/dump/dump1"
      args:
        chdir: "{{ ejbca_home }}/dist/configdump"
      become: yes 
      become_user: "{{ ejbca_user }}"
      
    - name: Initialize Management & Root CAs with CLI commands
      include_tasks: init_ca.yml
      loop: "{{ management_add_certification_authorities }}"
      no_log: true
      tags: create_cas

    - name: Configure ManagmentCA and Root CA settings
      include_tasks: config_root_ca_ext.yml

  when: management_add_certification_authorities[0] is defined and not deploy_with_configdump|bool

- name: Use Configdump to create the Sub CA's
  block:

    - name: Create crypto tokens for Sub CA's
      include_tasks: add_crypto_token.yml
      loop: "{{ sub_add_certification_authorities }}"
      no_log: true

    - name: Stage Sub CA's to create with configdump
      template:
        src: ca-template.yml.j2
        dest: "{{ ejbca_home }}/dump/dump2/certification-authorities/{{ item.caname }}.yaml"
        owner: "{{ ejbca_user }}"
        group: "{{ ejbca_group }}"
        mode: 0664
      loop: "{{ sub_add_certification_authorities }}"
      no_log: true

    - name: Intialize Sub CA's with configdump
      command: "./configdump.sh import  --ignore-errors --overwrite update --non-interactive continue -l {{ ejbca_home }}/dump/dump2 --initialize"
      args:
        chdir: "{{ ejbca_home }}/dist/configdump"
      become: yes 
      become_user: "{{ ejbca_user }}"

  when: deploy_with_configdump|bool and sub_add_certification_authorities[0] is defined

- name: Use CLI to create the Management & Root CA's
  block:

    - name: Import configdump of profiles and services
      command: "./configdump.sh import  --ignore-errors --overwrite update --non-interactive continue -l {{ ejbca_home }}/dump/dump2"
      args:
        chdir: "{{ ejbca_home }}/dist/configdump"
      become: yes 
      become_user: "{{ ejbca_user }}"
      
    - name: Initialize Sub CA's with CLI commands
      include_tasks: init_ca.yml
      loop: "{{ sub_add_certification_authorities }}"
      loop_control:
        label: "{{ item.caname }}"
      no_log: true
      tags: create_cas

    - name: Configure Sub CA's
      include_tasks: config_sub_ca_ext.yml

  when: sub_add_certification_authorities[0] is defined and not deploy_with_configdump|bool

- name: Create Key Binding 
  include_tasks: add_keybinding_ca.yml
  when: use_external_va|bool or use_external_ra|bool or use_external_ss|bool

- name: Create Peer Connector
  include_tasks: add_peer_conn.yml
  when: use_external_va|bool or use_external_ra|bool or use_external_ss|bool

- name: Create external VA services and publisher with configdump
  command: "./configdump.sh import  --ignore-errors --overwrite update --non-interactive continue -l {{ ejbca_home }}/dump/va"
  args:
    chdir: "{{ ejbca_home }}/dist/configdump"
  become: yes 
  become_user: "{{ ejbca_user }}"
  when: use_external_va|bool

- name: Import Approval Profiles
  include_tasks: add_app_profs.yml

- name: Import configdump of profiles, services, & publishers
  command: "./configdump.sh import --ignore-errors --overwrite update --non-interactive continue -l {{ ejbca_home }}/dump/dump3"
  args:
    chdir: "{{ ejbca_home }}/dist/configdump"
  become: yes 
  become_user: "{{ ejbca_user }}"

- name: Create external RA role with configdump
  command: "./configdump.sh import --ignore-errors --overwrite update --non-interactive continue -l {{ ejbca_home }}/dump/ra"
  args:
    chdir: "{{ ejbca_home }}/dist/configdump"
  become: yes 
  become_user: "{{ ejbca_user }}"
  when: use_external_ra|bool

- name: Configure EJBCA Enrollment protocols
  include_tasks: config_ejbca_services.yaml

- name: Add end entities
  include_tasks: add_end_entities.yml
  tags: add_end_entities
  when: management_add_end_entities[0] is defined

- name: Add administrators
  include_tasks: add_administrators.yml
  tags: add_administrators
  when: management_add_administrators[0] is defined

- name: Create a Crontab to download CRL's for hosting on webserver
  include_tasks: config_crontab.yml
  when: enable_crl_crontab|bool

- name: Setup SCP publishing
  include_tasks: setup_scp_publishing.yml
  tags: setup_scp_publishing
  when: management_known_hosts[0] is defined

- name: Setup localhost SCP publishing receiving users
  include_tasks: setup_localhost_scp_users.yml
  tags: setup_localhost_scp_users
  when: management_scp_localhost_receiving_users[0] is defined

- name: Setup localhost SCP publishing archive directories
  include_tasks: setup_localhost_scp_archives.yml
  tags: setup_localhost_scp_archives
  when: management_scp_localhost_archive_dirs[0] is defined

- name: Copy the superadmin p12 to the desktop
  include_tasks: copy_certs_local.yml
