---

- name: Check if HSM keys exist for {{ item.slot_identifier }}
  command: >
    {% if ncipher_preload %}"{{ preload_path }}" {% endif %}"{{ ejbca_home }}/../clientToolBox/ejbcaClientToolBox.sh"
    PKCS11HSMKeyTool test
    "{{ hsm_shared_library }}"
    "{{ item.slot_identifier }}"
    -password {{ item.slot_pin }}
  args:
    chdir: "{{ ejbca_home }}/../clientToolBox"
  become: yes
  become_user: "{{ ejbca_user }}"
  no_log: true
  register: checking_existing_keys
  changed_when: '"Signature test of key " + item.key_label + ":" not in checking_existing_keys.stdout'

#- name: Show me the var
#  debug:
#    var: checking_existing_keys 

- name: Generate key if it does not exist for {{ item.slot_identifier }} - {{ item.key_label }}:{{ item.key_size }}
  command: >
    {% if ncipher_preload %}"{{ preload_path }}" {% endif %}"{{ ejbca_home }}/../clientToolBox/ejbcaClientToolBox.sh"
    PKCS11HSMKeyTool generate
    {% if item.slot_conf is defined %}"{{ item.slot_conf.dest }}"{% else %}"{{ hsm_shared_library }}"{% endif %}
    "{{ item.key_size }}"
    "{{ item.key_label }}"
    {% if item.slot_conf is not defined %}"{{ item.slot_identifier }}"{% endif %}
    -password {{ item.slot_pin }}
  args:
    chdir: "{{ ejbca_home }}/../clientToolBox"
  become: yes
  become_user: "{{ ejbca_user }}"
  no_log: true
  when: checking_existing_keys.changed
