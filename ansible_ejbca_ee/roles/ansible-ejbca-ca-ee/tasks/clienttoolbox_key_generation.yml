---

#- name: Ensure application user is in nfast group
#  user:
#    name: "{{ app_user }}"
#    groups: nfast
#    append: yes
#    system: yes
#  when: ncipher_preload | bool

#- name: Ensure templated HSM slot config file is copied over
#  template:
#    src: "{{ item.slot_conf.src }}"
#    dest: "{{ item.slot_conf.dest }}"
#    owner: "{{ app_user }}"
#    group: "{{ app_user }}"
#  no_log: true
#  when: item.slot_conf is defined
#  loop: "{{ management_generate_hsm_keys }}"

- name: Check if HSM keys exist for Management & Root
  command: >
    {% if ncipher_preload %}"{{ preload_path }}" {% endif %}"{{ ejbca_home }}/../clientToolBox/ejbcaClientToolBox.sh"
    PKCS11HSMKeyTool test
    "{{ hsm_shared_library }}"
    "{{ item.slot_identifier }}"
    -password {{ item.slot_pin }}
  args:
    chdir: "{{ ejbca_home }}/../clientToolBox"
  become: yes
  become_user: "{{ ejbca_user }}"
  loop: "{{ management_generate_hsm_keys }}"
  no_log: true
  register: checking_existing_keys
  changed_when: '"Signature test of key " + item.key_label + ":" not in checking_existing_keys.stdout'
  when: management_generate_hsm_keys[0] is defined

- name: Generate key if it does not exist for Management & Root
  command: >
    {% if ncipher_preload %}"{{ preload_path }}" {% endif %}"{{ ejbca_home }}/../clientToolBox/ejbcaClientToolBox.sh"
    PKCS11HSMKeyTool generate
    {% if item.item.slot_conf is defined %}"{{ item.item.slot_conf.dest }}"{% else %}"{{ hsm_shared_library }}"{% endif %}
    "{{ item.item.key_size }}"
    "{{ item.item.key_label }}"
    {% if item.item.slot_conf is not defined %}"{{ item.item.slot_identifier }}"{% endif %}
    -password {{ item.item.slot_pin }}
  args:
    chdir: "{{ ejbca_home }}/../clientToolBox"
  become: yes
  become_user: "{{ ejbca_user }}"
  loop: "{{ checking_existing_keys.results }}"
  no_log: true
  when: item.changed

- name: Check if HSM keys exist for Sub CA
  command: >
    {% if ncipher_preload %}"{{ preload_path }}" {% endif %}"{{ ejbca_home }}/../clientToolBox/ejbcaClientToolBox.sh"
    PKCS11HSMKeyTool test
    "{{ hsm_shared_library }}"
    "{{ item.slot_identifier }}"
    -password {{ item.slot_pin }}
  args:
    chdir: "{{ ejbca_home }}/../clientToolBox"
  become: yes
  become_user: "{{ ejbca_user }}"
  loop: "{{ sub_generate_hsm_keys }}"
  no_log: true
  register: checking_existing_sub_keys
  changed_when: '"Signature test of key " + item.key_label + ":" not in checking_existing_sub_keys.stdout'
  when: sub_generate_hsm_keys[0] is defined

- name: Generate key if it does not exist for Sub CA
  command: >
    {% if ncipher_preload %}"{{ preload_path }}" {% endif %}"{{ ejbca_home }}/../clientToolBox/ejbcaClientToolBox.sh"
    PKCS11HSMKeyTool generate
    {% if item.item.slot_conf is defined %}"{{ item.item.slot_conf.dest }}"{% else %}"{{ hsm_shared_library }}"{% endif %}
    "{{ item.item.key_size }}"
    "{{ item.item.key_label }}"
    {% if item.item.slot_conf is not defined %}"{{ item.item.slot_identifier }}"{% endif %}
    -password {{ item.item.slot_pin }}
  args:
    chdir: "{{ ejbca_home }}/../clientToolBox"
  become: yes
  become_user: "{{ ejbca_user }}"
  loop: "{{ checking_existing_sub_keys.results }}"
  no_log: true
  when: item.changed
