---

- name: Key Binding Keys
  block:

    - name: Generate Keys for Key Bindings
      include_role:
        name: ansible-ejbca-ctb-keygen
      loop: "{{ ejbca_keybinding |subelements('crypto_token') }}"
      loop_control:
        label: "{{ key_item.0.slot_identifier_value }}"
        loop_var: key_item
      no_log: true
      tags: hsm_test, clienttoolbox_key_generation
      when: ("PKCS11CryptoToken" in key_item.0.tokentype)

  when: ejbca_keybinding[0] is defined

- name: Create Key Binding for Peering
  include_role:
    name: ansible-ejbca-key-binding
  vars:
    key_bindings: "{{ ejbca_keybinding }}"
    auth_key_bind: true
  when: 
    - use_external_va|bool or use_external_ra|bool or use_external_ss|bool  

- name: Create Peer Connector
  include_role:
    name: ansible-ejbca-peer-connector
  when: use_external_va|bool or use_external_ra|bool or use_external_ss|bool

- name: Prepare configdump template files
  include_tasks: config_configdump.yml
  when:
    - configdump_directory_structure is defined
    - configdump_import_files is defined

- name: Add External VA setup to EJBCA
  block:

    - name: Create External VA Publisher template files to import with configdump
      template:
        src: 'publisher-ocsp.yaml.j2'
        dest: '{{ ejbca_home }}/dump/va/publishers/ocspPublisher-{{ item.name }}.yaml'
      loop: "{{ ejbca_peerConnector }}"
      when: ("ocsp" in item.type)

    - name: Create External VA OCSP key update service template files to import with configdump
      template:
        src: "service-oscp-keyupdate.yaml.j2"
        dest: "{{ ejbca_home }}/dump/va/services/ocspKeyUpdate-{{ item.name }}.yaml"
      loop: "{{ ejbca_peerConnector }}"
      loop_control:
        label: "{{ item.name }}"
      when: 
        - ("ocsp" in item.type)
        - item.remote_key_update|bool

    - name: Create external VA services and publisher with configdump
      command: "./configdump.sh import  --ignore-errors --overwrite update --non-interactive continue -l {{ ejbca_home }}/dump/va"
      args:
        chdir: "{{ ejbca_home }}/dist/configdump"
      become: yes 
      become_user: "{{ ejbca_user }}"

  when: use_external_va|bool

- name: Import configdump of profiles, services, & publishers
  command: "./configdump.sh import --ignore-errors --overwrite update --non-interactive continue -l {{ ejbca_home }}/dump/dump3"
  args:
    chdir: "{{ ejbca_home }}/dist/configdump"
  become: yes 
  become_user: "{{ ejbca_user }}"

- name: Create external RA role with configdump
  command: "./configdump.sh import --ignore-errors --overwrite update --non-interactive continue -l {{ ejbca_home }}/dump/ra"
  args:
    chdir: "{{ ejbca_home }}/dist/configdump"
  become: yes 
  become_user: "{{ ejbca_user }}"
  when: use_external_ra|bool