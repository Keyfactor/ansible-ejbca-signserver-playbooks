---
# defaults file for ansible-ejbca-ca-ee
ejbca_csr_dir_output: "{{ playbook_dir }}/ejbcaCSR"
ejbca_root_dir: /opt
ejbca_home: "{{ ejbca_root_dir }}/ejbca"
ejbca_sh: "{{ ejbca_home }}/bin/ejbca.sh"
wildfly_install_dir: /opt
wildfly_home: "{{ wildfly_install_dir }}/wildfly"
wildfly_manage_service: true
ejbca_group: wildfly
ejbca_user: wildfly

# Used to name the Root & Sub CA templates
organizationName: Solitude
organizationNameShort: "{{ organizationName }}"
organizationNameCRL: "{{ organizationName }}"
countryName: US
superAdminCn: "Super PKI Administrator"
organizationDomainName: solitude.skyrim

# location to copy p12 to locally
superadmin_local_dir: ~/Desktop

# If enabled this will configure a publisher for OCSP, OCSP signer key update service, OSCP publishing queue, OCSP publisher to the certificate profiles,
# create Peer connection, and create an auth key binding
use_external_va: true

# If enabled this will configure a Peer connection, and add the RA Peer role to EJBCA 
use_external_ra: true

# If enabled configures a Peer connectiona nd key binding for Sign Server
use_external_ss: true


enable_crl_crontab: true

# apply_indexes: If default EJBCA database indexes should be applied. Will always report change if true
# database_name: Name of EJBCA database
management_database_indexes:
  apply_indexes: true
  database_name: ejbca

ejbca_database_indexes:
  - index: "--file {{ ejbca_home }}/doc/sql-scripts/create-index-ejbca.sql"
  - index: "--execute 'ALTER TABLE AuditRecordData row_format=compressed key_block_size=4;'"
  - index: "--execute 'ALTER TABLE CertReqHistoryData row_format=compressed key_block_size=4;'"
  - index: "--execute 'ALTER TABLE CRLData row_format=compressed key_block_size=16;'"
  - index: "--execute 'ALTER TABLE CertificateData row_format=compressed key_block_size=8;'"
  - index: "--execute 'ALTER TABLE UserData row_format=compressed key_block_size=4;'"
  #- index: "/usr/bin/mysql -u root --password={{ mariadb_root_password }} {{ management_database_indexes.database_name }} -s -e 'source {{ ejbca_home }}/doc/sql-scripts/create-index-ejbca.sql'"
  #- index: "/usr/bin/mysql -u root --password={{ mariadb_root_password }} {{ management_database_indexes.database_name }} -s -e 'ALTER TABLE AuditRecordData row_format=compressed key_block_size=4;'"
  #- index: "/usr/bin/mysql -u root --password={{ mariadb_root_password }} {{ management_database_indexes.database_name }} -s -e 'ALTER TABLE CertReqHistoryData row_format=compressed key_block_size=4;'"
  #- index: "/usr/bin/mysql -u root --password={{ mariadb_root_password }} {{ management_database_indexes.database_name }} -s -e 'ALTER TABLE CRLData row_format=compressed key_block_size=16;'"
  #- index: "/usr/bin/mysql -u root --password={{ mariadb_root_password }} {{ management_database_indexes.database_name }} -s -e 'ALTER TABLE CertificateData row_format=compressed key_block_size=8;'"
  #- index: "/usr/bin/mysql -u root --password={{ mariadb_root_password }} {{ management_database_indexes.database_name }} -s -e 'ALTER TABLE UserData row_format=compressed key_block_size=4;'"

# If true, allows running application server service via preload
ncipher_preload: false
# Path to the preload executable
preload_path: /opt/nfast/bin/preload
# HSM PKCS#11 shared library location
hsm_shared_library: /usr/lib64/libsofthsm2.so

# List of HSM slots that should be tested that they are accessible
management_test_slots:
#  - slot_identifier: i0
#    slot_pin: "{{ encrypted_databaseprotection_token_pin | default('foo123') }}"
  - slot_identifier: "{{ management_add_certification_authorities[0].pkcs11_token.slot_identifier_type }}:{{ management_add_certification_authorities[0].pkcs11_token.slot_identifier_value }}"
    slot_pin: "{{ encrypted_mgmtca_token_pin | default('foo123') }}"
  - slot_identifier: "{{ management_add_certification_authorities[1].pkcs11_token.slot_identifier_type }}:{{ management_add_certification_authorities[1].pkcs11_token.slot_identifier_value }}"
    slot_pin: "{{ encrypted_rootca_token_pin | default('foo123') }}"
  - slot_identifier: "{{ ejbca_peer_crypto_token[0].slot_identifier }}"
    slot_pin: "{{ encrypted_peerKeyBinding_token_pin | default('foo123') }}"

# List of HSM slots that should be tested that they are accessible
sub_test_slots:
#  - slot_identifier: i0
#    slot_pin: "{{ encrypted_databaseprotection_token_pin | default('foo123') }}"
  - slot_identifier: "{{ sub_add_certification_authorities[0].pkcs11_token.slot_identifier_type }}:{{ sub_add_certification_authorities[0].pkcs11_token.slot_identifier_value }}"
    slot_pin: "{{ encrypted_subca_token_pin | default('foo123') }}"

# EJBCA audit log database protection configurations
# slot_index: Index of HSM slot used for database integrity protection
# key_label: Label of key used for database integrity protection
# signature_algorithm: Algorithm used to sign database rows
# token_pin: PIN used to access HSM slot. Should be encrypted with Ansible vault
ejbca_databaseprotection:
  slot_label: DB_Protect_SLOT
  slot_identifier_type: "SLOT_LABEL"
  slot_index: 0
  key_label: dbProtect0001
  signature_algorithm: SHA256WithRSA
  key_size: "3072"
  token_pin: "{{ encrypted_databaseprotection_token_pin | default('foo123') }}"
  testkey_label: "testKey"

# Crypto Token for Key Binding for Peer Connections.  This will create 1 key to use for peering from the CA to VA or RA
ejbca_peer_crypto_token:
  - name: peeringCryptoToken
    slot_label: KeyBinding_SLOT
    slot_identifier_type: "SLOT_LABEL"
    type: PKCS11CryptoToken
    slot_index: 0
    slot_pin: "{{ encrypted_peerKeyBinding_token_pin | default('foo123') }}"
    slot_identifier: "SLOT_LABEL:KeyBinding_SLOT"
    ocsp_key_size: "3072"
    ocsp_key_label: peerKeyBindingOcsp0001
    ra_key_size: "3072"
    ra_key_label: peerKeyBindingRa0001
    sign_key_size: "3072"
    sign_key_label: peerKeyBindingSign0001

ejbca_keybinding:
  - name: peerClient-ocsp
    crypto_token_name: peeringCryptoToken
    key_label: "{{ ejbca_peer_crypto_token[0].ocsp_key_label }}"
    signature_algorithm: SHA256WithRSA
    dn: "C={{ countryName }},OU=Peering,O={{ organizationName }},CN=peerClient-ocsp"
    caname: "ManagementCA"
    token: "USERGENERATED"
    password: "{{ encrypted_keybind_enrollment_code | default('foo123') }}"
    certprofile: tlsPeerConnector
    eeprofile: tlsPeerConnMgmt
    useType: ocsp
    enabled: "{{ use_external_va }}"
  - name: peerClient-ra
    crypto_token_name: peeringCryptoToken
    key_label: "{{ ejbca_peer_crypto_token[0].ra_key_label }}"
    signature_algorithm: SHA256WithRSA
    dn: "C={{ countryName }},OU=Peering,O={{ organizationName }},CN=peerClient-ra"
    caname: "ManagementCA"
    token: "USERGENERATED"
    password: "{{ encrypted_keybind_enrollment_code | default('foo123') }}"
    certprofile: tlsPeerConnector
    eeprofile: tlsPeerConnMgmt
    useType: ra
    enabled: "{{ use_external_ra }}"
  - name: peerClient-sign
    crypto_token_name: peeringCryptoToken
    key_label: "{{ ejbca_peer_crypto_token[0].sign_key_label }}"
    signature_algorithm: SHA256WithRSA
    dn: "C={{ countryName }},OU=Peering,O={{ organizationName }},CN=peerClient-sign"
    caname: "ManagementCA"
    token: "USERGENERATED"
    password: "{{ encrypted_keybind_enrollment_code | default('foo123') }}"
    certprofile: tlsPeerConnector
    eeprofile: tlsPeerConnMgmt
    useType: sign
    enabled: "{{ use_external_ss }}"

# List of Peer Connectors to create
ejbca_peerConnector:
  - name: OCSP-01
    url: "https://ocsp01.{{ organizationDomainName }}/ejbca/peer/v1"
    keybinding: "{{ ejbca_keybinding[0].name }}"
    type: ocsp
    enabled: "{{ use_external_va }}"
  - name: RA-01
    url: "https://ra01.{{ organizationDomainName }}/ejbca/peer/v1"
    keybinding: "{{ ejbca_keybinding[1].name }}"
    type: ra
    enabled: "{{ use_external_ra }}"
  - name: Sign-01
    url: "https://sign01.{{ organizationDomainName }}/signserver/peer/v1"
    keybinding: "{{ ejbca_keybinding[2].name }}"
    type: sign
    enabled: "{{ use_external_ss }}"  


# Database root user password. Should be encrypted with Ansible vault
database_rootuser_password: "{{ encrypted_database_rootuser_password | default('root') }}"

# List of certification authorities that should be added using CLI
# caname: CA name
# certprofile: Certificate profile
# dn: CA distinguished name
# subjectaltname: CA subject alt name
# validity: Validity time or end date
# policy: "null" or policy oid
# keytype: RSA, DSA or ECDSA
# keyspec: Size of RSA keys, size of DSA keys or name of curve for ECDSA keys
# signalg: Signature algorithm
# tokentype: "soft" or "org.cesecore.keys.token.PKCS11CryptoToken"
# tokenpass: Password for the CA token
# pkcs11_token: Dict of parameters needed for PKCS11 token
# slot_identifier_type: "SLOT_LABEL", "SLOT_INDEX" or "SLOT_NUMBER"
# slot_identifier_value: Slot identifier
# signkey_label: Signing key label
# defaultkey_label: Default (encryption) key label
# testkey_label: Test key label
# The order must be Management CA and then Root CA
management_add_certification_authorities:
  - caname: "ManagementCA"
    certprofile: "managementCA"
    dn: "CN=ManagementCA,OU=Certification Authorities,O={{ organizationName }},C={{ countryName }}"
    subjectaltname: ""
    validity: "3650"
    validity_yml: "10y"
    policy: "null"
    keytype: "RSA"
    keyspec: "3072"
    signalg: "SHA384WithRSA"
    serial_number_octet_size: 20
    pre_produce_ocsp_responses: false
    store_responses_on_demand: false
    use_append_only_table: false
    use_utf8_in_policy_notice_text: false
    defaultCRLDP: "http://crl.{{ organizationDomainName }}/CRLs/{{ organizationName}}-mgmtca.crl"
    defaultOCSPServiceLocator: "http://ocsp.{{ organizationDomainName }}/ocsp"
    authorityInformationAccess: "http://aia.{{ organizationDomainName }}/CertsIssuedTo{{ organizationName}}Mgmtca.p7b"
    certificateAiaDefaultCaIssuerUri: "http://aia.{{ organizationDomainName }}/CertsIssuedTo{{ organizationName}}-mgmtca.p7b"
    crlPeriod: 259200000
    crlPeriod_yml: 3d
    crlIssueInterval: 86400000
    crlIssueInterval_yml: 1d
    crl_overlap_time: 10m
    delta_crl_period: 0m
    useLdapDnOrder: false
    enforce_unique_public_keys: true
    enforce_key_renewal: false
    enforce_unique_dn: true
    user_storage: true
    certificate_storage: true
    accept_revocations_for_non_existing_entries: false
    finish_user: true
    ca_healthcheck_enabled: true
    request_processor: null
    cryptotoken_enable_auto_activate: true
    tokentype: "org.cesecore.keys.token.PKCS11CryptoToken"
    tokenpass: "{{ encrypted_mgmtca_token_pin | default('foo123') }}"
    pkcs11_token:
      slot_identifier_type: "SLOT_LABEL"
      slot_identifier_value: "Management_CA_SLOT"
      signkey_label: "signKey00001"
      defaultkey_label: "defaultKey00001"
      testkey_label: "testKey"
  - caname: "{{ organizationNameShort }}-Root-CA"
    certprofile: "RootCA-{{ organizationName }}-G1"
    dn: "CN={{ organizationName }} Root CA G1,OU=Certification Authorities,O={{ organizationName }},C={{ countryName }}"
    subjectaltname: ""
    validity: "9125"
    validity_yml: "25y"
    policy: "null"
    keytype: "RSA"
    keyspec: "4096"
    signalg: "SHA512WithRSA"
    serial_number_octet_size: 20
    pre_produce_ocsp_responses: false
    store_responses_on_demand: false
    use_append_only_table: false
    use_utf8_in_policy_notice_text: false
    defaultCRLDP: "http://crl.{{ organizationDomainName }}/CRLs/{{ organizationNameShort }}-rootca-g1.crl"
    defaultOCSPServiceLocator: "http://ocsp.{{ organizationDomainName }}/ocsp"
    authorityInformationAccess: "http://aia.{{ organizationDomainName }}/AIA/CertsIssuedTo{{ organizationNameShort }}RootCAG1.p7b"
    certificateAiaDefaultCaIssuerUri: "http://aia.{{ organizationDomainName }}/AIA/CertsIssuedTo{{ organizationNameShort }}RootCAG1.p7b"
    crlPeriod: 15552000000
    crlPeriod_yml: 6mo
    crlIssueInterval: 0
    crlIssueInterval_yml: 0m
    crl_overlap_time: 10m
    delta_crl_period: 0m
    useLdapDnOrder: false
    enforce_unique_public_keys: true
    enforce_key_renewal: false
    enforce_unique_dn: true
    user_storage: true
    certificate_storage: true
    accept_revocations_for_non_existing_entries: false
    finish_user: true
    ca_healthcheck_enabled: true
    request_processor: null
    cryptotoken_enable_auto_activate: true
    tokentype: "org.cesecore.keys.token.PKCS11CryptoToken"
    tokenpass: "{{ encrypted_rootca_token_pin | default('foo123') }}"
    pkcs11_token:
      slot_identifier_type: "SLOT_LABEL"
      slot_identifier_value: "Root_CA_SLOT"
      signkey_label: "signKey00001"
      defaultkey_label: "defaultKey00001"
      testkey_label: "testKey"

# List of certification authorities that should be added using CLI
# caname: CA name
# certprofile: Certificate profile
# dn: CA distinguished name
# subjectaltname: CA subject alt name
# validity: Validity time or end date
# policy: "null" or policy oid
# keytype: RSA, DSA or ECDSA
# keyspec: Size of RSA keys, size of DSA keys or name of curve for ECDSA keys
# signalg: Signature algorithm
# externalcachain_url: URL to download CA chain for creating a CA signed by an external CA
# tokentype: "soft" or "org.cesecore.keys.token.PKCS11CryptoToken"
# tokenpass: Password for the CA token
# pkcs11_token: Dict of parameters needed for PKCS11 token
# slot_identifier_type: "SLOT_LABEL", "SLOT_INDEX" or "SLOT_NUMBER"
# slot_identifier_value: Slot identifier
# signkey_label: Signing key label
# defaultkey_label: Default (encryption) key label
# testkey_label: Test key label
sub_add_certification_authorities:
  - caname: "{{ organizationNameShort }}-Sub-CA"
    certprofile: "SubCA-{{ organizationName }}-G1"
    dn: "CN={{ organizationName }} Issuing CA G1,OU=Certification Authorities,O={{ organizationName }},C={{ countryName }}"
    #rootDn: "CN={{ organizationName }} Root CA G1,OU=Certification Authorities,O={{ organizationName }},C={{ countryName }}"
    rootDn: "{{ organizationNameShort }}-Root-CA"
    subjectaltname: ""
    validity: "3650"
    validity_yml: "10y"
    policy: "null"
    keytype: "RSA"
    keyspec: "3072"
    signalg: "SHA384WithRSA"
    serial_number_octet_size: 20
    pre_produce_ocsp_responses: false
    store_responses_on_demand: false
    use_append_only_table: false
    use_utf8_in_policy_notice_text: false
    defaultCRLDP: "http://crl.{{ organizationDomainName }}/CRLs/{{ organizationNameShort }}-subca-g1.crl"
    defaultOCSPServiceLocator: "http://ocsp.{{ organizationDomainName }}/ocsp"
    authorityInformationAccess: "http://aia.{{ organizationDomainName }}/AIA/CertsIssuedTo{{ organizationNameShort }}SubCAG1.p7b"
    certificateAiaDefaultCaIssuerUri: "http://aia.{{ organizationDomainName }}/AIA/CertsIssuedTo{{ organizationNameShort }}SubCAG1.p7b"
    crlPeriod: 259200000
    crlPeriod_yml: 3d
    crlIssueInterval: 86400000
    crlIssueInterval_yml: 1d
    crl_overlap_time: 10m
    delta_crl_period: 0m
    useLdapDnOrder: false
    enforce_unique_public_keys: true
    enforce_key_renewal: false
    enforce_unique_dn: false
    user_storage: true
    certificate_storage: true
    accept_revocations_for_non_existing_entries: false
    finish_user: true
    ca_healthcheck_enabled: true
    request_processor: null
    #doEnforceUniqueDistinguishedName: false
    externalcachain_url: 
    externalcachain_file:
    cryptotoken_enable_auto_activate: true
    tokentype: "org.cesecore.keys.token.PKCS11CryptoToken"
    tokenpass: "{{ encrypted_subca_token_pin | default('foo123') }}" 
    pkcs11_token:
      slot_identifier_type: "SLOT_LABEL"
      slot_identifier_value: "Sub_CA_SLOT"
      signkey_label: "signKey00001"
      defaultkey_label: "defaultKey00001"
      testkey_label: "testKey"
  #- caname: "{{ organizationNameShort }}-Sub-CA"
  #  certprofile: "SubCA-{{ organizationName }}-G1"
  #  dn: "CN={{ organizationName }} Issuing CA G1,OU=Certification Authorities,O={{ organizationName }},C={{ countryName }}"
  #  rootDn: "External"
  #  subjectaltname: ""
  #  validity: "3650"
  # validity_yml: "10y"
  #  policy: "null"
  #  keytype: "RSA"
  # keyspec: "3072"
  #  signalg: "SHA384WithRSA"
  #  tokentype: "org.cesecore.keys.token.PKCS11CryptoToken"
  #  tokenpass: "{{ encrypted_subca_token_pin | default('foo123') }}"
  #  defaultCRLDP: "http://crl.{{ organizationDomainName }}/CRLs/{{ organizationNameShort }}-subca-g1.crl"
  #  defaultOCSPServiceLocator: "http://ocsp.{{ organizationDomainName }}/ocsp"
  #  authorityInformationAccess: "http://aia.{{ organizationDomainName }}/AIA/CertsIssuedTo{{ organizationNameShort }}SubCAG1.p7b"
  #  certificateAiaDefaultCaIssuerUri: "http://aia.{{ organizationDomainName }}/AIA/CertsIssuedTo{{ organizationNameShort }}SubCAG1.p7b"
  #  crlPeriod: 259200000
  #  crlIssueInterval: 86400000
  #  useLdapDnOrder: false
  #  doEnforceUniqueDistinguishedName: false
  #  externalcachain_url: http://it-ca.pkihosted-dev.c2company.com/ejbca/publicweb/webdist/certdist?cmd=cachain&caid=-271613628&format=pem
  #  externalcachain_file: /var/tmp/rootca.pem
  #  pkcs11_token:
  #    slot_identifier_type: "SLOT_LABEL"
  #    slot_identifier_value: "Sub_CA_SLOT"
  #    signkey_label: "signKey00001"
  #    defaultkey_label: "defaultKey00001"
  #    testkey_label: "testKey"

# List of HSM keys that should be generated using clientToolBox
# key_label: Key label
# key_size: RSA key size, name of ECC curve or DSA key using syntax DSAnnnn
# slot_identifier: Slot identifier
# slot_pin: Slot PIN
# slot_conf: Dict of parameters if slot config file is used
# src: Slot config template
# dest: Slot config destination
management_generate_hsm_keys:
  - key_label: "{{ ejbca_databaseprotection.key_label }}"
    key_size: "{{ ejbca_databaseprotection.key_size }}"
    slot_identifier: "{{ ejbca_databaseprotection.slot_identifier_type }}:{{ ejbca_databaseprotection.slot_label }}"
    slot_label: "{{ ejbca_databaseprotection.slot_label }}"
    #slot_conf:
      #src: "slot-module.cfg.j2"
      #dest: "{{ ejbca_home }}/../ejbca-custom/slot-dbprotect.cfg"
    slot_pin: "{{ ejbca_databaseprotection.token_pin }}"
  - key_label: "{{ ejbca_databaseprotection.testkey_label }}"
    key_size: "1024"
    slot_identifier: "{{ ejbca_databaseprotection.slot_identifier_type }}:{{ ejbca_databaseprotection.slot_label }}"
    slot_lable: "{{ ejbca_databaseprotection.slot_label }}"
    slot_pin: "{{ ejbca_databaseprotection.token_pin }}"
  - key_label: "{{ management_add_certification_authorities[0].pkcs11_token.signkey_label }}"
    key_size: "{{ management_add_certification_authorities[0].keyspec }}"
    slot_identifier: "{{ management_add_certification_authorities[0].pkcs11_token.slot_identifier_type }}:{{ management_add_certification_authorities[0].pkcs11_token.slot_identifier_value }}"
    slot_pin: "{{ management_add_certification_authorities[0].tokenpass }}"
  - key_label: "{{ management_add_certification_authorities[0].pkcs11_token.defaultkey_label }}"
    key_size: "{{ management_add_certification_authorities[0].keyspec }}"
    slot_identifier: "{{ management_add_certification_authorities[0].pkcs11_token.slot_identifier_type }}:{{ management_add_certification_authorities[0].pkcs11_token.slot_identifier_value }}"
    slot_pin: "{{ management_add_certification_authorities[0].tokenpass }}"
  - key_label: "{{ management_add_certification_authorities[0].pkcs11_token.testkey_label }}"
    key_size: "1024"
    slot_identifier: "{{ management_add_certification_authorities[0].pkcs11_token.slot_identifier_type }}:{{ management_add_certification_authorities[0].pkcs11_token.slot_identifier_value }}"
    slot_pin: "{{ management_add_certification_authorities[0].tokenpass }}"
  - key_label: "{{ management_add_certification_authorities[1].pkcs11_token.signkey_label }}"
    key_size: "{{ management_add_certification_authorities[1].keyspec }}"
    slot_identifier: "{{ management_add_certification_authorities[1].pkcs11_token.slot_identifier_type }}:{{ management_add_certification_authorities[1].pkcs11_token.slot_identifier_value }}"
    slot_pin: "{{ management_add_certification_authorities[1].tokenpass }}"
  - key_label: "{{ management_add_certification_authorities[1].pkcs11_token.defaultkey_label }}"
    key_size: "{{ management_add_certification_authorities[1].keyspec }}"
    slot_identifier: "{{ management_add_certification_authorities[1].pkcs11_token.slot_identifier_type }}:{{ management_add_certification_authorities[1].pkcs11_token.slot_identifier_value }}"
    slot_pin: "{{ management_add_certification_authorities[1].tokenpass }}"
  - key_label: "{{ management_add_certification_authorities[1].pkcs11_token.testkey_label }}"
    key_size: "1024"
    slot_identifier: "{{ management_add_certification_authorities[1].pkcs11_token.slot_identifier_type }}:{{ management_add_certification_authorities[1].pkcs11_token.slot_identifier_value }}"
    slot_pin: "{{ management_add_certification_authorities[1].tokenpass }}"
  - key_label: "{{ ejbca_peer_crypto_token[0].ocsp_key_label }}"
    key_size: "{{ ejbca_peer_crypto_token[0].ocsp_key_size }}"
    slot_identifier: "{{ ejbca_peer_crypto_token[0].slot_identifier}}"
    slot_pin: "{{ encrypted_peerKeyBinding_token_pin | default('foo123') }}"
  - key_label: "{{ ejbca_peer_crypto_token[0].ra_key_label }}"
    key_size:  "{{ ejbca_peer_crypto_token[0].ra_key_size }}"
    slot_identifier: "{{ ejbca_peer_crypto_token[0].slot_identifier }}"
    slot_pin: "{{ encrypted_peerKeyBinding_token_pin | default('foo123') }}"
  - key_label: "{{ ejbca_peer_crypto_token[0].sign_key_label }}"
    key_size:  "{{ ejbca_peer_crypto_token[0].sign_key_size }}"
    slot_identifier: "{{ ejbca_peer_crypto_token[0].slot_identifier }}"
    slot_pin: "{{ encrypted_peerKeyBinding_token_pin | default('foo123') }}"
# List of HSM keys that should be generated using clientToolBox
# key_label: Key label
# key_size: RSA key size, name of ECC curve or DSA key using syntax DSAnnnn
# slot_identifier: Slot identifier
# slot_pin: Slot PIN
# slot_conf: Dict of parameters if slot config file is used
# src: Slot config template
# dest: Slot config destination
sub_generate_hsm_keys:
  - key_label: "{{ sub_add_certification_authorities[0].pkcs11_token.signkey_label }}"
    key_size: "{{ sub_add_certification_authorities[0].keyspec }}"
    slot_identifier: "{{ sub_add_certification_authorities[0].pkcs11_token.slot_identifier_type }}:{{ sub_add_certification_authorities[0].pkcs11_token.slot_identifier_value }}"
    slot_pin: "{{ sub_add_certification_authorities[0].tokenpass }}"
  - key_label: "{{ sub_add_certification_authorities[0].pkcs11_token.defaultkey_label }}"
    key_size: "{{ sub_add_certification_authorities[0].keyspec }}"
    slot_identifier: "{{ sub_add_certification_authorities[0].pkcs11_token.slot_identifier_type }}:{{ sub_add_certification_authorities[0].pkcs11_token.slot_identifier_value }}"
    slot_pin: "{{ sub_add_certification_authorities[0].tokenpass }}"
  - key_label: "{{ sub_add_certification_authorities[0].pkcs11_token.testkey_label }}"
    key_size: "1024"
    slot_identifier: "{{ sub_add_certification_authorities[0].pkcs11_token.slot_identifier_type }}:{{ sub_add_certification_authorities[0].pkcs11_token.slot_identifier_value }}"
    slot_pin: "{{ sub_add_certification_authorities[0].tokenpass }}"


# List of end entities that should be added using CLI
# username: Username in EJBCA
# dn: End entity distinguished name
# caname: Issuing CA name
# token: Token type
# password: Enrollment code/keystore password
management_add_end_entities:
  - username: "SkyrimSuperAdministrator"
    dn: "C={{ countryName }},O={{ organizationName }},OU=Administrators,CN={{ superAdminCn }}"
    caname: "ManagementCA"
    token: "P12"
    password: "{{ encrypted_superadmin_enrollment_code | default('foo123') }}"
    certprofile: adminMgmtCA
    eeprofile: AdminInternal  

# List of administrator role members that should be added using CLI
# role: Name of EJBCA administrator role
# caname: Name in EJBCA of issuing CA
# match_with: e.g. WITH_COMMONNAME or WITH_SERIALNUMBER, see EJBCA documentation for all available options
# match_value: Match value
management_add_administrators:
  - role: "Super Administrator Role"
    caname: "ManagementCA"
    match_with: "WITH_COMMONNAME"
    match_value: "{{ superAdminCn }}"

# Passphrase for the application user SSH key. Default is no passphrase. Should be encrypted in Ansible Vault if set
management_ssh_key_passphrase:

# List of known hosts to be set for app_user
# Must be set if SSH keys used by EJBCA for SCP publishing should be created
#management_known_hosts:
#  - localhost

# List of users used with SCP for localhost publishing
#management_scp_localhost_receiving_users:
#  - "{{ ejbca_user }}"

# List of localhost SCP publishing archives
# path: Archive directory location
# owner: Archive directory owner
# group: Archive directory group
#management_scp_localhost_archive_dirs:
#  - path: "/opt/web/CRLs/"
#    owner: "{{ ejbca_user }}"
#    group: "{{ ejbca_group }}"

#Services
#
#primekey_service_crl_name: DailyCRLUpdate
# Options are DAYS, MINUTES, SECONDS, HOURS
#primekey_service_crl_int_unit: MINUTES
#primekey_service_crl_int: 5

certification_authorities_crl_files:
  - crlfilename: "{{ organizationNameShort }}-mgmtca.crl"
    cadn: "CN%3dManagementCA%2cOU%3dCertification+Authorities%2cO%3d{{ organizationNameCRL }}%2cC%3d{{ countryName }}"
  - crlfilename: "{{ organizationNameShort }}-rootca-g1.crl"
    cadn: "CN%3d{{ organizationNameCRL }}+Root+CA+G1%2cOU%3dCertification+Authorities%2cO%3d{{ organizationNameCRL }}%2cC%3d{{ countryName }}"
  - crlfilename: "{{ organizationNameShort }}-subca-g1.crl"
    cadn: "CN%3d{{ organizationNameCRL }}Issuing+CA+G1%2cOU%3dCertification+Authorities%2cO%3d{{ organizationNameCRL }}%2cC%3d{{ countryName }}"

configdump_dir_structure:
  - "{{ ejbca_home }}/dump/dump1/certificate-profiles"
  - "{{ ejbca_home }}/dump/dump1/extended-key-usage"
  - "{{ ejbca_home }}/dump/dump1/certification-authorities"
  - "{{ ejbca_home }}/dump/dump2/certificate-profiles"
  - "{{ ejbca_home }}/dump/dump2/certification-authorities"
  - "{{ ejbca_home }}/dump/dump2/end-entity-profiles"
  - "{{ ejbca_home }}/dump/dump2/services"
  - "{{ ejbca_home }}/dump/dump2/custom-certificate-extensions"
  - "{{ ejbca_home }}/dump/dump3/admin-roles"
  - "{{ ejbca_home }}/dump/dump3/certificate-profiles"
  - "{{ ejbca_home }}/dump/dump3/end-entity-profiles"
  - "{{ ejbca_home }}/dump/dump3/services"
  - "{{ ejbca_home }}/dump/dump3/publishers"
  - "{{ ejbca_home }}/dump/dump3/acme-config"
  - "{{ ejbca_home }}/dump/dump3/est-config"
  - "{{ ejbca_home }}/dump/dump3/scep-config"
  - "{{ ejbca_home }}/dump/va/services"
  - "{{ ejbca_home }}/dump/va/publishers"  
  - "{{ ejbca_home }}/dump/ra/admin-roles" 
  
configdump_files:
  - src: 'cp-RootCA-G1.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump1/certificate-profiles/RootCA-{{ organizationNameShort }}-G1.yaml'
  - src: 'cp-managementCA.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump1/certificate-profiles/ManagementCA.yaml'
  - src: 'extended-key-usages.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump1/extended-key-usage/extended-key-usages.yaml'
    # Files for the 2nd dump import
  - src: 'cp-SubCA-G1.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump2/certificate-profiles/SubCA-{{ organizationNameShort }}-G1.yaml'
  - src: 'cp-HashiCorp-SubCA-G1.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump2/certificate-profiles/HashiCorp-SubCA-G1.yaml'
  - src: 'cp-tlsPeerConnector.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump2/certificate-profiles/tlsPeerConnector.yaml'
  - src: 'ee-tlsPeerConnMgmt.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump2/end-entity-profiles/tlsPeerConnMgmt.yaml'
  - src: 'service-DailyCRLUpdate.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump2/services/DailyCRLUpdate.yaml'
  - src: 'service-HSM_Keepalive.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump2/services/HSM_Keepalive.yaml'
  - src: 'ext-id-piv-NACI.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump2/custom-certificate-extensions/id-piv-NACI.yaml'
  - src: 'ext-certTempInfo.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump2/custom-certificate-extensions/certTempInfo.yaml'
    # Files for the 3rd dump import
  - src: 'global-acme-configuration.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump3/acme-config/global-acme-configuration.yaml'
  - src: 'acme-alias-1.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump3/acme-config/acme-alias-1.yaml'
  - src: 'ee-AdminInternal.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump3/end-entity-profiles/AdminInternal.yaml'
  - src: 'ee-tlsServerAcme.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump3/end-entity-profiles/tlsServerAcme.yaml'
  - src: 'ee-tlsServerOrg.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump3/end-entity-profiles/tlsServer{{ organizationNameShort }}.yaml'
  - src: 'ee-ocspSigner.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump3/end-entity-profiles/ocspSigner.yaml'
  - src: 'ee-tlsServerMgmt.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump3/end-entity-profiles/tlsServerMgmt.yaml'
  - src: 'ee-userAuthentication.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump3/end-entity-profiles/userAuthentication.yaml'
  - src: 'ee-userDigitalSignature.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump3/end-entity-profiles/userDigitalSignature.yaml'
  - src: 'ee-userEncryption.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump3/end-entity-profiles/userEncryption.yaml'
  - src: 'ee-intuneDevice.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump3/end-entity-profiles/intuneDevice.yaml'
  - src: 'ee-tlsServerApprovalOrg.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump3/end-entity-profiles/tlsServerApproval{{ organizationNameShort }}.yaml'
  - src: 'ee-codeSigning.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump3/end-entity-profiles/codeSigning.yaml'
  - src: 'ee-domainController.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump3/end-entity-profiles/domainController.yaml'
  - src: 'ee-estDevice.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump3/end-entity-profiles/estDevice.yaml'
  - src: 'ee-remoteDesktopAuth.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump3/end-entity-profiles/remoteDesktopAuth.yaml'
  - src: 'ee-scepDevice.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump3/end-entity-profiles/scepDevice.yaml'
  - src: 'ee-signersOrg.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump3/end-entity-profiles/signers{{ organizationNameShort }}.yaml'
  - src: 'ee-timeStampingAuthority.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump3/end-entity-profiles/timeStampingAuthority.yaml'
  - src: 'ee-vpnFirewall.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump3/end-entity-profiles/vpnFirewall.yaml'
  - src: 'ee-workstations.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump3/end-entity-profiles/workstations.yaml'
  - src: 'cp-tlsServerMgmtCA.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump3/certificate-profiles/tlsServerMgmtCA.yaml'
  - src: 'cp-AdminNoCDPMgmtCA.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump3/certificate-profiles/AdminNoCDPMgmtCA.yaml'
  - src: 'cp-tlsClientAuth.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump3/certificate-profiles/tlsClientAuth.yaml'
  - src: 'cp-tlsServerAuth.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump3/certificate-profiles/tlsServerAuth.yaml'
  - src: 'cp-tlsServerClientAuth.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump3/certificate-profiles/tlsServerClientAuth.yaml'
  - src: 'cp-adminMgmtCA.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump3/certificate-profiles/adminMgmtCA.yaml'
  - src: 'cp-DigitalSignature-2048.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump3/certificate-profiles/DigitalSignature-2048.yaml'
  - src: 'cp-Authentication-2048.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump3/certificate-profiles/Authentication-2048.yaml'
  - src: 'cp-Encryption-2048.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump3/certificate-profiles/Encryption-2048.yaml'
  - src: 'cp-tlsServerAuthAcme90d.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump3/certificate-profiles/tlsServerAuthAcme90d.yaml'
  - src: 'cp-ocspSigner.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump3/certificate-profiles/ocspSigner.yaml'
  - src: 'cp-intuneClientAuth-1y.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump3/certificate-profiles/intuneClientAuth-1y.yaml'
  - src: 'cp-tlsServerAuthApproval.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump3/certificate-profiles/tlsServerAuthApproval.yaml'
  - src: 'cp-tlsClientAuthApproval.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump3/certificate-profiles/tlsClientAuthApproval.yaml'
  - src: 'cp-tlsServerClientAuthApproval.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump3/certificate-profiles/tlsServerClientAuthApproval.yaml'
  - src: 'cp-signerCodeSigning.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump3/certificate-profiles/signerCodeSigning.yaml'
  - src: 'cp-signerTimeStampAuthority.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump3/certificate-profiles/signerTimeStampAuthority.yaml'
  - src: 'cp-signerPdf-3y.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump3/certificate-profiles/signerPdf-3y.yaml'
  - src: 'cp-signer-3y.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump3/certificate-profiles/signer-3y.yaml'
  - src: 'cp-domainController.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump3/certificate-profiles/domainController.yaml'
  - src: 'cp-remoteDesktopAuth.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump3/certificate-profiles/remoteDesktopAuth.yaml'
  - src: 'cp-vpnFirewall.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump3/certificate-profiles/vpnFirewall.yaml'
  - src: 'cp-workstation.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump3/certificate-profiles/workstation.yaml'
  - src: 'est-device.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump3/est-config/device.yam'
  - src: 'est-firewall.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump3/est-config/firewall.yaml'
  - src: 'scep-device.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump3/scep-config/device.yaml'
  - src: 'scep-firewall.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump3/scep-config/firewall.yaml'
  #- src: 'role-ra-inTune-Connector.yaml.j2'
    #dest: '{{ ejbca_home }}/dump/dump3/admin-roles/role-ra-inTune-Connector.yaml'
  - src: 'role-userEnrollment.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump3/admin-roles/role-userEnrollment.yaml'
  - src: 'role-ra-est.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump3/admin-roles/role-ra-est.yaml'
  - src: 'role-ra-vault.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump3/admin-roles/role-ra-vault.yaml'
    # Files for External VA
  - src: 'publisher-ocsp.yaml.j2'
    dest: '{{ ejbca_home }}/dump/va/publishers/ocspPublisher.yaml'
  - src: 'service-oscpService.yaml.j2'
    dest: '{{ ejbca_home }}/dump/va/services/oscpService.yaml'
  - src: 'service-oscp-keyupdate.yaml.j2'
    dest: '{{ ejbca_home }}/dump/va/services/oscp-keyupdate.yaml'
    # Files for External RA
  - src: 'role-ra-peer-connection.yaml.j2'
    dest: '{{ ejbca_home }}/dump/ra/admin-roles/role-ra-peer-connection.yaml'

disable_ejbca_protocols:
  - name: ACME
  - name: EST
  - name: OCSP
  - name: SCEP
  #- name: 'RA Web'

enable_ejbca_protocols:
  - name: Certstore
  - name: CMP
  - name: CRLstore
  - name: 'Public Web'
  - name: 'REST CA Management'
  - name: 'REST Certificate Management'
  - name: 'REST Crypto Token Management'
  - name: Webdist
  - name: 'Web Service'

crl_service_time_int: 5
crl_service_time_unit: MINUTES

# Configure the 
ra_peer_max_parallel_reqs: 50
ra_peer_min_parallel_reqs: 2

