---

organizationName: Solitude
organizationNameShort: "{{ organizationName }}"
organizationNameCRL: "{{ organizationName }}"
organizationDomainName: solitude.skyrim
countryName: US
superAdminCn: "17Jul2021-Skyrim-SA"
sharedVarsLocation: ~/ansible/ansibleCacheDir

peer_ca_cert_serial_numbers: "{{ lookup('file', '{{ sharedVarsLocation }}/peer_cert_serial_numbers.yml' ) | from_yaml }}"

# Maria DB configuration info
mariadb_root_password:  "{{ encrypted_database_rootuser_password | default('PrimeKeyPkI4all') }}"
mariadb_binlog_format: ROW
mariadb_databases:
  - name: ejbca
    collation: "utf8_general_ci"
    encoding: "utf8"
mariadb_users:
  - name: ejbca-usr
    password: "{{ encrypted_database_ejbcauser_password | default('ejbca') }}"
    priv: "ejbca.*:ALL"
    host: "%"
  - name: ejbca-usr
    password: "{{ encrypted_database_ejbcauser_password | default('ejbca') }}"
    priv: "ejbca.*:ALL"
    host: "localhost"

# Maria DB JDBC driver download URL
ejbca_jdbc_driver: https://dlm.mariadb.com/1496775/Connectors/java/connector-java-2.7.2/mariadb-java-client-2.7.2.jar
# Maria DB JDBC driver SHA256 hash
ejbca_jdbc_driver_checksum: sha256:a3f6776df0842cf65e7f158515012d5307da949f66042282e1ee4474dd19f448

# Wildfly Configuration Info
wildfly_version: 24.0.0.Final
wildfly_checksum: 08d1e420331d0b6ad6c36a4dd782a110152cabfa23439e6ecd9a7c4d50bffd01
wildfly_standalone_file: standalone-24.xml.datasource.j2
wildfly_use_galleon: true
wildfly_galleon_version: 4.2.8
#wildfly_galleon_checksum: sha256:049e1a588882c0c0335a95725c2942bd4e2f56a8743f52eba9eff4a19fda25b1 #4.2.6
wildfly_galleon_checksum: sha256:63ccfb1546fbe32a2222b61e9ae0a594be5f81a4d6e45cd22861eb158a5bfb06
#wildfly_jboss_client_checksum: sha256:fb9b638b04f0e54adc8343daed0fb07d38deadcc7ee8ba48a1c3ac44d9f87cff #WF 23
wildfly_jboss_client_checksum: sha256:fb633ed945d21de548b266f09b9467295571e429a301eae456713424cbc23464 # WF 24
# Disabling only works on Wildfly 20 or earlier, Wildfly 21 and later changed, remoting now requires infinispan cache
wildfly_disable_infinispan: true

# EJBCA version and deployment info
ejbca_version: 7.7.0
# If enabled Ansible controller is used as software repository for Apache Ant, EJBCA, and JDBC driver
use_local_repository: false
ejbca_remote_dir: ~/Downloads/PK-Software/ejbca_ee_7_7_0_VA.zip
ejbca_software_url: http://172.16.170.133:8080/ejbca/ejbca_ee_7_7_0_VA.zip
ejbca_src_dir_name: ejbca_ee_7_7_0_VA
ejbca_type: VA

# Location to write the CRL files on server
ejbca_crl_dir_enabled: false

#web.properties
web_httpserver_external_privhttps: 443
web_reqcertindb: false

ant_version: apache-ant-1.10.11-bin.tar.gz
ant_url: "https://mirror.olnevhost.net/pub/apache/ant/binaries/{{ ant_version }}"

# EJBCA VA property files
ejbca_templated_properties_files:
  - src: cesecore.properties.j2
    dest: "{{ ejbca_home }}/../ejbca-custom/conf/cesecore.properties"
  - src: database.properties.j2
    dest: "{{ ejbca_home }}/../ejbca-custom/conf/database.properties"
  - src: ejbca.properties.j2
    dest: "{{ ejbca_home }}/../ejbca-custom/conf/ejbca.properties"
  - src: web.properties.j2
    dest: "{{ ejbca_home }}/../ejbca-custom/conf/web.properties"
  - src: mail.properties.j2
    dest: "{{ ejbca_home }}/../ejbca-custom/conf/mail.properties"
  - src: ocsp.properties.j2
    dest: "{{ ejbca_home }}/../ejbca-custom/conf/ocsp.properties"
  - src: custom.properties.j2
    dest: "{{ ejbca_home }}/conf/custom.properties"

appsrv_datasources:
  - jndi_name: "java:/EjbcaDS"
    pool_name: ejbcads
    database_connection_type: mariadb
    database_driver_class: org.mariadb.jdbc.Driver
    database_jar_filename: mariadb-java-client.jar
    host: 127.0.0.1
    backup_host:
    port: 3306
    database: ejbca
    user: ejbca-usr
    credential_ref: dbPassword
    password: "{{ encrypted_database_ejbcauser_password | default('ejbca') }}"
    #if using a MSSQL or AzureSQL server configured for TLS 1.2, add a connection string. Below is a connection string for AzureSQL. Add ";" in front of connection string
    #if using AzureSQL set trustServerCertificate=true to trust the self signed certificate used and add ;integratedSecurity=true;authenticationScheme=JavaKerberos;
    #connection_parameters: ";encrypt=true;trustServerCertificate=false;hostNameInCertificate=*.database.windows.net;loginTimeout=30;sendStringParametersAsUnicode=false"

# Uncomment to configure Wildfly to send logs to a Syslog server 
#appsrv_syslogsources:
#  - name: SYSLOGTCP
#    enabled: true
#    log_level: INFO
#    ejbca_host: my.host
#    syslog_app_name: WildFly
#    syslog_server_address: my.graylog.server
#    syslog_server_port: 514
#    syslog_facility: local-use-1

# HSM Configuration
# Use softhsm for PKCS11
use_softhsm: true
use_ncipher: false
use_safenet_lunasa: false

# Slots to create for SoftHSM PKCS11
softhsm_gen_hsm_slots:
  - slot_name: OCSP_KeyBinding_SLOT
    slot_so_pin: "{{ encrypted_ocsp_so_token_pin | default('foo123') }}" 
    slot_pin: "{{ encrypted_ocsp_token_pin | default('foo123') }}"
  - slot_name: AZURE_AUTH_SLOT
    slot_so_pin: "{{ encrypted_azure_auth_so_token_pin | default('foo123') }}" 
    slot_pin: "{{ encrypted_azure_auth_token_pin | default('foo123') }}"

# If true, allows running application server service via preload
ncipher_preload: false
# Path to the preload executable
preload_path: /opt/nfast/bin/preload
# HSM PKCS#11 shared library location
hsm_shared_library: /usr/lib64/libsofthsm2.so
#hsm_shared_library: /usr/safenet/lunaclient/lib/libCryptoki2_64.so

# EJBCA CLI password to configure for the CLI account
ejbca_conf_cli_default_password: "{{ encrypted_ejbca_cli_password | default('ejbca') }}"
ejbca_conf_ca_cmskeystorepass: "{{ encrypted_ejbca_conf_ca_cmskeystorepass | default('ejbca') }}"

# Parameter specifying IP addresses authorized to access the healthcheck
# servlet. Use ';' for between multiple IPs.
# IPv6 address can be specified, for example 127.0.0.1;0:0:0:0:0:0:0:1.
# "ANY" can be specified to allow any remote IP.
ejbca_conf_healtcheck_authorizedips: 127.0.0.1

# web.properties file
# Set the hostname for configuring OAuth Reply URL
web_httpserver_hostname: "{{ httpd_identity_info.id_name }}"

# List of OCSP Signers to create on the External VA
ejbca_va_keybinding:
  - name: ocspSubSigningKey
    crypto_token_name: ocspCryptoToken
    tokentype: PKCS11CryptoToken
    tokenpass: "{{ encrypted_ocsp_token_pin | default('foo123') }}"
    cryptotoken_enable_auto_activate: true
    slot_identifier_type: "SLOT_LABEL"
    slot_identifier_value: OCSP_KeyBinding_SLOT
    crypto_token:
      - key_label: ocspSubSigningKey0001
        key_size: "3072"
        key_type: "RSA"
        type: ocsp_keybind
    signature_algorithm: SHA256WithRSA
    dn: "C={{ countryName }},O={{ organizationName }},OU=OCSP Signers,CN=OCSP Sub Signer"
    caname: "{{ organizationNameShort }}-Sub-CA"
    token: USERGENERATED
    certprofile: ocspSigner
    eeprofile: ocspSigner
  - name: ocspRootSigningKey
    crypto_token_name: ocspCryptoToken
    tokentype: PKCS11CryptoToken
    tokenpass: "{{ encrypted_ocsp_token_pin | default('foo123') }}"
    cryptotoken_enable_auto_activate: true
    slot_identifier_type: "SLOT_LABEL"
    slot_identifier_value: OCSP_KeyBinding_SLOT
    crypto_token:
      - key_label: ocspRootSigningKey0001
        key_size: "4096"
        key_type: "RSA"
        type: ocsp_keybind
    signature_algorithm: SHA256WithRSA
    dn: "C={{ countryName }},O={{ organizationName }},OU=OCSP Signers,CN=OCSP Root Signer"
    caname: "{{ organizationNameShort }}-Root-CA"
    token: USERGENERATED
    certprofile: ocspSigner
    eeprofile: ocspSigner
  - name: ocspMgmtSigningKey
    crypto_token_name: ocspCryptoToken
    tokentype: PKCS11CryptoToken
    tokenpass: "{{ encrypted_ocsp_token_pin | default('foo123') }}"
    cryptotoken_enable_auto_activate: true
    slot_identifier_type: "SLOT_LABEL"
    slot_identifier_value: OCSP_KeyBinding_SLOT
    crypto_token:
      - key_label: ocspMgmtSigningKey0001
        key_size: "3072"
        key_type: "RSA"
        type: ocsp_keybind
    signature_algorithm: SHA256WithRSA
    dn: "C={{ countryName }},O={{ organizationName }},OU=OCSP Signers,CN=OCSP Mgmt Signer"
    caname: "ManagementCA" 
    token: USERGENERATED
    certprofile: ocspSigner
    eeprofile: ocspSigner

# Map the variable into this variable that has the OCSP Signer CSR's to get get signed
identity_csr_info: "{{ ejbca_va_keybinding }}"
    
# 
httpd_create_aia_crl_dir: false

httpd_identity_info:
  id_name: "{{ identity_info[0].name }}"
  id_ca_cert_file: "{{ organizationNameShort }}-Sub-CA.crt"

identity_info:
  - dn: "C={{ countryName }},O={{ organizationName }},OU=Devices,CN=ocsp01.{{ organizationDomainName }}"
    name: "ocsp01.{{ organizationDomainName }}"
    full_dn: "C={{ countryName }},O={{ organizationName }},OU=Devices,CN=ocsp01.{{ organizationDomainName }}"
    username: va_httpd_tls
    password: "{{ encrypted_httpd_identity_password | default('foo123') }}"
    altname: "dNSName=ocsp01.{{ organizationDomainName }}"
    certprofile: tlsServerClientAuth
    eeprofile: "tlsServer{{ organizationNameShort }}"
    caname: "{{ organizationNameShort }}-Sub-CA"
    token: PEM

# List of CA's to export the CA cert from EJBCA CA nodes and import as an external CA into external RA/VA nodes.
# This variable is also used for exporting CRL's from EJBCA CA node to import into external RA/VA's
# caname: Name of the CA in EJBCA
# The superadmincn can be added to each CA to add a Common Name to the superadmin role.
# fullchain: Must be set to false for this to work by getting each CA certificate to import as an external CA
ejbca_ca_import:
  - caname: "ManagementCA"
    superadmincn: "{{ superAdminCn }}"
    fullchain: false
  - caname: "{{ organizationNameShort }}-Sub-CA"
    fullchain: false
  - caname: "{{ organizationNameShort }}-Root-CA"
    fullchain: false

# CA chains to add to the HTTPD trusted CA certificate file for certauth
# caname: Name of the CA in EJBCA
# fullchain: Must be set to true for this to work by getting the issuing CA chain and then adding that chain to the file
httpd_trusted_cas:
  - caname: "ManagementCA"
    fullchain: true
  - caname: "{{ organizationNameShort }}-Sub-CA"
    fullchain: true
