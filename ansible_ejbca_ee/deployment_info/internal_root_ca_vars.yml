---

organizationName: Solitude
organizationNameShort: "{{ organizationName }}"
organizationNameCRL: "{{ organizationName }}"
organizationDomainName: solitude.skyrim
countryName: US
superAdminCn: "30Aug2021-Skyrim-SA"
sharedVarsLocation: ~/ansible/ansibleCacheDir

# If enabled this will configure a publisher for OCSP, OCSP signer key update service, OSCP publishing queue, OCSP publisher to the certificate profiles,
# create Peer connection, and create an auth key binding
use_external_va: false

# If enabled this will configure a Peer connection, and add the RA Peer role to EJBCA 
use_external_ra: false

# If enabled configures a Peer connectiona nd key binding for Sign Server
use_external_ss: false

# Initialize a CA using configdump instead of the CLI. This works for CA's that are not being signed by
# an external CA. When using this option a crypto token is created in EJBCA, and then the CA is imported
# using configdump and initialized. This can be used for the Management CA, Roots, and Sub CA's on the same
# EJBCA node. As stated this cannot be used for externally signed CA's at this time.
deploy_with_configdump: true
configdump_directory_structure: "{{ root_configdump_dir_structure }}"
configdump_import_files: "{{ root_configdump_files }}"

# Add publishers to the CA's in EJBCA. CA's created before the publisher is added to EJBCA and want to leverage the publisher
# should use this option to add the publisher to the CA.
add_publshers_to_cas: false

# Maria DB settings for using MariaDB database
mariadb_root_password:  "{{ encrypted_database_rootuser_password | default('PrimeKeyPkI4all') }}"
mariadb_binlog_format: ROW
mariadb_databases:
  - name: ejbca
    collation: "utf8_general_ci"
    encoding: "utf8"
mariadb_users:
  - name: ejbca-usr
    password: "{{ encrypted_database_ejbcauser_password | default('ejbca') }}"
    priv: "ejbca.*:ALL"
    host: "%"
  - name: ejbca-usr
    password: "{{ encrypted_database_ejbcauser_password | default('ejbca') }}"
    priv: "ejbca.*:ALL"
    host: "localhost"

# Maria DB JDBC driver download URL
ejbca_jdbc_driver: https://dlm.mariadb.com/1785291/Connectors/java/connector-java-2.7.4/mariadb-java-client-2.7.4.jar
# Maria DB JDBC driver SHA256 hash
ejbca_jdbc_driver_checksum: sha256:f06577b19e89b33028b96cd4f031248e761de7ebc712f4ef535e268df76edb2a

# EJBCA version and deployment info
ejbca_version: 7.7.0
# If enabled Ansible controller is used as software repository for Apache Ant, EJBCA, and JDBC driver
use_local_repository: false
ejbca_remote_dir: ~/Downloads/PK-Software/ejbca_ee_7_7.0.zip
ejbca_software_url: http://172.16.170.133:8080/ejbca/ejbca_ee_7_7_0.zip
ejbca_src_dir_name: ejbca_ee_7_7_0
ejbca_type: CA

# Location to write the CRL files on server
ejbca_crl_dir_enabled: false
ejbca_crl_dir:
  - /opt/web/CRLs
  - /opt/web/AIA

# Wildfly version to deploy, SHA256 hash of the Wildfly archive, whether to disable infinispan, & the datasource 
# configured in Wildfly for EJBCA to access the DB. Can also deploy Wildfly with Galleon.
wildfly_version: 24.0.1.Final
wildfly_checksum: 08d1e420331d0b6ad6c36a4dd782a110152cabfa23439e6ecd9a7c4d50bffd01
wildfly_standalone_file: standalone-24.xml.datasource.j2
wildfly_use_galleon: true
wildfly_galleon_version: 4.2.8
#wildfly_galleon_checksum: sha256:049e1a588882c0c0335a95725c2942bd4e2f56a8743f52eba9eff4a19fda25b1 #4.2.6
wildfly_galleon_checksum: sha256:63ccfb1546fbe32a2222b61e9ae0a594be5f81a4d6e45cd22861eb158a5bfb06
#wildfly_jboss_client_checksum: sha256:fb9b638b04f0e54adc8343daed0fb07d38deadcc7ee8ba48a1c3ac44d9f87cff #WF 23
wildfly_jboss_client_checksum: sha256:cd5b72bbdbb99123a78d9837339f10a849f6c48d8503840cf9ab673cae4039b6 # WF 24
# Disabling only works on Wildfly 20 or earlier, Wildfly 21 and later changed, remoting now requires infinispan cache
wildfly_disable_infinispan: true

# Variables to confgure the Widfly datasource for connecting to the applicable DB
appsrv_datasources:
  - jndi_name: "java:/EjbcaDS"
    pool_name: ejbcads
    database_connection_type: mariadb 
    database_driver_class: org.mariadb.jdbc.Driver
    database_jar_filename: mariadb-java-client.jar
    host: 127.0.0.1
    backup_host: ejbca01.solitude.skyrim
    port: 3306
    database: ejbca
    user: ejbca-usr
    credential_ref: dbPassword
    password: "{{ encrypted_database_ejbcauser_password | default('ejbca') }}"

# Uncomment to configure Wildfly to send logs to a Syslog server 
#appsrv_syslogsources:
#  - name: SYSLOGTCP
#    enabled: true
#    log_level: INFO
#    ejbca_host: my.host
#    syslog_app_name: WildFly
#    syslog_server_address: my.graylog.server
#    syslog_server_port: 514
#    syslog_facility: local-use-1

# HSM Configuration
# Use softhsm for PKCS11
use_softhsm: true
use_ncipher: false
use_safenet_lunasa: false
# If true, allows running application server service via preload
ncipher_preload: false
# Path to the preload executable
preload_path: /opt/nfast/bin/preload
# HSM PKCS#11 shared library location
hsm_shared_library: /usr/lib64/libsofthsm2.so

# Slots to create for SoftHSM PKCS11
softhsm_gen_hsm_slots:
  - slot_name: RootCA1_SLOT
    slot_so_pin: "{{ encrypted_rootca1_so_token_pin | default('foo123') }}" 
    slot_pin: "{{ encrypted_rootca1_token_pin | default('foo123') }}"
  - slot_name: RootCA2_SLOT
    slot_so_pin: "{{ encrypted_rootca2_so_token_pin | default('foo123') }}" 
    slot_pin: "{{ encrypted_rootca2_token_pin | default('foo123') }}"
  - slot_name: RootCA3_SLOT
    slot_so_pin: "{{ encrypted_rootca3_so_token_pin | default('foo123') }}" 
    slot_pin: "{{ encrypted_rootca3_token_pin | default('foo123') }}"

# EJBCA CLI password to configure for the CLI account
ejbca_conf_cli_default_password: "{{ encrypted_ejbca_cli_password | default('ejbca') }}"
ejbca_conf_ca_cmskeystorepass: "{{ encrypted_ejbca_conf_ca_cmskeystorepass | default('ejbca') }}"

# Parameter specifying IP addresses authorized to access the healthcheck
# servlet. Use ';' for between multiple IPs.
# IPv6 address can be specified, for example 127.0.0.1;0:0:0:0:0:0:0:1.
# "ANY" can be specified to allow any remote IP.
ejbca_conf_healtcheck_authorizedips: 127.0.0.1

#Enable/Disable DB integrity protection
databaseprotection_enablesign_AuditRecordData: true
databaseprotection_enableverify_AuditRecordData: true

# EJBCA audit log database protection configurations
# slot_index: Index of HSM slot used for database integrity protection
# slot_identifier_type: Type of identifier; SLOT_LABEL
# slot_identifier_value: Name or index of the slot
# signature_algorithm: Algorithm used to sign database rows
# tokenpass: PIN used to access HSM slot. Should be encrypted with Ansible vault
# crypto_token: Specify the keys in a list/dict to generate
#   - key_label: Label of key used for database integrity protection
#     key_size: Size of the key
#     key_type: Type of key; RSA, ECDSA
ejbca_databaseprotection:
  - slot_identifier_type: "SLOT_LABEL"
    slot_identifier_value: DB_Protect_SLOT
    signature_algorithm: SHA256WithRSA
    tokenpass: "{{ encrypted_databaseprotection_token_pin | default('foo123') }}"
    crypto_token:
      - key_label: dbProtect0001
        key_size: 3072
        key_type: "RSA"
        type: dbprotect
      - key_label: "testKey"
        key_size: 1024
        key_type: "RSA"
        type: test

# web.properties file
# Set the hostname for configuring OAuth Reply URL
web_httpserver_hostname: "{{ httpd_identity_info.id_name }}"
web_reqcertindb: false

# List of certification authorities that should be added using CLI
# caname: CA name
# certprofile: Certificate profile
# dn: CA distinguished name
# subjectaltname: CA subject alt name
# validity: Validity time or end date
# policy: "null" or policy oid
# keytype: RSA, DSA or ECDSA
# keyspec: Size of RSA keys, size of DSA keys or name of curve for ECDSA keys
# signalg: Signature algorithm
# tokentype: "soft" or "org.cesecore.keys.token.PKCS11CryptoToken"
# tokenpass: Password for the CA token
# pkcs11_token: Dict of parameters needed for PKCS11 token
# slot_identifier_type: "SLOT_LABEL", "SLOT_INDEX" or "SLOT_NUMBER"
# slot_identifier_value: Slot identifier
# signkey_label: Signing key label
# defaultkey_label: Default (encryption) key label
# testkey_label: Test key label
# The order must be Management CA and then Root CA
root_add_certification_authorities:
  - caname: "{{ organizationNameShort }}-Root-CA"
    certprofile: "RootCA-{{ organizationNameShort }}-G1"
    dn: "CN={{ organizationName }} Root CA G1,OU=Certification Authorities,O={{ organizationName }},C={{ countryName }}"
    subjectaltname: ""
    validity: "9125"
    validity_yml: "25y"
    policy: "null"
    signalg: "SHA256WithRSA"
    serial_number_octet_size: 20
    pre_produce_ocsp_responses: false
    store_responses_on_demand: false
    use_append_only_table: false
    use_utf8_in_policy_notice_text: false
    #defaultCRLDP: "http://crl.{{ organizationDomainName }}/CRLs/{{ organizationNameShort | lower }}-rootca-g1.crl"
    defaultCRLDP: "http://crl.{{ organizationDomainName }}/ejbca/publicweb/webdist/certdist?cmd=crl&issuer=CN%3d{{ organizationNameCRL }}+Root+CA+G1%2cOU%3dCertification+Authorities%2cO%3d{{ organizationNameCRL }}%2cC%3d{{ countryName }}"
    defaultOCSPServiceLocator: "http://ocsp.{{ organizationDomainName }}/ocsp"
    #authorityInformationAccess: "http://aia.{{ organizationDomainName }}/AIA/CertsIssuedTo{{ organizationNameShort }}-RootCAG1.p7b"
    #certificateAiaDefaultCaIssuerUri: "http://aia.{{ organizationDomainName }}/AIA/CertsIssuedTo{{ organizationNameShort }}-RootCAG1.p7b"
    authorityInformationAccess: "http://aia.{{ organizationDomainName }}/ejbca/publicweb/webdist/certdist?cmd=cacert&issuer=CN%3d{{ organizationNameCRL }}+Root+CA+G1%2cOU%3dCertification+Authorities%2cO%3d{{ organizationNameCRL }}%2cC%3d{{ countryName }}&level=1"
    certificateAiaDefaultCaIssuerUri: "http://aia.{{ organizationDomainName }}/ejbca/publicweb/webdist/certdist?cmd=cacert&issuer=CN%3d{{ organizationNameCRL }}+Root+CA+G1%2cOU%3dCertification+Authorities%2cO%3d{{ organizationNameCRL }}%2cC%3d{{ countryName }}&level=1"
    crlPeriod: 15552000000
    crlPeriod_yml: 6mo
    crlIssueInterval: 0
    crlIssueInterval_yml: 0m
    crl_overlap_time: 600000
    crl_overlap_time_yml: 10m
    delta_crl_period: 0m
    useLdapDnOrder: false
    enforce_unique_public_keys: true
    enforce_key_renewal: false
    enforce_unique_dn: true
    user_storage: true
    certificate_storage: true
    accept_revocations_for_non_existing_entries: false
    finish_user: true
    ca_healthcheck_enabled: true
    request_processor: null
    cryptotoken_enable_auto_activate: true
    tokentype: "org.cesecore.keys.token.p11ng.cryptotoken.Pkcs11NgCryptoToken"
    tokenpass: "{{ encrypted_rootca_token_pin | default('foo123') }}"
    slot_identifier_type: "SLOT_LABEL"
    slot_identifier_value: "Root_CA_SLOT"
    force_used_slots: true
    crypto_token:
      - key_label: "signKey0001"
        key_size: 4096
        key_type: "RSA"
        type: sign
      - key_label: "defaultKey0001"
        key_size: 4096
        key_type: "RSA"
        type: default
      - key_label: "testKey"
        key_size: 1024
        key_type: "RSA"
        type: test
    publishers:
      - validationAuthorityPeerPub-OCSP-01

# Enrollment protocols to disable on EJBCA
disable_ejbca_protocols:
  - name: ACME
  - name: CMP
  - name: EST
  - name: OCSP
  - name: 'Public Web'
  - name: 'REST CA Management'
  - name: 'REST Certificate Management'
  - name: 'REST Crypto Token Management'
  - name: SCEP
  - name: Webdist
  - name: 'Web Service'
  #- name: 'RA Web'

# Enrollment protocols to enable on EJBCA
enable_ejbca_protocols:
  - name: Certstore
  - name: CRLstore

# CRL Update Service Worker Settings
crl_service_time_int: 24
crl_service_time_unit: HOURS

# Create CRL and AIA folder symbolic links for webserver to host these files
httpd_create_aia_crl_dir: false
enable_crl_crontab: false

httpd_identity_info:
  id_name: "root01.{{ organizationDomainName }}"
  id_ca_cert_file: "ManagementCA.crt"

# CA chains to add to the HTTPD trusted CA certificate file for certauth
# caname: Name of the CA in EJBCA
# fullchain: Must be set to true for this to work by getting the issuing CA chain and then adding that chain to the file
httpd_trusted_cas:
  - caname: "ManagementCA"
    fullchain: true

# List of CA's to export the CA cert from EJBCA CA nodes and import as an external CA into external RA/VA nodes.
# This variable is also used for exporting CRL's from EJBCA CA node to import into external RA/VA's
# caname: Name of the CA in EJBCA
# The superadmincn can be added to each CA to add a Common Name to the superadmin role.
# fullchain: Must be set to false for this to work by getting each CA certificate to import as an external CA
ejbca_ca_import:
  - caname: "ManagementCA"
    superadmincn: "{{ superAdminCn }}"
    fullchain: false

root_configdump_dir_structure:
  - "{{ ejbca_home }}/dump/dump1/certificate-profiles"
  - "{{ ejbca_home }}/dump/dump1/certification-authorities"
  - "{{ ejbca_home }}/dump/dump1/end-entity-profiles"
  - "{{ ejbca_home }}/dump/dump1/services"

root_configdump_files:
  - src: 'cp-RootCA-G1.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump1/certificate-profiles/RootCA-{{ organizationNameShort }}-G1.yaml'
  - src: 'cp-EccRootCa-G1.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump1/certificate-profiles/EccRootCA-{{ organizationNameShort }}-G1.yaml'
  - src: 'cp-SubCA-G1.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump1/certificate-profiles/SubCA-{{ organizationNameShort }}-G1.yaml'
  - src: 'cp-ocspSigner.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump1/certificate-profiles/ocspSigner.yaml'
  - src: 'cp-ocspSignerEcc-15d.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump1/certificate-profiles/ocspSignerEcc-15d.yaml'
  - src: 'cp-EccSubCa-G1.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump1/certificate-profiles/cp-EccSubCa-G1.yaml.j2'
  - src: 'ee-ocspSigner.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump1/end-entity-profiles/ocspSigner.yaml'
  - src: 'ee-SubCa.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump1/end-entity-profiles/SubCa.yaml.j2'
  - src: 'service-DailyCRLUpdate.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump1/services/DailyCRLUpdate.yaml'
  - src: 'service-HSM_Keepalive.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump1/services/HSM_Keepalive.yaml'