---

organizationName: Solitude
organizationNameShort: "{{ organizationName }}"
organizationNameCRL: "{{ organizationName }}"
organizationDomainName: solitude.skyrim
countryName: US
superAdminCn: "31Mar2021-Skyrim-SA"
sharedVarsLocation: ~/ansible/ansibleCacheDir

# If enabled this will configure a publisher for OCSP, OCSP signer key update service, OSCP publishing queue, OCSP publisher to the certificate profiles,
# create Peer connection, and create an auth key binding
use_external_va: true

# If enabled this will configure a Peer connection, and add the RA Peer role to EJBCA 
use_external_ra: true

# If enabled configures a Peer connectiona nd key binding for Sign Server
use_external_ss: false

# Maria DB settings for the EJBCA DB
mariadb_root_password:  "{{ encrypted_database_rootuser_password | default('PrimeKeyPkI4all') }}"
mariadb_binlog_formatt: ROW
mariadb_databases:
  - name: ejbca
    collation: "utf8_general_ci"
    encoding: "utf8"
mariadb_users:
  - name: ejbca-usr
    password: "{{ encrypted_database_ejbcauser_password | default('ejbca') }}"
    priv: "ejbca.*:ALL"
    host: "%"
  - name: ejbca-usr
    password: ejbca
    priv: "ejbca.*:ALL"
    host: "localhost"

# Maria DB JDBC driver download URL
ejbca_jdbc_driver: https://dlm.mariadb.com/1496775/Connectors/java/connector-java-2.7.2/mariadb-java-client-2.7.2.jar
# Maria DB JDBC driver SHA256 hash
ejbca_jdbc_driver_checksum: sha256:a3f6776df0842cf65e7f158515012d5307da949f66042282e1ee4474dd19f448


# EJBCA version and deployment info
ejbca_version: 7.7.0
# If enabled Ansible controller is used as software repository for Apache Ant, EJBCA, and JDBC driver
use_local_repository: false
ejbca_remote_dir: ~/Downloads/PK-Software/ejbca_ee_7_6.0.zip
ejbca_software_url: http://172.16.170.133:8080/ejbca/ejbca_ee_7_6_0-RC1.zip
ejbca_src_dir_name: ejbca_ee_7_6_0-RC1
ejbca_type: CA

# Location to write the CRL files on server
ejbca_crl_dir_enabled: true
ejbca_crl_dir:
  - /opt/web/CRLs
  - /opt/web/AIA

ant_version: apache-ant-1.10.11-bin.tar.gz
ant_url: "https://mirror.olnevhost.net/pub/apache/ant/binaries/{{ ant_version }}"

wildfly_version: 24.0.1.Final
wildfly_checksum: sha256:08d1e420331d0b6ad6c36a4dd782a110152cabfa23439e6ecd9a7c4d50bffd01 #tar.gz file
wildfly_standalone_file: standalone-23.xml.datasource.j2
wildfly_use_galleon: true
wildfly_galleon_version: 4.2.8
#wildfly_galleon_checksum: sha256:049e1a588882c0c0335a95725c2942bd4e2f56a8743f52eba9eff4a19fda25b1 #4.2.6
wildfly_galleon_checksum: sha256:63ccfb1546fbe32a2222b61e9ae0a594be5f81a4d6e45cd22861eb158a5bfb06
wildfly_download_url: "http://172.16.170.133:8080/ejbca/wildfly-22.0.1.Final.tar.gz"
wildfly_download_file: "{{ wildfly_name }}.tar.gz"
# Disabling only works on Wildfly 20 or earlier, Wildfly 21 and later changed, remoting now requires infinispan cache
wildfly_disable_infinispan: true
appsrv_datasources:
  - jndi_name: "java:/EjbcaDS"
    pool_name: ejbcads
    database_connection_type: mariadb
    database_driver_class: org.mariadb.jdbc.Driver
    database_jar_filename: mariadb-java-client.jar
    host: 127.0.0.1
    port: 3306
    database: ejbca
    user: ejbca-usr
    credential_ref: dbPassword
    password: "{{ encrypted_database_ejbcauser_password | default('ejbca') }}"
    #if using a MSSQL or AzureSQL server configured for TLS 1.2, add a connection string. Below is a connection string for AzureSQL. Add ";" in front of connection string
    #if using AzureSQL set trustServerCertificate=true to trust the self signed certificate used and add ;integratedSecurity=true;authenticationScheme=JavaKerberos;
    #connection_parameters: ";encrypt=true;trustServerCertificate=false;hostNameInCertificate=*.database.windows.net;loginTimeout=30;sendStringParametersAsUnicode=false"

wildfly_enable_kerberos: false
krb_conf_use_os_file: true
wildfly_kerberos_enable_debug_log: false
wildfly_kerberos_file_path: /etc/wildfly.krb5.conf
krb_conf_default_realm: INTERNAL.PRIMEKEY.COM
krb_conf_realms:
  - realm: INTERNAL.PRIMEKEY.COM
    kdc: INTERNAL.PRIMEKEY.COM
    default_domain:
    admin_server:

# Uncomment to configure Wildfly to send logs to a Syslog server 
#appsrv_syslogsources:
#  - name: SYSLOGTCP
#    enabled: true
#    log_level: INFO
#    ejbca_host: my.host
#    syslog_app_name: WildFly
#    syslog_server_address: my.graylog.server
#    syslog_server_port: 514
#    syslog_facility: local-use-1

# HSM Configuration
# Use softhsm for PKCS11
use_softhsm: true
use_ncipher: false
use_safenet_lunasa: false
# If true, allows running application server service via preload
ncipher_preload: false
# Path to the preload executable
preload_path: /opt/nfast/bin/preload
# HSM PKCS#11 shared library location
hsm_shared_library: /usr/lib64/libsofthsm2.so

# CLI access info
ejbca_conf_cli_default_password: "{{ encrypted_ejbca_cli_password | default('ejbca') }}"
ejbca_conf_ca_cmskeystorepass: "{{ encrypted_ejbca_conf_ca_cmskeystorepass | default('ejbca') }}"

#cesecore.properties
core_disable_audit_log_to_db: true

# Create SoftHSM slots with softhsm-util
softhsm_gen_hsm_slots:
  - slot_name: Management_CA_SLOT
    slot_so_pin: "{{ encrypted_mgmtca_so_token_pin | default('foo123') }}" 
    slot_pin: "{{ encrypted_mgmtca_token_pin | default('foo123') }}"
  - slot_name: POLICY1_CA_SLOT
    slot_so_pin: "{{ encrypted_policyca1_so_token_pin | default('foo123') }}" 
    slot_pin: "{{ encrypted_policyca1_token_pin | default('foo123') }}"
  - slot_name:  DB_Protect_SLOT
    slot_so_pin: "{{ encrypted_databaseprotection_so_token_pin | default('foo123') }}"
    slot_pin: "{{ encrypted_databaseprotection_token_pin | default('foo123') }}"
  - slot_name:  Sub1_Protect_SLOT
    slot_so_pin: "{{ encrypted_sub1_so_token_pin | default('foo123') }}"
    slot_pin: "{{ encrypted_sub2_token_pin | default('foo123') }}"
  - slot_name:  Sub2_Protect_SLOT
    slot_so_pin: "{{ encrypted_sub2_so_token_pin | default('foo123') }}"
    slot_pin: "{{ encrypted_sub2_token_pin | default('foo123') }}"
  - slot_name:  KeyBinding_SLOT
    slot_so_pin: "{{ encrypted_authkeybind_so_token_pin | default('foo123') }}"
    slot_pin: "{{ encrypted_authkeybind_token_pin | default('foo123') }}"

# CA DN in Web format and filename used to configure cronjob for downloading CRL's and hosting them on webserver
enable_crl_crontab: false

# Add the management CA to HTTP trust chain file. 
add_mgmt_ca: true

# Create CRL and AIA folder symbolic links for webserver to host these files
httpd_create_aia_crl_dir: false

# Info to create HTTPD end entity in EJBCA for the TLS certificate
httpd_identity_info:
  id_dn: "ou=Devices,O={{ organizationName }},C={{ countryName }}"
  id_name: "{{ inventory_hostname }}"
  id_full_dn: "C={{ countryName }},O={{ organizationName }},OU=Devices,CN={{ inventory_hostname }}"
  id_username: "ca_httpd_tls_{{ inventory_hostname }}"
  id_password: "{{ encrypted_httpd_identity_password | default('foo123') }}"
  id_altname: "dNSName={{ inventory_hostname }}, dNSName=ca.{{ organizationDomainName }}, dNSName=sapi.ca.{{ organizationDomainName }}, dNSName=api.ca.{{ organizationDomainName }}"
  id_certprofile: tlsServerMgmtCA
  id_eeprofile: "tlsServerMgmt"
  id_caname: "ManagementCA"

# List of HTTPD certificate files to configure for HTTPD to use for TLS
httpd_cert_files:
  - src: "{{ ejbca_home }}/p12/pem/{{ httpd_identity_info.id_name }}.pem"
    dest: "/etc/pki/tls/certs/{{ httpd_identity_info.id_name }}.crt"
  - src: "{{ ejbca_home }}/p12/pem/{{ httpd_identity_info.id_name }}-Key.pem"
    dest: "/etc/pki/tls/private/{{ httpd_identity_info.id_name }}.key"
  - src: "{{ ejbca_home }}/p12/pem/{{ httpd_identity_info.id_name }}-CA.pem"
    dest: "/etc/pki/tls/certs/trusted-ca.crt"

