---

organizationName: Solitude
organizationNameShort: "{{ organizationName }}"
organizationNameCRL: "{{ organizationName }}"
organizationDomainName: solitude.skyrim
countryName: US
superAdminCn: "31Mar2021-Skyrim-SA"
sharedVarsLocation: ~/ansible/ansibleCacheDir

# If enabled this will configure a publisher for OCSP, OCSP signer key update service, OSCP publishing queue, OCSP publisher to the certificate profiles,
# create Peer connection, and create an auth key binding
use_external_va: true

# If enabled this will configure a Peer connection, and add the RA Peer role to EJBCA 
use_external_ra: true

# If enabled configures a Peer connectiona nd key binding for Sign Server
use_external_ss: false

# Maria DB settings for the EJBCA DB
mariadb_root_password:  "{{ encrypted_database_rootuser_password | default('PrimeKeyPkI4all') }}"
mariadb_binlog_format: ROW
mariadb_databases:
  - name: ejbca
    collation: "utf8_general_ci"
    encoding: "utf8"
mariadb_users:
  - name: ejbca-usr
    password: "{{ encrypted_database_ejbcauser_password | default('ejbca') }}"
    priv: "ejbca.*:ALL"
    host: "%"
  - name: ejbca-usr
    password: "{{ encrypted_database_ejbcauser_password | default('ejbca') }}"
    priv: "ejbca.*:ALL"
    host: "localhost"

# Maria DB JDBC driver download URL
ejbca_jdbc_driver: https://dlm.mariadb.com/1785291/Connectors/java/connector-java-2.7.4/mariadb-java-client-2.7.4.jar
# Maria DB JDBC driver SHA256 hash
ejbca_jdbc_driver_checksum: sha256:f06577b19e89b33028b96cd4f031248e761de7ebc712f4ef535e268df76edb2a

# EJBCA version and deployment info
ejbca_version: 7.7.0
# If enabled Ansible controller is used as software repository for Apache Ant, EJBCA, and JDBC driver
use_local_repository: false
ejbca_remote_dir: ~/Downloads/PK-Software/ejbca_ee_7_7_0.zip
ejbca_software_url: http://172.16.170.133:8080/ejbca/ejbca_ee_7_7_0.zip
ejbca_src_dir_name: ejbca_ee_7_7_0
ejbca_type: CA

# Location to write the CRL files on server
ejbca_crl_dir_enabled: true
ejbca_crl_dir:
  - /opt/web/CRLs
  - /opt/web/AIA

ant_version: apache-ant-1.10.11-bin.tar.gz
ant_url: "https://mirror.olnevhost.net/pub/apache/ant/binaries/{{ ant_version }}"
ant_checksum: sha256:0a3dc4624c863657daa609051763f12bfd286bc6da1d61ca48959ce3b94be0e7

# Wildfly version to deploy, SHA256 hash of the Wildfly archive, whether to disable infinispan, & the datasource configured in Wildfly for EJBCA to access the DB
#wildfly_version: 20.0.1.Final
#wildfly_checksum: sha256:63ced690c05149f444e8d0418c1d76ab82941d1e3763ef4c49b0c43de5f95ae7
#wildfly_standalone_file: standal3one-20.xml.datasource.j2
#wildfly_version: 21.0.2.Final
#wildfly_checksum: sha256:e809c1abe943f827da675aaa0338a7b836dac8c3f02423e734775a4b3ec972ac
#wildfly_standalone_file: standalone-21.xml.datasource.j2
wildfly_version: 24.0.1.Final
wildfly_checksum: sha256:08d1e420331d0b6ad6c36a4dd782a110152cabfa23439e6ecd9a7c4d50bffd01 #tar.gz file
wildfly_standalone_file: standalone-23.xml.datasource.j2
wildfly_use_galleon: true
wildfly_galleon_version: 4.2.8
#wildfly_galleon_checksum: sha256:049e1a588882c0c0335a95725c2942bd4e2f56a8743f52eba9eff4a19fda25b1 #4.2.6
wildfly_galleon_checksum: sha256:63ccfb1546fbe32a2222b61e9ae0a594be5f81a4d6e45cd22861eb158a5bfb06
#wildfly_jboss_client_checksum: sha256:fb9b638b04f0e54adc8343daed0fb07d38deadcc7ee8ba48a1c3ac44d9f87cff #WF 23
wildfly_jboss_client_checksum: sha256:cd5b72bbdbb99123a78d9837339f10a849f6c48d8503840cf9ab673cae4039b6 # WF 24
wildfly_download_url: "http://172.16.170.133:8080/ejbca/wildfly-24.0.0.Final.tar.gz"
wildfly_download_file: "{{ wildfly_name }}.tar.gz"
# Disabling only works on Wildfly 20 or earlier, Wildfly 21 and later changed, remoting now requires infinispan cache
wildfly_disable_infinispan: true
appsrv_datasources:
  - jndi_name: "java:/EjbcaDS"
    pool_name: ejbcads
    #Connection type is mariadb or sqlserver
    database_connection_type: mariadb
    #driver class is org.mariadb.jdbc.Driver or com.microsoft.sqlserver.jdbc.SQLServerDriver
    database_driver_class: org.mariadb.jdbc.Driver
    #database_jar_filename is mariadb-java-client.jar or mssql-java-client.jar
    database_jar_filename: mariadb-java-client.jar
    host: 127.0.0.1
    backup_host:
    port: 3306
    database: ejbca
    user: ejbca-usr
    credential_ref: dbPassword
    password: "{{ encrypted_database_ejbcauser_password | default('ejbca') }}"
    #if using a MSSQL or AzureSQL server configured for TLS 1.2, add a connection string. Below is a connection string for AzureSQL. Add ";" in front of connection string
    #if using AzureSQL set trustServerCertificate=true to trust the self signed certificate used and add ;integratedSecurity=true;authenticationScheme=JavaKerberos;
    #connection_parameters: ";encrypt=true;trustServerCertificate=false;hostNameInCertificate=*.database.windows.net;loginTimeout=30;sendStringParametersAsUnicode=false"

wildfly_enable_kerberos: false
krb_conf_use_os_file: true
wildfly_kerberos_enable_debug_log: false
wildfly_kerberos_file_path: /etc/wildfly.krb5.conf
krb_conf_default_realm: INTERNAL.PRIMEKEY.COM
krb_conf_realms:
  - realm: INTERNAL.PRIMEKEY.COM
    kdc: INTERNAL.PRIMEKEY.COM
    default_domain:
    admin_server:
# URL to download the keytab file used for kerberos.
wildfly_kerberos_keytab_file_url: 
# SHA256 checksum of the keytab file
wildfly_kerberos_keytab_file_url_checksum: 
wildfly_kerberos_keytab_principal: SERVICENAME@INTERNAL.PRIMEKEY.COM

# Uncomment to configure Wildfly to send logs to a Syslog server 
#appsrv_syslogsources:
#  - name: SYSLOGTCP
#    enabled: true
#    log_level: INFO
#    ejbca_host: my.host
#    syslog_app_name: WildFly
#    syslog_server_address: my.graylog.server
#    syslog_server_port: 514
#    syslog_facility: local-use-1

# HSM Configuration
# Use softhsm for PKCS11
use_softhsm: true
use_ncipher: false
use_safenet_lunasa: false
# If true, allows running application server service via preload
ncipher_preload: false
# Path to the preload executable
preload_path: /opt/nfast/bin/preload
# HSM PKCS#11 shared library location
hsm_shared_library: /usr/lib64/libsofthsm2.so
# Safenet Luna shared client
#hsm_shared_library: /usr/safenet/lunaclient/lib/libCryptoki2_64.so

# CLI access info
ejbca_conf_cli_default_password: "{{ encrypted_ejbca_cli_password | default('ejbca') }}"
ejbca_conf_ca_cmskeystorepass: "{{ encrypted_ejbca_conf_ca_cmskeystorepass | default('ejbca') }}"

#cesecore.properties
core_disable_audit_log_to_db: true

# web.properties file
# Set the hostname for configuring OAuth Reply URL
web_httpserver_hostname: "{{ httpd_identity_info.id_name }}"

#Enable/Disable DB integrity protection
databaseprotection_enablesign_AuditRecordData: false
databaseprotection_enableverify_AuditRecordData: false

# EJBCA audit log database protection configurations
# slot_index: Index of HSM slot used for database integrity protection
# slot_identifier_type: Type of identifier; SLOT_LABEL
# slot_identifier_value: Name or index of the slot
# signature_algorithm: Algorithm used to sign database rows
# tokenpass: PIN used to access HSM slot. Should be encrypted with Ansible vault
# crypto_token: Specify the keys in a list/dict to generate
#   - key_label: Label of key used for database integrity protection
#     key_size: Size of the key
#     key_type: Type of key; RSA, ECDSA
ejbca_databaseprotection:
  - slot_identifier_type: "SLOT_LABEL"
    slot_identifier_value: DB_Protect_SLOT
    signature_algorithm: SHA256WithRSA
    tokenpass: "{{ encrypted_databaseprotection_token_pin | default('foo123') }}"
    crypto_token:
      - key_label: dbProtect0001
        key_size: 3072
        key_type: "RSA"
        type: dbprotect
      - key_label: "testKey"
        key_size: 1024
        key_type: "RSA"
        type: test

# Super Admin accounts to create
management_add_end_entities:
  - username: "SkyrimSuperAdministrator"
    dn: "C={{ countryName }},O={{ organizationName }},OU=Administrators,CN={{ superAdminCn }}"
    caname: "ManagementCA"
    token: "P12"
    password: "{{ encrypted_superadmin_enrollment_code | default('foo123') }}"
    certprofile: adminMgmtCA
    eeprofile: AdminInternal  

# Super Admin entities to add to the Super Admin Role
management_add_administrators:
  - role: "Super Administrator Role"
    caname: "ManagementCA"
    match_with: "WITH_COMMONNAME"
    match_value: "{{ superAdminCn }}"

# Key bindings used for the certificate that peering uses to authenticate to external RA/VA & SignServer
ejbca_keybinding:
  - name: peerClient-ocsp
    crypto_token_name: peeringCryptoToken
    tokentype: PKCS11CryptoToken
    tokenpass: "{{ encrypted_peerKeyBinding_token_pin | default('foo123') }}"
    cryptotoken_enable_auto_activate: true
    slot_identifier_type: "SLOT_LABEL"
    slot_identifier_value: "KeyBinding_SLOT"
    force_used_slots: true
    crypto_token:
      - key_label: "peerKeyBindingOcsp0001"
        key_size: 3072
        key_type: "RSA"
        type: keybind
      - key_label: "testKey"
        key_size: 1024
        key_type: "RSA"
        type: test
    signature_algorithm: SHA256WithRSA
    dn: "C={{ countryName }},OU=Peering,O={{ organizationName }},CN=peerClient-ocsp"
    caname: "ManagementCA"
    token: "USERGENERATED"
    certprofile: tlsPeerConnector
    eeprofile: tlsPeerConnMgmt
    useType: ocsp
    enabled: "{{ use_external_va }}"
  - name: peerClient-ra
    crypto_token_name: peeringCryptoToken
    tokentype: PKCS11CryptoToken
    tokenpass: "{{ encrypted_peerKeyBinding_token_pin | default('foo123') }}"
    cryptotoken_enable_auto_activate: true
    slot_identifier_type: "SLOT_LABEL"
    slot_identifier_value: "KeyBinding_SLOT"
    force_used_slots: true
    crypto_token:
      - key_label: "peerKeyBindingRa0001"
        key_size: 3072
        key_type: "RSA"
        type: keybind
    signature_algorithm: SHA256WithRSA
    dn: "C={{ countryName }},OU=Peering,O={{ organizationName }},CN=peerClient-ra"
    caname: "ManagementCA"
    token: "USERGENERATED"    
    certprofile: tlsPeerConnector
    eeprofile: tlsPeerConnMgmt
    useType: ra
    enabled: "{{ use_external_ra }}"

# Peer connectors to configure on the CA for connecting to external VA, RA, & SignServer
ejbca_peerConnector:
  - name: OCSP-01
    url: "https://ocsp01.{{ organizationDomainName }}/ejbca/peer/v1"
    keybinding: peerClient-ocsp
    type: ocsp
    state: ENABLED
    enabled: "{{ use_external_va }}"
    remote_key_update: true
  - name: OCSP-02
    url: "https://ocsp02.{{ organizationDomainName }}/ejbca/peer/v1"
    keybinding: peerClient-ocsp
    type: ocsp
    state: ENABLED
    enabled: "{{ use_external_va }}"
    remote_key_update: true
  - name: OCSP-03
    url: "https://ocsp03.{{ organizationDomainName }}/ejbca/peer/v1"
    keybinding: peerClient-ocsp
    type: ocsp
    state: ENABLED
    enabled: "{{ use_external_va }}"
    remote_key_update: true
  - name: RA-01
    url: "https://ra01.{{ organizationDomainName }}/ejbca/peer/v1"
    keybinding: peerClient-ra
    type: ra
    state: ENABLED
    enabled: "{{ use_external_ra }}"
    remote_key_update: true

# List of certification authorities that should be added using CLI
# caname: CA name
# certprofile: Certificate profile
# dn: CA distinguished name
# subjectaltname: CA subject alt name
# validity: Validity time or end date
# policy: "null" or policy oid
# keytype: RSA, DSA or ECDSA
# keyspec: Size of RSA keys, size of DSA keys or name of curve for ECDSA keys
# signalg: Signature algorithm
# tokentype: "soft" or "org.cesecore.keys.token.PKCS11CryptoToken"
# tokenpass: Password for the CA token
# pkcs11_token: Dict of parameters needed for PKCS11 token
# slot_identifier_type: "SLOT_LABEL", "SLOT_INDEX" or "SLOT_NUMBER"
# slot_identifier_value: Slot identifier
# signkey_label: Signing key label
# defaultkey_label: Default (encryption) key label
# testkey_label: Test key label
mgmt_add_certification_authorities:
  - caname: "ManagementCA"
    certprofile: "managementCA"
    dn: "CN=ManagementCA,OU=Certification Authorities,O={{ organizationName }},C={{ countryName }}"
    rootDn: "External"
    eeprofile:
    token: "USERGENERATED"
    subjectaltname: ""
    validity: "3650"
    validity_yml: "10y"
    policy: "null"
    signalg: "SHA256WithRSA"
    serial_number_octet_size: 20
    pre_produce_ocsp_responses: false
    store_responses_on_demand: false
    use_append_only_table: false
    use_utf8_in_policy_notice_text: false
    #defaultCRLDP: "http://crl.{{ organizationDomainName }}/CRLs/{{ organizationName | lower }}-mgmtca.crl"
    defaultCRLDP: "http://crl.{{ organizationDomainName }}/ejbca/publicweb/webdist/certdist?cmd=crl&issuer=CN%3dManagementCA%2cOU%3dCertification+Authorities%2cO%3d{{ organizationNameCRL }}%2cC%3d{{ countryName }}"
    defaultOCSPServiceLocator: "http://ocsp.{{ organizationDomainName }}/ocsp"
    #authorityInformationAccess: "http://aia.{{ organizationDomainName }}/CertsIssuedTo{{ organizationName }}-mgmtca.p7b"
    #certificateAiaDefaultCaIssuerUri: "http://aia.{{ organizationDomainName }}/CertsIssuedTo{{ organizationName }}-mgmtca.p7b"
    authorityInformationAccess: "http://aia.{{ organizationDomainName }}/ejbca/publicweb/webdist/certdist?cmd=cacert&issuer=CN%3dManagementCA%2cOU%3dCertification+Authorities%2cO%3d{{ organizationNameCRL }}%2cC%3d{{ countryName }}&level=1"
    certificateAiaDefaultCaIssuerUri: "http://aia.{{ organizationDomainName }}/ejbca/publicweb/webdist/certdist?cmd=cacert&issuer=CN%3dManagementCA%2cOU%3dCertification+Authorities%2cO%3d{{ organizationNameCRL }}%2cC%3d{{ countryName }}&level=1"
    crlPeriod: 259200000
    crlPeriod_yml: 6mo
    crlIssueInterval: 0
    crlIssueInterval_yml: 0m
    crl_overlap_time: 600000
    crl_overlap_time_yml: 10m
    delta_crl_period: 0m
    useLdapDnOrder: false
    enforce_unique_public_keys: true
    enforce_key_renewal: false
    enforce_unique_dn: true
    user_storage: true
    certificate_storage: true
    accept_revocations_for_non_existing_entries: false
    finish_user: true
    ca_healthcheck_enabled: true
    request_processor: null
    external_caname: IT-Root-CA
    external_root_cachain_local_repository: false
    external_root_cachain_local_file: ~/Downloads/certs/rootCA.crt
    external_root_cachain_url: http://it-ca01.pkihosted-dev.c2company.com/ejbca/publicweb/webdist/certdist?cmd=cachain&caid=-271613628&format=pem
    external_root_cachain_file: /var/tmp/rootca.pem
    external_signed_ca_cert_file_local_repository: false
    external_signed_ca_cert_file_url: http://172.16.170.133:8080/ejbca/extMgmtCa.pem
    external_signed_ca_cert_file: extMgmtCa.pem
    cryptotoken_enable_auto_activate: true
    tokentype: "org.cesecore.keys.token.PKCS11CryptoToken"
    tokenpass: "{{ encrypted_mgmtca_token_pin | default('foo123') }}"
    slot_identifier_type: "SLOT_LABEL"
    slot_identifier_value: "Management_CA_SLOT"
    force_used_slots: true
    crypto_token:
      - key_label: "signKey0001"
        key_size: 3072
        key_type: "RSA"
        type: sign
      - key_label: "defaultKey0001"
        key_size: 3072
        key_type: "RSA"
        type: default
      - key_label: "testKey"
        key_size: 1024
        key_type: "RSA"
        type: test

policy_add_certification_authorities:
  - caname: "{{ organizationNameShort }}-Policy-CA1-G1"
    certprofile: "PolicyCA1-{{ organizationNameShort }}-G1"
    dn: "CN={{ organizationName }} Policy CA1 G1,OU=Certification Authorities,O={{ organizationName }},C={{ countryName }}"
    rootDn: "External"
    eeprofile:
    token: "USERGENERATED"
    subjectaltname: ""
    validity: "3650"
    validity_yml: "10y"
    policy: "null"
    signalg: "SHA256WithRSA"
    serial_number_octet_size: 20
    pre_produce_ocsp_responses: false
    store_responses_on_demand: false
    use_append_only_table: false
    use_utf8_in_policy_notice_text: false
    #defaultCRLDP: "http://crl.{{ organizationDomainName }}/CRLs/{{ organizationNameShort | lower }}-subca-g1.crl"
    defaultCRLDP: "http://crl.{{ organizationDomainName }}/ejbca/publicweb/webdist/certdist?cmd=crl&issuer=CN%3d{{ organizationNameCRL }}+Policy+CA1+G1%2cOU%3dCertification+Authorities%2cO%3d{{ organizationNameCRL }}%2cC%3d{{ countryName }}"
    defaultOCSPServiceLocator: "http://ocsp.{{ organizationDomainName }}/ocsp"
    #authorityInformationAccess: "http://aia.{{ organizationDomainName }}/AIA/CertsIssuedTo{{ organizationNameShort }}-SubCAG1.p7b"
    #certificateAiaDefaultCaIssuerUri: "http://aia.{{ organizationDomainName }}/AIA/CertsIssuedTo{{ organizationNameShort }}-SubCAG1.p7b"
    authorityInformationAccess: "http://aia.{{ organizationDomainName }}/ejbca/publicweb/webdist/certdist?cmd=cacert&issuer=CN%3d{{ organizationNameCRL }}+Policy+CA1+G1%2cOU%3dCertification+Authorities%2cO%3d{{ organizationNameCRL }}%2cC%3d{{ countryName }}&level=1"
    certificateAiaDefaultCaIssuerUri: "http://aia.{{ organizationDomainName }}/ejbca/publicweb/webdist/certdist?cmd=cacert&issuer=CN%3d{{ organizationNameCRL }}+Policy+CA1+G1%2cOU%3dCertification+Authorities%2cO%3d{{ organizationNameCRL }}%2cC%3d{{ countryName }}&level=1"
    crlPeriod: 15552000000
    crlPeriod_yml: 6mo
    crlIssueInterval: 0
    crlIssueInterval_yml: 0m
    crl_overlap_time: 600000
    crl_overlap_time_yml: 10m
    delta_crl_period: 0m
    useLdapDnOrder: false
    enforce_unique_public_keys: true
    enforce_key_renewal: false
    enforce_unique_dn: true
    user_storage: true
    certificate_storage: true
    accept_revocations_for_non_existing_entries: false
    finish_user: true
    ca_healthcheck_enabled: true
    request_processor: null
    external_caname: IT-Root-CA
    external_root_cachain_local_repository: false
    external_root_cachain_local_file: ~/Downloads/certs/rootCA.crt
    external_root_cachain_url: http://it-ca01.pkihosted-dev.c2company.com/ejbca/publicweb/webdist/certdist?cmd=cachain&caid=-271613628&format=pem
    external_root_cachain_file: /var/tmp/rootca.pem
    external_signed_ca_cert_file_url: http://172.16.170.133:8080/ejbca/extPolCa1.pem
    external_signed_ca_cert_file: extPolCa1.pem
    cryptotoken_enable_auto_activate: true
    tokentype: "org.cesecore.keys.token.PKCS11CryptoToken"
    tokenpass: "{{ encrypted_subca_token_pin | default('foo123') }}"
    slot_identifier_type: "SLOT_LABEL"
    slot_identifier_value: "POLICY1_CA_SLOT"
    force_used_slots: true
    crypto_token:
      - key_label: "signKey0001"
        key_size: 4096
        key_type: "RSA"
        type: sign
      - key_label: "defaultKey0001"
        key_size: 4096
        key_type: "RSA"
        type: default
      - key_label: "testKey"
        key_size: 1024
        key_type: "RSA"
        type: test

sub_add_certification_authorities:
  - caname: "{{ organizationNameShort }}-Sub-CA1-G1"
    certprofile: "SubCA-{{ organizationNameShort }}-G1"
    dn: "CN={{ organizationName }} Issuing CA1 G1,OU=Certification Authorities,O={{ organizationName }},C={{ countryName }}"
    #rootDn: "External"
    rootDn: "CN={{ organizationName }} Policy CA1 G1,OU=Certification Authorities,O={{ organizationName }},C={{ countryName }}"
    eeprofile:
    token: "USERGENERATED" 
    subjectaltname: ""
    validity: "3650"
    validity_yml: "5y"
    policy: "null"
    signalg: "SHA256WithRSA"
    serial_number_octet_size: 20
    pre_produce_ocsp_responses: false
    store_responses_on_demand: false
    use_append_only_table: false
    use_utf8_in_policy_notice_text: false
    #defaultCRLDP: "http://crl.{{ organizationDomainName }}/CRLs/{{ organizationNameShort | lower }}-subca-g1.crl"
    defaultCRLDP: "http://crl.{{ organizationDomainName }}/ejbca/publicweb/webdist/certdist?cmd=crl&issuer=CN%3d{{ organizationNameCRL }}+Issuing+CA1+G1%2cOU%3dCertification+Authorities%2cO%3d{{ organizationNameCRL }}%2cC%3d{{ countryName }}"
    defaultOCSPServiceLocator: "http://ocsp.{{ organizationDomainName }}/ocsp"
    #authorityInformationAccess: "http://aia.{{ organizationDomainName }}/AIA/CertsIssuedTo{{ organizationNameShort }}-SubCAG1.p7b"
    #certificateAiaDefaultCaIssuerUri: "http://aia.{{ organizationDomainName }}/AIA/CertsIssuedTo{{ organizationNameShort }}-SubCAG1.p7b"
    authorityInformationAccess: "http://aia.{{ organizationDomainName }}/ejbca/publicweb/webdist/certdist?cmd=cacert&issuer=CN%3d{{ organizationNameCRL }}+Issuing+CA1+G1%2cOU%3dCertification+Authorities%2cO%3d{{ organizationNameCRL }}%2cC%3d{{ countryName }}&level=1"
    certificateAiaDefaultCaIssuerUri: "http://aia.{{ organizationDomainName }}/ejbca/publicweb/webdist/certdist?cmd=cacert&issuer=CN%3d{{ organizationNameCRL }}+Issuing+CA1+G1%2cOU%3dCertification+Authorities%2cO%3d{{ organizationNameCRL }}%2cC%3d{{ countryName }}&level=1"
    crlPeriod: 15552000000
    crlPeriod_yml: 6mo
    crlIssueInterval: 0
    crlIssueInterval_yml: 0m
    crl_overlap_time: 600000
    crl_overlap_time_yml: 10m
    delta_crl_period: 0m
    useLdapDnOrder: false
    enforce_unique_public_keys: true
    enforce_key_renewal: false
    enforce_unique_dn: true
    user_storage: true
    certificate_storage: true
    accept_revocations_for_non_existing_entries: false
    finish_user: true
    ca_healthcheck_enabled: true
    request_processor: null
    external_caname:
    external_root_cachain_local_repository: false
    external_root_cachain_local_file: ~/Downloads/certs/rootCA.crt
    external_root_cachain_url:
    external_root_cachain_file:
    external_signed_ca_cert_file_url:
    external_signed_ca_cert_file:
    cryptotoken_enable_auto_activate: true
    tokentype: "org.cesecore.keys.token.PKCS11CryptoToken"
    tokenpass: "{{ encrypted_subca1_token_pin | default('foo123') }}"
    slot_identifier_type: "SLOT_LABEL"
    slot_identifier_value: "Sub_CA_SLOT"
    force_used_slots: true
    crypto_token:
      - key_label: "signKey0001"
        key_size: 3072
        key_type: "RSA"
        type: sign
      - key_label: "defaultKey0001"
        key_size: 3072
        key_type: "RSA"
        type: default
      - key_label: "testKey"
        key_size: 1024
        key_type: "RSA"
        type: test

  - caname: "{{ organizationNameShort }}-Sub-CA2-G1"
    certprofile: "SubCA-{{ organizationNameShort }}-G1"
    dn: "CN={{ organizationName }} Issuing CA2 G1,OU=Certification Authorities,O={{ organizationName }},C={{ countryName }}"
    #rootDn: "External"
    rootDn: "CN={{ organizationName }} Policy CA1 G1,OU=Certification Authorities,O={{ organizationName }},C={{ countryName }}"
    eeprofile:
    token: "USERGENERATED"
    subjectaltname: ""
    validity: "3650"
    validity_yml: "5y"
    policy: "null"
    signalg: "SHA256WithRSA"
    serial_number_octet_size: 20
    pre_produce_ocsp_responses: false
    store_responses_on_demand: false
    use_append_only_table: false
    use_utf8_in_policy_notice_text: false
    #defaultCRLDP: "http://crl.{{ organizationDomainName }}/CRLs/{{ organizationNameShort | lower }}-subca-g1.crl"
    defaultCRLDP: "http://crl.{{ organizationDomainName }}/ejbca/publicweb/webdist/certdist?cmd=crl&issuer=CN%3d{{ organizationNameCRL }}+Issuing+CA2+G1%2cOU%3dCertification+Authorities%2cO%3d{{ organizationNameCRL }}%2cC%3d{{ countryName }}"
    defaultOCSPServiceLocator: "http://ocsp.{{ organizationDomainName }}/ocsp"
    #authorityInformationAccess: "http://aia.{{ organizationDomainName }}/AIA/CertsIssuedTo{{ organizationNameShort }}-SubCAG1.p7b"
    #certificateAiaDefaultCaIssuerUri: "http://aia.{{ organizationDomainName }}/AIA/CertsIssuedTo{{ organizationNameShort }}-SubCAG1.p7b"
    authorityInformationAccess: "http://aia.{{ organizationDomainName }}/ejbca/publicweb/webdist/certdist?cmd=cacert&issuer=CN%3d{{ organizationNameCRL }}+Issuing+CA2+G1%2cOU%3dCertification+Authorities%2cO%3d{{ organizationNameCRL }}%2cC%3d{{ countryName }}&level=1"
    certificateAiaDefaultCaIssuerUri: "http://aia.{{ organizationDomainName }}/ejbca/publicweb/webdist/certdist?cmd=cacert&issuer=CN%3d{{ organizationNameCRL }}+Issuing+CA2+G1%2cOU%3dCertification+Authorities%2cO%3d{{ organizationNameCRL }}%2cC%3d{{ countryName }}&level=1"
    crlPeriod: 15552000000
    crlPeriod_yml: 6mo
    crlIssueInterval: 0
    crlIssueInterval_yml: 0m
    crl_overlap_time: 600000
    crl_overlap_time_yml: 10m
    delta_crl_period: 0m
    useLdapDnOrder: false
    enforce_unique_public_keys: true
    enforce_key_renewal: false
    enforce_unique_dn: false
    user_storage: true
    certificate_storage: true
    accept_revocations_for_non_existing_entries: false
    finish_user: true
    ca_healthcheck_enabled: true
    request_processor: null
    external_caname:
    external_root_cachain_local_repository: false
    external_root_cachain_local_file: ~/Downloads/certs/rootCA.crt
    external_root_cachain_url: 
    external_root_cachain_file:
    external_signed_ca_cert_file_url:
    external_signed_ca_cert_file:
    cryptotoken_enable_auto_activate: true
    tokentype: "org.cesecore.keys.token.PKCS11CryptoToken"
    tokenpass: "{{ encrypted_subca2_token_pin | default('foo123') }}"
    slot_identifier_type: "SLOT_LABEL"
    slot_identifier_value: "Sub2_CA_SLOT"
    force_used_slots: true
    crypto_token:
      - key_label: "signKey0001"
        key_size: 3072
        key_type: "RSA"
        type: sign
      - key_label: "defaultKey0001"
        key_size: 3072
        key_type: "RSA"
        type: default
      - key_label: "testKey"
        key_size: 1024
        key_type: "RSA"
        type: test


# CA DN in Web format and filename used to configure cronjob for downloading CRL's and hosting them on webserver
enable_crl_crontab: false
certification_authorities_crl_files:
  - crlfilename: "{{ organizationNameShort | lower }}-mgmtca.crl"
    cadn: "CN%3dManagementCA%2cOU%3dCertification+Authorities%2cO%3d{{ organizationNameCRL }}%2cC%3d{{ countryName }}"
  - crlfilename: "{{ organizationNameShort | lower }}-rootca-g1.crl"
    cadn: "CN%3d{{ organizationNameCRL }}+Root+CA+G1%2cOU%3dCertification+Authorities%2cO%3d{{ organizationNameCRL }}%2cC%3d{{ countryName }}"
  - crlfilename: "{{ organizationNameShort | lower }}-subca-g1.crl"
    cadn: "CN%3d{{ organizationNameCRL }}+Issuing+CA+G1%2cOU%3dCertification+Authorities%2cO%3d{{ organizationNameCRL }}%2cC%3d{{ countryName }}"

# Enrollment protocols to disable on EJBCA
disable_ejbca_protocols:
  - name: ACME
  - name: EST
  - name: OCSP
  - name: SCEP
  #- name: 'RA Web'

# Enrollment protocols to enable on EJBCA
enable_ejbca_protocols:
  - name: Certstore
  - name: CMP
  - name: CRLstore
  - name: 'Public Web'
  - name: 'REST CA Management'
  - name: 'REST Certificate Management'
  - name: 'REST Crypto Token Management'
  - name: Webdist
  - name: 'Web Service'

# Add the management CA to HTTP trust chain file. 
add_mgmt_ca: true

# Create CRL and AIA folder symbolic links for webserver to host these files
httpd_create_aia_crl_dir: false
# Disable configuring firewalld for EJBCA access on port 80/443
enable_firewalld_for_httpd: false

# Info to create HTTPD end entity in EJBCA for the TLS certificate
httpd_identity_info:
  id_dn: "ou=Devices,O={{ organizationName }},C={{ countryName }}"
  id_name: "{{ inventory_hostname }}"
  id_full_dn: "C={{ countryName }},O={{ organizationName }},OU=Devices,CN={{ inventory_hostname }}"
  id_username: "ca_httpd_tls_{{ inventory_hostname }}"
  id_password: "{{ encrypted_httpd_identity_password | default('foo123') }}"
  id_altname: "dNSName={{ inventory_hostname }}, dNSName=ca.{{ organizationDomainName }}, dNSName=sapi.ca.{{ organizationDomainName }}, dNSName=api.ca.{{ organizationDomainName }}"
  id_certprofile: tlsServerMgmtCA
  id_eeprofile: "tlsServerMgmt"
  id_caname: "ManagementCA"

# List of HTTPD certificate files to configure for HTTPD to use for TLS
httpd_cert_files:
  - src: "{{ ejbca_home }}/p12/pem/{{ httpd_identity_info.id_name }}.pem"
    dest: "/etc/pki/tls/certs/{{ httpd_identity_info.id_name }}.crt"
  - src: "{{ ejbca_home }}/p12/pem/{{ httpd_identity_info.id_name }}-Key.pem"
    dest: "/etc/pki/tls/private/{{ httpd_identity_info.id_name }}.key"
  - src: "{{ ejbca_home }}/p12/pem/{{ httpd_identity_info.id_name }}-CA.pem"
    dest: "/etc/pki/tls/certs/chain.crt"

# CA chains to add to the HTTPD trusted CA certificate file for certauth
# caname: Name of the CA in EJBCA
# fullchain: Must be set to true for this to work by getting the issuing CA chain and then adding that chain to the file
httpd_trusted_cas:
  - caname: "ManagementCA"
    fullchain: true

mgmt_configdump_dir_structure:
  - "{{ ejbca_home }}/dump/dump2/custom-certificate-extensions"
  - "{{ ejbca_home }}/dump/dump2/certificate-profiles"
  - "{{ ejbca_home }}/dump/dump2/certification-authorities"
  - "{{ ejbca_home }}/dump/dump2/end-entity-profiles"
  - "{{ ejbca_home }}/dump/dump2/services"

mgmt_configdump_files:
  - src: 'cp-SubCA-G1.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump2/certificate-profiles/SubCA-{{ organizationNameShort }}-G1.yaml'
  - src: 'cp-tlsPeerConnector.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump2/certificate-profiles/tlsPeerConnector.yaml'
  - src: 'cp-adminMgmtCA.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump2/certificate-profiles/adminMgmtCA.yaml'
  - src: 'cp-ocspSigner.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump2/certificate-profiles/ocspSigner.yaml'
  - src: 'cp-ocspSignerEcc-15d.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump2/certificate-profiles/ocspSignerEcc-15d.yaml'
  - src: 'cp-tlsServerMgmtCA.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump2/certificate-profiles/tlsServerMgmtCA.yaml'
  - src: 'cp-tlsServerAuth.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump2/certificate-profiles/tlsServerAuth.yaml'
  - src: 'cp-EccSubCa-G1.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump2/certificate-profiles/cp-EccSubCa-G1.yaml.j2'
  - src: 'ee-AdminInternal.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump2/end-entity-profiles/AdminInternal.yaml'
  - src: 'ee-tlsServerMgmt.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump2/end-entity-profiles/tlsServerMgmt.yaml'
  - src: 'ee-userAuthentication.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump2/end-entity-profiles/userAuthentication.yaml'
  - src: 'ee-ocspSigner.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump2/end-entity-profiles/ocspSigner.yaml'
  - src: 'ee-tlsPeerConnMgmt.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump2/end-entity-profiles/tlsPeerConnMgmt.yaml'
  - src: 'ext-certTempInfo.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump2/custom-certificate-extensions/certTempInfo.yaml'
  - src: 'extended-key-usages.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump1/extended-key-usage/extended-key-usages.yaml'
  - src: 'service-DailyCRLUpdate.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump2/services/DailyCRLUpdate.yaml'
  - src: 'service-HSM_Keepalive.yaml.j2'
    dest: '{{ ejbca_home }}/dump/dump2/services/HSM_Keepalive.yaml'
  - src: "{{ playbook_dir }}/certprofiles/tlsServer.yaml.j2"
    dest: "{{ ejbca_home }}/dump/dump2/certificate-profiles/tlsServer.yaml"

sub_configdump_dir_structure:
  - "{{ ejbca_home }}/dump/subs/certification-authorities"
  - "{{ ejbca_home }}/dump/subs/certificate-profiles"

sub_configdump_files:
  - src: 'cp-SubCA-G1.yaml.j2'
    dest: '{{ ejbca_home }}/dump/subs/certificate-profiles/SubCA-{{ organizationNameShort }}-G1.yaml'
 
authkeybind_configdump_dir_structure:
  - "{{ ejbca_home }}/dump/dump3/admin-roles"
  - "{{ ejbca_home }}/dump/dump3/certificate-profiles"
  - "{{ ejbca_home }}/dump/dump3/end-entity-profiles"
  - "{{ ejbca_home }}/dump/dump3/services"
  - "{{ ejbca_home }}/dump/dump3/publishers"
  - "{{ ejbca_home }}/dump/dump3/est-config"
  - "{{ ejbca_home }}/dump/dump3/scep-config"
  - "{{ ejbca_home }}/dump/va/services"
  - "{{ ejbca_home }}/dump/va/publishers"  
  - "{{ ejbca_home }}/dump/ra/admin-roles" 

authkeybind_configdump_files:
# Files for External VA
  - src: 'service-ocspService.yaml.j2'
    dest: '{{ ejbca_home }}/dump/va/services/ocspService.yaml'
# Files for External RA
  - src: 'role-ra-peer-connection.yaml.j2'
    dest: '{{ ejbca_home }}/dump/ra/admin-roles/role-ra-peer-connection.yaml'
