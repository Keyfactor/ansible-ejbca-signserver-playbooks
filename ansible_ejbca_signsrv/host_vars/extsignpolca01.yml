---

# Initialize a CA using configdump instead of the CLI. This works for CA's that are not being signed by
# an external CA. When using this option a crypto token is created in EJBCA, and then the CA is imported
# using configdump and initialized. This can be used for the Management CA, Roots, and Sub CA's on the same
# EJBCA node. As stated this cannot be used for externally signed CA's at this time.
deploy_with_configdump: false
# Map in the List Dictionaires for the CA's to create in EJBCA. The variable to map in 
# are sourced from the include_vars above.
add_certification_authorities: "{{ policy_add_certification_authorities }}"

# HSM Configuration
# Use softhsm for PKCS11
use_softhsm: true
use_ncipher: false
use_safenet_lunasa: false
# If true, allows running application server service via preload
ncipher_preload: false
# Path to the preload executable
preload_path: /opt/nfast/bin/preload
# HSM PKCS#11 shared library location
hsm_shared_library: /usr/lib64/libsofthsm2.so
# Safenet Luna shared client
#hsm_shared_library: /usr/safenet/lunaclient/lib/libCryptoki2_64.so

policy_add_certification_authorities:
  - caname: "{{ organizationNameShort }}-Policy-CA1-G1"
    certprofile: "PolicyCA1-{{ organizationNameShort }}-G1"
    dn: "CN={{ organizationName }} Policy CA1 G1,OU=Certification Authorities,O={{ organizationName }},C={{ countryName }}"
    rootDn: "External"
    eeprofile:
    token: "USERGENERATED"
    subjectaltname: ""
    validity: "3650"
    validity_yml: "10y"
    policy: "null"
    signalg: "SHA256WithRSA"
    serial_number_octet_size: 20
    pre_produce_ocsp_responses: false
    store_responses_on_demand: false
    use_append_only_table: false
    use_utf8_in_policy_notice_text: false
    #defaultCRLDP: "http://crl.{{ organizationDomainName }}/CRLs/{{ organizationNameShort | lower }}-subca-g1.crl"
    defaultCRLDP: "http://crl.{{ organizationDomainName }}/ejbca/publicweb/webdist/certdist?cmd=crl&issuer=CN%3d{{ organizationNameCRL }}+Policy+CA1+G1%2cOU%3dCertification+Authorities%2cO%3d{{ organizationNameCRL }}%2cC%3d{{ countryName }}"
    defaultOCSPServiceLocator: "http://ocsp.{{ organizationDomainName }}/ocsp"
    #authorityInformationAccess: "http://aia.{{ organizationDomainName }}/AIA/CertsIssuedTo{{ organizationNameShort }}-SubCAG1.p7b"
    #certificateAiaDefaultCaIssuerUri: "http://aia.{{ organizationDomainName }}/AIA/CertsIssuedTo{{ organizationNameShort }}-SubCAG1.p7b"
    authorityInformationAccess: "http://aia.{{ organizationDomainName }}/ejbca/publicweb/webdist/certdist?cmd=cacert&issuer=CN%3d{{ organizationNameCRL }}+Policy+CA1+G1%2cOU%3dCertification+Authorities%2cO%3d{{ organizationNameCRL }}%2cC%3d{{ countryName }}&level=1"
    certificateAiaDefaultCaIssuerUri: "http://aia.{{ organizationDomainName }}/ejbca/publicweb/webdist/certdist?cmd=cacert&issuer=CN%3d{{ organizationNameCRL }}+Policy+CA1+G1%2cOU%3dCertification+Authorities%2cO%3d{{ organizationNameCRL }}%2cC%3d{{ countryName }}&level=1"
    crlPeriod: 15552000000
    crlPeriod_yml: 6mo
    crlIssueInterval: 0
    crlIssueInterval_yml: 0m
    crl_overlap_time: 600000
    crl_overlap_time_yml: 10m
    delta_crl_period: 0m
    useLdapDnOrder: false
    enforce_unique_public_keys: true
    enforce_key_renewal: false
    enforce_unique_dn: true
    user_storage: true
    certificate_storage: true
    accept_revocations_for_non_existing_entries: false
    finish_user: true
    ca_healthcheck_enabled: true
    request_processor: null
    external_caname: IT-Root-CA
    external_root_cachain_local_repository: false
    external_root_cachain_local_file: ~/Downloads/certs/rootCA.crt
    external_root_cachain_url: http://it-ca01.pkihosted-dev.c2company.com/ejbca/publicweb/webdist/certdist?cmd=cachain&caid=-271613628&format=pem
    external_root_cachain_file: /var/tmp/rootca.pem
    external_signed_ca_cert_file_local_repository: false
    external_signed_ca_cert_file_url: http://172.16.170.133:8080/ejbca/extPolCa1.pem
    external_signed_ca_cert_file: extPolCa1.pem
    cryptotoken_enable_auto_activate: true
    tokentype: "org.cesecore.keys.token.PKCS11CryptoToken"
    tokenpass: "{{ encrypted_subca_token_pin | default('foo123') }}"
    slot_identifier_type: "SLOT_LABEL"
    slot_identifier_value: "POLICY1_CA_SLOT"
    force_used_slots: true
    crypto_token:
      - key_label: "signKey0001"
        key_size: 4096
        key_type: "RSA"
        type: sign
      - key_label: "defaultKey0001"
        key_size: 4096
        key_type: "RSA"
        type: default
      - key_label: "testKey"
        key_size: 1024
        key_type: "RSA"
        type: test

