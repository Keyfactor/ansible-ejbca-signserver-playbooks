---

# - hosts: localhost
#   tasks:
#     - name: Test that my module works
#       github_repo: 
#       register: result

#     - debug: var=result    

  - name: test my new module
    hosts: ca-host
    become: yes
    become_method: sudo
    gather_facts: no

    vars:
      ejbca_user: wildfly
      ejbca_shell: /opt/ejbca/bin/ejbca.sh
      ca: Development-Issuing-CA
      field: EnforceKeyRenewal
      value: True
    
    tasks:

      # changecatoken
      - name: changecatoken module
        ejbca_ca:
          cmd: changecatoken
          options:
            # caname: Development-Issuing-CA
            # date: CRLPeriod
        become_user: "{{ ejbca_user }}"
        register: module_output
        tags: changecatoken

      # createcrl
      - name: createcrl module
        ejbca_ca:
          cmd: createcrl
          args:
            caname: Development-Issuing-CA
        become_user: "{{ ejbca_user }}"
        register: module_output
        tags: createcrl

      # editca
      - name: editca module
        ejbca_ca:
          cmd: editca
          args:
            caname: "{{ ca }}"
            field: "{{ field }}"
            value: "{{ value }}"
        become_user: "{{ ejbca_user }}"
        register: module_output
        tags: editca

      # getcafield
      - name: getcafield module
        ejbca_ca:
          cmd: getcafield
          args:
            caname: "{{ ca }}"
            field: "{{ field }}"
        become_user: "{{ ejbca_user }}"
        register: module_output
        tags: getcafield

      # listcas
      - name: listcas module
        ejbca_ca:
          cmd: listcas
        become_user: "{{ ejbca_user }}"
        register: module_output
        tags: listcas

      # cryptotoken activate
      - name: list module
        ejbca_cryptotoken:
          cmd: activate
          args:
            token: Test
            pin: foo12
          stdout: true
          path: "{{ ejbca_shell }}"
        become_user: "{{ ejbca_user }}"
        register: module_output
        tags: activate_token

      # cryptotoken deactivate
      - name: list module
        ejbca_cryptotoken:
          cmd: deactivate
          args:
            token: Test
          stdout: true
          path: "{{ ejbca_shell }}"
        become_user: "{{ ejbca_user }}"
        register: module_output
        tags: deactivate_token

      # cryptotoken deactivate
      - name: generatekey module
        ejbca_cryptotoken:
          cmd: generatekey
          args:
            token: Test
            alias: signKeyTest
            spec: 2048
          path: "{{ ejbca_shell }}"
        become_user: "{{ ejbca_user }}"
        register: module_output
        tags: generate_key

      # cryptotoken list
      - name: list token module
        ejbca_cryptotoken:
          cmd: list
          stdout: false
          path: "{{ ejbca_shell }}"
        become_user: "{{ ejbca_user }}"
        register: module_output
        tags: list_token

      - name: stat
        copy:
          src: /test/dir
          dest: /test/dir
        register: stat_test
        tags: debug

      - debug: msg={{ stat_test }}
        tags: debug

      # cryptotoken listkeys
      - name: list keys module
        ejbca_cryptotoken:
          cmd: listkeys
          args:
            token: Test
          stdout: false
          path: "{{ ejbca_shell }}"
        become_user: "{{ ejbca_user }}"
        register: module_output
        tags: list_keys

      # cryptotoken removekey
      - name: remove key module
        ejbca_cryptotoken:
          cmd: removekey
          args:
            token: Test
            alias: signKeyTest
          stdout: false
          path: "{{ ejbca_shell }}"
        become_user: "{{ ejbca_user }}"
        register: module_output
        tags: remove_key

      # cryptotoken testkey
      - name: test key module
        ejbca_cryptotoken:
          cmd: testkey
          args:
            token: Test
            alias: signKeyTest
          stdout: false
          path: "{{ ejbca_shell }}"
        become_user: "{{ ejbca_user }}"
        register: module_output
        tags: test_key

      # cryptotoken delete
      - name: delete key module
        ejbca_cryptotoken:
          cmd: delete
          args:
            token: Test1
          path: "{{ ejbca_shell }}"
        become_user: "{{ ejbca_user }}"
        register: module_output
        tags: delete_token

      - name: dump module output
        debug:
          msg: "{{ module_output }}"
        tags: always
