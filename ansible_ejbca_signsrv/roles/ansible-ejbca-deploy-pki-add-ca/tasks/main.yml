---
# tasks file for roles/ansible-ejbca-deploy-pki-add-ca

- name: Prepare configdump template files
  include_role: 
    name: ansible-ejbca-cnfdump-stage
    tasks_from: config_configdump

- name: Use Configdump to create the Management & Root CA's
  block:

#TODO
# Add Configdump to import crypto tokens with >= 7.6.0

    - name: Create crypto tokens for Management & Root CA's
      include_role: 
        name: ansible-ejbca-crypto-token
        tasks_from: add_crypto_token
      loop: "{{ root_add_certification_authorities }}"
      no_log: "{{ no_log_value }}"

    - name: Generate keys for Management & Root CA's on crypto token
      include_role:
        name: ansible-ejbca-crypto-token
        tasks_from: generate_keys
      loop: "{{ root_add_certification_authorities |subelements('crypto_token') }}"
      loop_control:
        label: "{{ key_item.0.caname }}"
        loop_var: key_item
      no_log: "{{ no_log_value }}"
      tags: key_generation

    - name: Stage Management & Root CA to create with configdump
      include_role:
        name: ansible-ejbca-cnfdump-stage
        tasks_from: stage_ca
      vars:
        dump_dest: "{{ ejbca_home }}/dump/dump1/certification-authorities/{{ item.caname }}.yaml"
      loop: "{{ root_add_certification_authorities }}"
      loop_control:
        label: "{{ item.caname }}"
      no_log: "{{ no_log_value }}"

    - name: Intialize Management & Root CA's with configdump
      command: "./configdump.sh import --ignore-errors --overwrite update --non-interactive continue -l {{ ejbca_home }}/dump/dump1 --initialize"
      args:
        chdir: "{{ ejbca_home }}/dist/configdump"
      become: yes 
      become_user: "{{ ejbca_user }}"

  when: 
    - deploy_with_configdump|bool and root_add_certification_authorities[0] is defined 

- name: Use CLI to create the Management & Root CA's
  block:

    - name: Import configdump of Root CA templates and EKU's
      command: "./configdump.sh import --ignore-errors --overwrite update --non-interactive continue -l {{ ejbca_home }}/dump/dump1"
      args:
        chdir: "{{ ejbca_home }}/dist/configdump"
      become: yes 
      become_user: "{{ ejbca_user }}"
#TODO
# Add Configdump to import crypto tokens with >= 7.6.0      
    - name: Create crypto tokens for Management & Root CA's
      include_role: 
        name: ansible-ejbca-crypto-token
        tasks_from: add_crypto_token
      loop: "{{ root_add_certification_authorities }}"
      no_log: "{{ no_log_value }}"

    - name: Generate keys for Management & Root CA's on crypto token
      include_role:
        name: ansible-ejbca-crypto-token
        tasks_from: generate_keys
      loop: "{{ root_add_certification_authorities |subelements('crypto_token') }}"
      loop_control:
        label: "{{ key_item.0.caname }}"
        loop_var: key_item
      no_log: "{{ no_log_value }}"
      tags: key_generation

    - name: Initialize Management & Root CAs with CLI commands
      include_role:
        name: ansible-ejbca-init-ca
        tasks_from: init_ca
      loop: "{{ root_add_certification_authorities }}"
      no_log: "{{ no_log_value }}"
      tags: create_cas

    - name: Configure ManagmentCA and Root CA settings
      include_role: 
        name: ansible-ejbca-conf-ca-exts
        tasks_from: config_ca_extensions
      loop: "{{ root_add_certification_authorities }}"
      no_log: "{{ no_log_value }}"

  when: 
    - root_add_certification_authorities[0] is defined and not deploy_with_configdump|bool

- name: Use Configdump to create the Sub CA's
  block:

#TODO
# Add Configdump to import crypto tokens with >= 7.6.0

    - name: Create crypto tokens for Sub CA's
      include_role: 
        name: ansible-ejbca-crypto-token
        tasks_from: add_crypto_token
      loop: "{{ sub_add_certification_authorities }}"
      no_log: "{{ no_log_value }}"

    - name: Generate keys for Suborindated CA's on crypto token
      include_role:
        name: ansible-ejbca-crypto-token
        tasks_from: generate_keys
      loop: "{{ sub_add_certification_authorities |subelements('crypto_token') }}"
      loop_control:
        label: "{{ key_item.0.caname }}"
        loop_var: key_item
      no_log: "{{ no_log_value }}"
      tags: key_generation

#TODO
# Stage individual CA cert profiles to be imported before initialization with configdump - Dynamic time!

    - name: Stage Sub CA's to create with configdump
      include_role:
        name: ansible-ejbca-cnfdump-stage
        tasks_from: stage_ca
      vars:
        dump_dest: "{{ ejbca_home }}/dump/dump2/certification-authorities/{{ item.caname }}.yaml"
      loop: "{{ sub_add_certification_authorities }}"
      no_log: "{{ no_log_value }}"

    - name: Intialize Sub CA's with configdump
      command: "./configdump.sh import --ignore-errors --overwrite update --non-interactive continue -l {{ ejbca_home }}/dump/dump2 --initialize"
      args:
        chdir: "{{ ejbca_home }}/dist/configdump"
      become: yes 
      become_user: "{{ ejbca_user }}"

  when:
    - deploy_with_configdump|bool
    - sub_add_certification_authorities[0] is defined

- name: Use CLI to create the Sub CA's
  block:

#TODO
# Stage individual CA cert profiles to be imported before initialization with configdump - Dynamic time!

    - name: Import configdump of profiles and services
      command: "./configdump.sh import --ignore-errors --overwrite update --non-interactive continue -l {{ ejbca_home }}/dump/dump2"
      args:
        chdir: "{{ ejbca_home }}/dist/configdump"
      become: yes 
      become_user: "{{ ejbca_user }}"

#TODO
# Add Configdump to import crypto tokens with >= 7.6.0

    - name: Create crypto token and keys for Suborindated CA's not using PKCS11
      include_role: 
        name: ansible-ejbca-crypto-token
        tasks_from: add_crypto_token
      loop: "{{ sub_add_certification_authorities }}"
      no_log: "{{ no_log_value }}"

    - name: Generate keys for Suborindated CA's on crypto token
      include_role:
        name: ansible-ejbca-crypto-token
        tasks_from: generate_keys
      loop: "{{ sub_add_certification_authorities |subelements('crypto_token') }}"
      loop_control:
        label: "{{ key_item.0.caname }}"
        loop_var: key_item
      no_log: "{{ no_log_value }}"
      tags: key_generation
      
    - name: Initialize Sub CA's with CLI commands
      include_role:
        name: ansible-ejbca-init-ca
        tasks_from: init_ca
      loop: "{{ sub_add_certification_authorities }}"
      loop_control:
        label: "{{ item.caname }}"
      no_log: "{{ no_log_value }}"
      tags: create_cas

    - name: Configure Sub CA's settings
      include_role: 
        name: ansible-ejbca-conf-ca-exts
        tasks_from: config_ca_extensions
      loop: "{{ sub_add_certification_authorities }}"
      no_log: "{{ no_log_value }}"

  when: 
    - sub_add_certification_authorities[0] is defined
    - not deploy_with_configdump|bool
