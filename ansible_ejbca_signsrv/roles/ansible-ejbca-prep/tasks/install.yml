---

- name: Install EPEL on CentOS/RedHat 7/8
  package:
    name: epel-release
    state: present
  when: (ansible_facts['distribution'] == "CentOS" and ansible_facts['distribution_major_version'] == "8") or
        (ansible_facts['distribution'] == "CentOS" and ansible_facts['distribution_major_version'] == "7")
#TODO
# Add install for Oracle EPEL repo

- name: Install OpenJDK Development, unzip on Alma/CentOS/Oracle/RedHat/Rocky 8
  package:
    name: "{{ ejbca_packages_8 }}"
    state: present
  when: (ansible_facts['distribution'] == "CentOS" and ansible_facts['distribution_major_version'] == "8") or
        (ansible_facts['distribution'] == "RedHat" and ansible_facts['distribution_major_version'] == "8") or
        (ansible_facts['distribution'] == "OracleLinux" and ansible_facts['distribution_major_version'] == "8") or
        (ansible_facts['distribution'] == "Rocky" and ansible_facts['distribution_major_version'] == "8") or
        (ansible_facts['distribution'] == "AlmaLinux" and ansible_facts['distribution_major_version'] == "8")

- name: Install OpenJDK Development, unzip, & Ant on CentOS/RedHat 7
  package:
    name: "{{ ejbca_packages_7 }}"
    state: present
  when: (ansible_facts['distribution'] == "CentOS" and ansible_facts['distribution_major_version'] == "7") or
        (ansible_facts['distribution'] == "RedHat" and ansible_facts['distribution_major_version'] == "7") 

- name: Install kerberos workstation for Wildfly Kerberos auth
  package:
    name: krb5-workstation
    state: present
  when: wildfly_enable_kerberos|bool

- name: Check if Apache ant directory exists
  stat:
    path: "{{ ejbca_root_dir }}/apache-ant"
  register: ant_dir_check
  changed_when: false

- name: Ant staging
  block:

    - name: Upload and unpack Apache ant from Ansible controller
      unarchive:
        src: "{{ apache_ant_remote_dir }}"
        dest: "{{ ejbca_root_dir }}"
      register: unpacked_local_ant
      when: 
        - use_local_repository|bool

    - name: Download ant and check (sha256)
      get_url:
        url: "{{ ant_url }}"
        dest: "{{ ejbca_root_dir }}"
        checksum: "{{ ant_checksum }}"
      when: 
        - not use_local_repository|bool

    - name: Create directory for ant
      file:
        path: "{{ ejbca_root_dir }}/apache-ant"
        state: directory
        owner: "{{ ejbca_user }}"
        group: "{{ ejbca_group }}"

    - name: Unarchive ant
      unarchive:
        src: "{{ ejbca_root_dir }}/{{ ant_version }}"
        dest: "{{ ejbca_root_dir }}/apache-ant"
        remote_src: yes
        extra_opts: [--strip-components=1]

    - name: Create link for ant
      file:
        src: "{{ ejbca_root_dir }}/apache-ant/bin/ant"
        dest: /usr/bin/ant
        state: link

    - name: Remove ant archive
      file:
        path: "{{ ejbca_root_dir }}/{{ ant_version }}"
        state: absent

  when: not ant_dir_check.stat.exists or force_ant_download is defined and force_ant_download|bool

- name: Check if ejbca directory exists
  stat:
    path: "{{ ejbca_root_dir }}/{{ ejbca_src_dir_name }}"
  register: ejbca_src_dir
  changed_when: false

- name: EJBCA staging
  block:

    - name: Upload and unpack EJBCA from Ansible controller
      unarchive:
        src: "{{ ejbca_remote_dir }}"
        dest: "{{ ejbca_root_dir }}"
      when: 
        - use_local_repository|bool
      register: unpacked_local_ejbca

    - name: Download and unpack EJBCA EE archive
      unarchive:
        src: "{{ ejbca_software_url }}"
        dest: "{{ ejbca_root_dir }}"
        remote_src: yes
      register: unpacked_ejbca
      when: 
        - not use_local_repository|bool

    - name: Create symlink to installed version
      file:
        state: link
        src: "{{ ejbca_root_dir }}/{{ ejbca_src_dir_name }}"
        dest: "{{ ejbca_home }}"
  when: 
    - not ejbca_src_dir.stat.exists or force_ejbca_download is defined and force_ejbca_download|bool

- name: Check if JDBC driver exists
  stat:
    path: "{{ wildfly_home }}/standalone/deployments/{{ ejbca_jdbc_gen_name }}"
  register: ejbca_jdbc_file_exists
  changed_when: false

- name: JDBC Staging
  block:

    - name: Upload and JDBC driver from Ansible controller
      unarchive:
        src: "{{ ejbca_jdbc_remote_dir }}"
        dest: "{{ wildfly_home }}/standalone/deployments/{{ ejbca_jdbc_gen_name }}"
      register: unpacked_local_jdbc
      when: 
        - use_local_repository|bool

    - name: Download the JDBC Driver
      get_url:
        url: "{{ ejbca_jdbc_driver }}"
        owner: "{{ ejbca_user }}"
        group: "{{ ejbca_group }}"
        dest: "{{ wildfly_home }}/standalone/deployments/{{ ejbca_jdbc_gen_name }}"
        checksum: "{{ ejbca_jdbc_driver_checksum }}"
      when: 
        - not use_local_repository|bool

  when: 
    - not ejbca_jdbc_file_exists.stat.exists or force_ejbca_jdbc_download is defined and force_ejbca_jdbc_download|bool
  