---

- name: Stage HTTPD certificate files
  block:

    - name: Copy cert files from Controller
      copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: root
        group: root
      loop: "{{ httpd_cert_files }}"
      loop_control: 
        label: "{{ item.src }}"
      register: file_copy

    - name: Copy CA chain files from Controller
      copy:
        src: "{{ ejbca_cacrt_dir_output }}/{{ item.caname }}-fullchain.crt"
        dest: "/etc/pki/tls/certs/{{ item.caname }}-fullchain.crt"
        owner: root
        group: root
      loop: "{{ httpd_trusted_cas }}"
      loop_control:
        label: "{{ item.caname }}"
      register: file_copy_ca_chain
      
    - name: Add {{ item.caname }} chain file to trusted-ca.crt file
      shell: >
        cat /etc/pki/tls/certs/{{ item.caname }}-fullchain.crt >> /etc/pki/tls/certs/trusted-ca.crt
      loop: "{{ httpd_trusted_cas }}"
      loop_control:
        label: "{{ item.caname }}"

  when: 
    - inventory_hostname in groups['eeRaServers'] or
      inventory_hostname in groups['eeVaServers'] or
      inventory_hostname in groups['eeSignServers'] or
      inventory_hostname in groups['ceSignServers']

- name: Configure Firewalld
  block:
    - name: Open http port
      firewalld:
        service: 'http'
        permanent: yes
        immediate: yes
        state: enabled

    - name: Open https port
      firewalld:
        service: 'https'
        permanent: yes
        immediate: yes
        state: enabled

  tags: reverse-proxy
  when: enable_firewalld_for_httpd|bool

- name: Configure PKI HTTPD conf files
  block:

    - name: PKI Configure the httpd conf file for Alma/CentOS/Oracle/RedHat/Rocky 8
      template:
        backup: yes
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: root
        group: root
        mode: 0644
      loop: "{{ httpd_conf_files_8 }}"
      loop_control:
        label: "{{ item.src }}"
      notify:
        - restart httpd
      tags: reverse-proxy
      when: 
        - (ansible_facts['distribution'] == "CentOS" and ansible_facts['distribution_major_version'] == "8") or
          (ansible_facts['distribution'] == "RedHat" and ansible_facts['distribution_major_version'] == "8") or
          (ansible_facts['distribution'] == "RedHat" and ansible_facts['distribution_major_version'] == "9") or
          (ansible_facts['distribution'] == "OracleLinux" and ansible_facts['distribution_major_version'] == "8") or
          (ansible_facts['distribution'] == "Rocky" and ansible_facts['distribution_major_version'] == "8") or
          (ansible_facts['distribution'] == "AlmaLinux" and ansible_facts['distribution_major_version'] == "8")

    - name: PKI Configure the httpd conf file for CentOS/RedHat 7
      template:
        backup: yes
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: root
        group: root
        mode: 0644
      loop: "{{ httpd_conf_files_7 }}"
      loop_control:
        label: "{{ item.src }}"
      notify:
        - restart httpd
      tags: reverse-proxy
      when: 
        - (ansible_facts['distribution'] == "CentOS" and ansible_facts['distribution_major_version'] == "7") or
          (ansible_facts['distribution'] == "RedHat" and ansible_facts['distribution_major_version'] == "7") 
  when: 
    - inventory_hostname in groups['eeCaServers'] or
      inventory_hostname in groups['eeRaServers'] or
      inventory_hostname in groups['eeVaServers'] or
      inventory_hostname in groups['ceServers']

- name: Configure SignServer HTTPD conf files
  block:

    - name: SignServer Configure the httpd conf file for Alma/CentOS/Oracle/RedHat/Rocky 8
      template:
        backup: yes
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: root
        group: root
        mode: 0644
      loop: "{{ httpd_conf_files_8 }}"
      loop_control:
        label: "{{ item.src }}"
      notify:
        - restart httpd
      tags: reverse-proxy
      when: (ansible_facts['distribution'] == "CentOS" and ansible_facts['distribution_major_version'] == "8") or
            (ansible_facts['distribution'] == "RedHat" and ansible_facts['distribution_major_version'] == "8") or
            (ansible_facts['distribution'] == "RedHat" and ansible_facts['distribution_major_version'] == "9") or
            (ansible_facts['distribution'] == "OracleLinux" and ansible_facts['distribution_major_version'] == "8") or
            (ansible_facts['distribution'] == "Rocky" and ansible_facts['distribution_major_version'] == "8") or
            (ansible_facts['distribution'] == "AlmaLinux" and ansible_facts['distribution_major_version'] == "8")

    - name: SignServer Configure the httpd conf file for CentOS/RedHat 7
      template:
        backup: yes
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: root
        group: root
        mode: 0644
      loop: "{{ httpd_conf_files_7 }}"
      loop_control:
        label: "{{ item.src }}"
      notify:
        - restart httpd
      tags: reverse-proxy
      when: (ansible_facts['distribution'] == "CentOS" and ansible_facts['distribution_major_version'] == "7") or
            (ansible_facts['distribution'] == "RedHat" and ansible_facts['distribution_major_version'] == "7") 
  when: 
    - inventory_hostname in groups['eeSignServers'] or
      inventory_hostname in groups['ceSignServers']

- name: Configure friendly AIA &| CRL name mapping
  block:

    - name: Create directory for mapping file
      file:
        path: /etc/httpd/rewriteMaps/
        state: directory
        mode: 0775
        owner: root
        group: root  
      tags: reverse-proxy

    - name: Create CRL mapping file
      template:
        src: crlmapping.txt.j2
        dest: /etc/httpd/rewriteMaps/crlmapping.txt
        owner: root
        group: root
        mode: 0644
      when:
        - use_httpd_crl_map is defined
        - use_httpd_crl_map|bool

    - name: Create AIA mapping file
      template:
        src: aiamapping.txt.j2
        dest: /etc/httpd/rewriteMaps/aiamapping.txt
        owner: root
        group: root
        mode: 0644
      when:
        - use_httpd_aia_map
        - use_httpd_aia_map|bool

  when:
    - ( use_httpd_crl_map is defined and use_httpd_crl_map|bool ) or ( use_httpd_aia_map is defined and use_httpd_aia_map|bool)


- name: Create CRL & AIA directory links
  file:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    state: link
  loop: "{{ httpd_web_dirs }}"
  loop_control:
    label:  "{{ item.dest }}"
  tags: reverse-proxy
  when: httpd_create_aia_crl_dir|bool

- name: Check if index.html exists
  stat:
    path: /var/www/html/index.html
  register: index_html_exists

- name: Create index.html
  file:
    path: /var/www/html/index.html
    state: touch
    mode: 0644
    owner: apache
    group: apache  
  tags: reverse-proxy
  when: not index_html_exists.stat.exists

- name: Set SELinux HTTPD Network Connect
  seboolean:
    name: httpd_can_network_connect
    state: yes
    persistent: yes
  tags: reverse-proxy

- name: Ensure service is started
  systemd:
    name: httpd
    state: started
    enabled: true
  tags: reverse-proxy
