---

- name: Check if TLS Certificate file already exists
  ansible.builtin.stat:
    path: "{{ ejbca_home }}/p12/pem/{{ httpd_identity_info.id_name }}.pem"
  register: tls_cert_exists
  changed_when: false

- name: Role - Create Apache HTTPD TLS certificate
  ansible.builtin.include_role:
    name: ansible-ejbca-certreq-cli
    tasks_from: batch_cert_request
  loop: "{{ identity_info }}"
  loop_control:
    label: "{{ item.name }}"
  no_log: "{{ no_log_value }}"
  when: 
    - identity_info[0] is defined
    - not tls_cert_exists.stat.exists

- name: Create the certstage directory
  ansible.builtin.file:
    path: /var/tmp/certstage
    state: directory
    owner: "{{ ejbca_user }}" 
    group: "{{ ejbca_group }}"

- name: Export CA certificate chain to file using EJBCA CLI
  ansible.builtin.command: >
    {{ ejbca_sh }} ca getcacert 
    --caname {{ item.caname }}
    {% if item.fullchain is defined and item.fullchain is sameas true %}
    -f /var/tmp/certstage/{{ item.caname }}-fullchain.crt
    --include-full-chain 
    {% else %}
    -f /var/tmp/certstage/{{ item.caname }}.crt
    {% endif %}
  become: yes
  become_user: "{{ ejbca_user }}"
  register: ejbca_get_ca_chain
  failed_when: ejbca_get_ca_chain.rc >= 2
  changed_when: ejbca_get_ca_chain.rc == 0
  loop: "{{ httpd_trusted_cas }}"
  loop_control:
    label: "{{ item.caname }}"
  tags: ejbca-cli-cacert
  when: 
    - not tls_cert_exists.stat.exists

- name: Append the CA chain file to the trusted-ca.crt file
  ansible.builtin.shell: >
    cat /var/tmp/certstage/{{ item.caname }}-fullchain.crt >> /etc/pki/tls/certs/trusted-ca.crt
  loop: "{{ httpd_trusted_cas }}"
  loop_control:
    label: "{{ item.caname }}"
  when: 
    - not tls_cert_exists.stat.exists

- name: Cleanup the certstage directory
  ansible.builtin.file:
    path: /var/tmp/certstage
    state: absent

- name: Move certificate files to location for Apache HTTPD to use
  ansible.builtin.copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root 
    group: root
    mode: 0640
    remote_src: yes
  loop: 
    - src: "{{ ejbca_home }}/p12/pem/{{ httpd_identity_info.id_name }}.pem" 
      dest: "/etc/pki/tls/certs/{{ httpd_identity_info.id_name }}.crt"
    - src: "{{ ejbca_home }}/p12/pem/{{ httpd_identity_info.id_name }}-Key.pem"
      dest: "/etc/pki/tls/private/{{ httpd_identity_info.id_name }}.key"
    - src: "{{ ejbca_home }}/p12/pem/{{ httpd_identity_info.id_name }}-CA.pem"
      dest: "/etc/pki/tls/certs/chain.crt"
  loop_control:
    label: "{{ item.src }}"
  tags: reverse-proxy
  #when: 
    #- not tls_cert_exists.stat.exists
