# {{ ansible_managed | comment }}
# Configuration using JackNJI11 PKCS11 CryptoToken.
#

# Type of worker and implementation
WORKER{{ item.id }}.TYPE=CRYPTO_WORKER
WORKER{{ item.id }}.IMPLEMENTATION_CLASS=org.signserver.server.signers.CryptoWorker

# Uses a HSM or smart card through PKCS#11:
WORKER{{ item.id }}.CRYPTOTOKEN_IMPLEMENTATION_CLASS=org.signserver.p11ng.common.cryptotoken.JackNJI11CryptoToken

# Name for other workers to reference this worker:
WORKER{{ item.id }}.NAME=CryptoTokenP11NG1

# Name of the PKCS#11 shared library to use:
# The samples below corresponds to the ones set by default in the deploy
# configuration.
# To add new definitions or customize existing ones, see
# conf/signserver_deploy.properties.sample.
# SafeNet ProtectServer Gold
# SafeNet ProtectServer Gold Emulator
# SoftHSM
# SafeNet Luna Client
# SafeNet Luna SA
# SafeNet Luna PCI
# Utimaco
# nCipher
# OpenSC
WORKER{{ item.id }}.SHAREDLIBRARYNAME={{ item.SharedLibraryName }}

# Method for pointing out which slot to use:
WORKER{{ item.id }}.SLOTLABELTYPE={{ item.SLOTLABELTYPE }}
#WORKER{{ item.id }}.SLOTLABELTYPE=SLOT_INDEX

# Which slot to use:
WORKER{{ item.id }}.SLOTLABELVALUE={{ item.SLOTLABELVALUE }}
#WORKER{{ item.id }}.SLOTLABELVALUE=0

# Optional password of the slot. If specified the token is "auto-activated".
WORKER{{ item.id }}.PIN="{{ item.slot_pin }}"

# Signature algorithm for the dummy certificate stored in HSM
# as part of key generation
WORKER{{ item.id }}.SELFSIGNED_SIGNATUREALGORITHM=
#WORKER{{ item.id }}.SELFSIGNED_SIGNATUREALGORITHM=SHA256withRSA

# Optional PKCS#11 attributes used for key generation
WORKER{{ item.id }}.ATTRIBUTE.PUBLIC.RSA.CKA_ENCRYPT = false
WORKER{{ item.id }}.ATTRIBUTE.PUBLIC.RSA.CKA_VERIFY = false
WORKER{{ item.id }}.ATTRIBUTE.PUBLIC.RSA.CKA_WRAP = false
WORKER{{ item.id }}.ATTRIBUTE.PRIVATE.RSA.CKA_SIGN = true
WORKER{{ item.id }}.ATTRIBUTE.PRIVATE.RSA.CKA_PRIVATE = true
WORKER{{ item.id }}.ATTRIBUTE.PRIVATE.RSA.CKA_SENSITIVE = true
WORKER{{ item.id }}.ATTRIBUTE.PRIVATE.RSA.CKA_EXTRACTABLE = false
WORKER{{ item.id }}.ATTRIBUTE.PRIVATE.RSA.CKA_DECRYPT = false
WORKER{{ item.id }}.ATTRIBUTE.PRIVATE.RSA.CKA_UNWRAP = false
#WORKER{{ item.id }}.ATTRIBUTE.PRIVATE.RSA.CKA_ALLOWED_MECHANISMS=CKM_RSA_PKCS, CKM_SHA256_RSA_PKCS, CKM_SHA384_RSA_PKCS, CKM_SHA512_RSA_PKCS, CKM_RSA_PKCS_PSS, CKM_SHA256_RSA_PKCS_PSS, CKM_SHA384_RSA_PKCS_PSS, CKM_SHA512_RSA_PKCS_PSS
#WORKER{{ item.id }}.ATTRIBUTE.PRIVATE.RSA.CKA_ALLOWED_MECHANISMS=CKM_RSA_PKCS_PSS, CKM_SHA256_RSA_PKCS_PSS, CKM_SHA384_RSA_PKCS_PSS, CKM_SHA512_RSA_PKCS_PSS

{% if inventory_hostname in groups['eeSignServers'] %}
# Allow peering with EJBCA
WORKER{{ item.id }}.PEERS_VISIBLE={{ item.peer_enable |default('true') }}
{% endif %}
# One key to test activation with is required. If this key does not already
# exist generate it after the worker has been created.
WORKER{{ item.id }}.DEFAULTKEY={{ item.testkey_alias |default('testkey0001') }}