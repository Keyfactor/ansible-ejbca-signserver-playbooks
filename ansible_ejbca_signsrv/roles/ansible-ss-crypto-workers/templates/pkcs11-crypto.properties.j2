# {{ ansible_managed | comment }}
# configuration of a PKCS#11 crypto worker
#

# Type of worker and implementation
WORKER{{ item.id }}.TYPE=CRYPTO_WORKER
WORKER{{ item.id }}.IMPLEMENTATION_CLASS=org.signserver.server.signers.CryptoWorker

# Uses a HSM or smart card through PKCS#11:
WORKER{{ item.id }}.CRYPTOTOKEN_IMPLEMENTATION_CLASS=org.signserver.server.cryptotokens.PKCS11CryptoToken

# Name for other workers to reference this worker:
WORKER{{ item.id }}.NAME={{ item.name }}

# Name of the PKCS#11 shared library to use:
# The samples below corresponds to the ones set by default in the deploy
# configuration.
# To add new definitions or customize existing ones, see
# conf/signserver_deploy.properties.sample.
#WORKER{{ item.id }}.SHAREDLIBRARYNAME=SafeNet ProtectServer Gold
#WORKER{{ item.id }}.SHAREDLIBRARYNAME=SafeNet ProtectServer Gold Emulator
#WORKER{{ item.id }}.SHAREDLIBRARYNAME=SoftHSM
#WORKER{{ item.id }}.SHAREDLIBRARYNAME=SafeNet Luna Client
#WORKER{{ item.id }}.SHAREDLIBRARYNAME=SafeNet Luna SA
#WORKER{{ item.id }}.SHAREDLIBRARYNAME=SafeNet Luna PCI
#WORKER{{ item.id }}.SHAREDLIBRARYNAME=Utimaco
#WORKER{{ item.id }}.SHAREDLIBRARYNAME=nCipher
#WORKER{{ item.id }}.SHAREDLIBRARYNAME=OpenSC
WORKER{{ item.id }}.SHAREDLIBRARYNAME={{ item.SharedLibraryName }}

# Method for pointing out which slot to use: SLOT_NUMBER, SLOT_INDEX, SLOT_LABEL
WORKER{{ item.id }}.SLOTLABELTYPE={{ item.SLOTLABELTYPE }}


# Which slot to use: 1, 0, MySlot, etc
WORKER{{ item.id }}.SLOTLABELVALUE={{ item.SLOTLABELVALUE }}

# Optional password of the slot. If specified the token is "auto-activated".
WORKER{{ item.id }}.PIN="{{ item.slot_pin }}"

# Optional PKCS#11 attributes file or attributes
#WORKER{{ item.id }}.ATTRIBUTESFILE=/opt/signserver/doc/sample-config/p11attributes.cfg
WORKER{{ item.id }}.ATTRIBUTES=\
    attributes(generate,CKO_PUBLIC_KEY,*) \= {\n   \
       CKA_TOKEN \= false\n   \
       CKA_ENCRYPT \= false\n   \
       CKA_VERIFY \= true\n   \
       CKA_WRAP \= false\n\
    }\n\
    attributes(generate, CKO_PRIVATE_KEY,*) \= {\n   \
       CKA_TOKEN \= true\n   \
       CKA_PRIVATE \= true\n   \
       CKA_SENSITIVE \= true\n   \
       CKA_EXTRACTABLE \= false\n   \
       CKA_DECRYPT \= false\n   \
       CKA_SIGN \= true\n   \
       CKA_UNWRAP \= false\n\
    }

# Optional PKCS#11 attributes to override those specified statically in the ATTRIBUTES
# property or file
#WORKER{{ item.id }}.ATTRIBUTE.PRIVATE.RSA.CKA_ALLOWED_MECHANISMS=CKM_RSA_PKCS, CKM_SHA256_RSA_PKCS, CKM_SHA384_RSA_PKCS, CKM_SHA512_RSA_PKCS, CKM_RSA_PKCS_PSS, CKM_SHA256_RSA_PKCS_PSS, CKM_SHA384_RSA_PKCS_PSS, CKM_SHA512_RSA_PKCS_PSS
#WORKER{{ item.id }}.ATTRIBUTE.PRIVATE.RSA.CKA_ALLOWED_MECHANISMS=CKM_RSA_PKCS_PSS, CKM_SHA256_RSA_PKCS_PSS, CKM_SHA384_RSA_PKCS_PSS, CKM_SHA512_RSA_PKCS_PSS
#WORKER{{ item.id }}.ATTRIBUTE.PRIVATE.ECDSA.CKA_ALLOWED_MECHANISMS=CKM_ECDSA

{% if inventory_hostname in groups['eeSignServers'] %}
# Allow peering with EJBCA
WORKER{{ item.id }}.PEERS_VISIBLE={{ item.peer_enable |default('true') }}
{% endif %}

# One key to test activation with is required. If this key does not already
# exist generate it after the worker has been created.
WORKER{{ item.id }}.DEFAULTKEY={{ item.testkey_alias |default('testkey0001') }}