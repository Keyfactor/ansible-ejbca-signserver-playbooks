---

- name: Check if PCKS11 Slot - {{ item.name }} exists in SignServer
  command: >
    {{ signsrv_home }}/bin/signserver getstatus brief {{ item.name }}
  args:
    chdir: "{{ signsrv_home }}"
  environment:
    APPSRV_HOME: "{{ wildfly_home }}"
  become: yes
  become_user: "{{ signsrv_user }}"
  register: check_p11_exists
  failed_when: false
  changed_when: false
  no_log: "{{ no_log_value }}"

- name: Debug getstatus
  debug:
    msg: "The crypto toke is offline and Ansible will try to activate it"
  when: ('Offline' in check_p11_exists.stdout)

- name: Check if the test key exists on the crypto token
  command: >
    {{ signsrv_home }}/bin/signserver testkey {{ item.name }} {{ item.testkey_alias }}
  args:
    chdir: "{{ signsrv_home }}"
  environment:
    APPSRV_HOME: "{{ wildfly_home }}"
  become: yes
  become_user: "{{ signsrv_user }}"
  register: check_p11_worker_keys_no_exist
  failed_when: false
  changed_when: false

- name: Add Crypto Token to SignServer
  block:

    - name: Prepare PKCS11 Slot - {{ item.name }} conf file 
      template:
        src: pkcs11-crypto.properties.j2
        dest: "{{ signsrv_home }}/conf/p11-{{ item.id }}.properties"
        owner: "{{ signsrv_user }}"
        group: "{{ signsrv_group }}"
        mode: 0640
      no_log: "{{ no_log_value }}"

    - name: Add PKCS11 Slot - {{ item.name }} to SignServer
      command: "{{ signsrv_home }}/bin/signserver setproperties {{ signsrv_home }}/conf/p11-{{ item.id }}.properties"
      args:
        chdir: "{{ signsrv_home }}"
      environment:
        APPSRV_HOME: "{{ wildfly_home }}"
      become: yes
      become_user: "{{ signsrv_user }}"
      register: create_p11_slot
      no_log: "{{ no_log_value }}"

    - name: Remove the PIN from PKCS11 Slot - {{ item.name }} conf file
      lineinfile:
        path: "{{ signsrv_home }}/conf/p11-{{ item.id }}.properties"
        state: absent
        regexp: 'WORKERGENID[0-9]*\.PIN*?'
      no_log: "{{ no_log_value }}"

    - name: Reload SignServer for PKCS11 Slot - {{ item.name }}
      command: "{{ signsrv_home }}/bin/signserver reload {{ item.id }}"
      args:
        chdir: "{{ signsrv_home }}"
      environment:
        APPSRV_HOME: "{{ wildfly_home }}"
      become: yes
      become_user: "{{ signsrv_user }}"
      no_log: "{{ no_log_value }}"

    - name: Activate the PKCS11 Slot - {{ item.name }}
      command: "{{ signsrv_home }}/bin/signserver activatecryptotoken {{ item.id }} {{ item.slot_pin }}"
      args:
        chdir: "{{ signsrv_home }}"
      environment:
        APPSRV_HOME: "{{ wildfly_home }}"
      become: yes
      become_user: "{{ signsrv_user }}"
      no_log: "{{ no_log_value }}"
      failed_when: false

    - name: Create a test key on the crypto tokens
      command: "{{ signsrv_home }}/bin/signserver generatekey {{ item.id }} -alias {{ item.testkey_alias }} -keyalg {{ item.testkey_keyalg }} -keyspec {{ item.testkey_keyspec }}"
      args:
        chdir: "{{ signsrv_home }}"
      environment:
        APPSRV_HOME: "{{ wildfly_home }}"
      become: yes
      become_user: "{{ signsrv_user }}"
      no_log: "{{ no_log_value }}"
  
  when: check_p11_exists.rc != 0

- name: Active Crypto Token and create test key
  block:
    - name: Activate the {{ item.name }} crypto token
      command: "{{ signsrv_home }}/bin/signserver activatecryptotoken {{ item.name }} {{ item.slot_pin }}"
      args:
        chdir: "{{ signsrv_home }}"
      environment:
        APPSRV_HOME: "{{ wildfly_home }}"
      become: yes
      become_user: "{{ signsrv_user }}"
      no_log: "{{ no_log_value }}"
      register: activate_crypto_token
      failed_when: false

    - name: Activation for crypto token failed
      debug:
        msg: Crypto token activation failed with {{ activate_crypto_token.stdout }}
      when: activate_crypto_token.rc >= 3
      failed_when: true
  
    - name: Create a test key on the crypto tokens
      command: "{{ signsrv_home }}/bin/signserver generatekey {{ item.id }} -alias {{ item.testkey_alias }} -keyalg {{ item.testkey_keyalg }} -keyspec {{ item.testkey_keyspec }}"
      args:
        chdir: "{{ signsrv_home }}"
      environment:
        APPSRV_HOME: "{{ wildfly_home }}"
      become: yes
      become_user: "{{ signsrv_user }}"
      no_log: "{{ no_log_value }}"

  when: 
    - ('Offline' in check_p11_exists.stdout)
    - ('SUCCESS' not in check_p11_keys_no_exist.stdout_lines[-1])

- name: Active Crypto Token
  block:
    - name: Activate the {{ item.name }} crypto token
      command: "{{ signsrv_home }}/bin/signserver activatecryptotoken {{ item.name }} {{ item.slot_pin }}"
      args:
        chdir: "{{ signsrv_home }}"
      environment:
        APPSRV_HOME: "{{ wildfly_home }}"
      become: yes
      become_user: "{{ signsrv_user }}"
      no_log: "{{ no_log_value }}"
      register: activate_crypto_token
      failed_when: false

    - name: Activation for crypto token failed
      debug:
        msg: Crypto token activation failed with {{ activate_crypto_token.stdout }}
      when: activate_crypto_token.rc >= 3
      failed_when: true
  
  when: 
    - ('Offline' in check_p11_exists.stdout)