---

- name: Check if {% if item.external_caname is defined %}{{ item.caname }}{% else %}{{ item.name }}{% endif %} end entity exists
  command: "{{ ejbca_sh }} ra findendentity {% if item.external_caname is defined %}{{ item.caname }}{% else %}{{ item.name }}{% endif %}"
  args:
    chdir: "{{ ejbca_home }}"
  become_method: sudo
  become_user: "{{ ejbca_user }}"
  changed_when: False
  failed_when: "'FAILED' in endentity_exists.stderr"
  register: endentity_exists
  tags: certreq-cli-batch

- block:

    - name: Copy CSR file from Controller
      copy:
        src: "{{ ejbca_csr_dir_output }}/{% if item.name is not defined %}{{ item.caname }}.csr{% else %}{{ item.name }}.csr{% endif %}"
        dest: "{{ identity_batch_output_dir }}/{% if item.name is not defined %}{{ item.caname }}.csr{% else %}{{ item.name }}.csr{% endif %}"
        owner: "{{ ejbca_user }}"
        group: "{{ ejbca_group }}"
      register: file_copy
      tags: certreq-cli-csr

    - name: Create fact
      set_fact:
        entity_pass: "{{ pass_15 }}"
      no_log: true

    - name: Add end entity {% if item.external_caname is defined %}{{ item.caname }}{% else %}{{ item.name }}{% endif %}
      command: >
        {{ ejbca_sh }} ra addendentity
        --username "{% if item.name is not defined %}{{ item.caname }}{% else %}{{ item.name }}{% endif %}"
        --dn "{{ item.dn }}"
        --caname "{% if item.external_caname is defined %}{{ item.external_caname }}{% else %}{{ item.caname }}{% endif %}"
        --type 1
        --token {{ item.token }}
        --password {{ entity_pass }}
        --certprofile {{ item.certprofile }}
        --eeprofile {{ item.eeprofile }}
      no_log: true
      become_method: sudo
      become_user: "{{ ejbca_user }}"
      register: adding_csr_end_entity
      failed_when: adding_csr_end_entity.rc >= 2
      changed_when: adding_csr_end_entity.rc == 0
      tags: certreq-cli-csr

    - debug:
        msg: "Adding end entity failed with message: {{ adding_csr_end_entity.stdout }}"
      when: adding_csr_end_entity.rc == 1

    - name: Sign CSR for {% if item.external_caname is defined %}{{ item.caname }}{% else %}{{ item.name }}{% endif %} 
      command: >
        {{ ejbca_sh }} createcert 
        --username {% if item.external_caname is defined %}{{ item.caname }}{% else %}{{ item.name }}{% endif %} 
        --password {{ entity_pass }} 
        -c {{ identity_batch_output_dir }}/{% if item.name is not defined %}{{ item.caname }}.csr{% else %}{{ item.name }}.csr{% endif %}  
        -f /var/tmp/{% if item.name is not defined %}{{ item.caname }}.crt{% else %}{{ item.name }}.crt{% endif %}
      no_log: true
      become: yes
      become_user: "{{ ejbca_user }}"
      register: ejbca_sign_csr
      failed_when: ejbca_sign_csr.rc >= 2
      changed_when: ejbca_sign_csr.rc == 0
      tags: certreq-cli-csr

    - name: Copy certificate files to localhost
      become: no
      fetch:
        src: "{{ identity_batch_output_dir }}/{% if item.name is not defined %}{{ item.caname }}.crt{% else %}{{ item.name }}.crt{% endif %}"
        dest: "{{ ejbca_csr_dir_output }}/{% if item.name is not defined %}{{ item.caname }}.crt{% else %}{{ item.name }}.crt{% endif %}"
        flat: yes
      tags: certreq-cli-csr

    - name: Cleanup the cert file in /var/tmp
      file:
        path: "{{ identity_batch_output_dir }}/{% if item.name is not defined %}{{ item.caname }}.crt{% else %}{{ item.name }}.crt{% endif %}"
        state: absent
      tags: certreq-cli-csr

    - name: Cleanup the csr file in /var/tmp
      file:
        path: "{{ identity_batch_output_dir }}/{% if item.name is not defined %}{{ item.caname }}.csr{% else %}{{ item.name }}.csr{% endif %}"
        state: absent
      tags: certreq-cli-csr

  when: endentity_exists.rc == 1
