---

- name: Download external signed CA certificate file for creating {{ item.caname }}
  uri:
    url: "{{ item.external_signed_ca_cert_file_url }}"
    validate_certs: no
    dest: "/var/tmp/{{ item.external_signed_ca_cert_file }}"
    creates: "/var/tmp/{{ item.external_signed_ca_cert_file }}"
    owner: "{{ ejbca_user }}"
    group: "{{ ejbca_group }}"
  no_log: "{{ no_log_value }}"
  when: not item.external_signed_ca_cert_file_local_repository|bool 

- name: Upload external signed CA certificate file from Ansible controller for creating {{ item.caname }}
  copy:
    src: "{{ ejbca_csr_dir_output }}/{{ item.caname }}.crt"
    dest: "/var/tmp/{{ item.external_signed_ca_cert_file }}"
    owner: "{{ ejbca_user }}"
    group: "{{ ejbca_group }}"
  no_log: "{{ no_log_value }}"
  when: item.external_signed_ca_cert_file_local_repository|bool

- name: Import External CA - {{ item.caname }}
  command: >
    {{ ejbca_sh }} ca importcacert
    --caname {{ item.caname }}
    -f /var/tmp/{{ item.external_signed_ca_cert_file }}
  no_log: "{{ no_log_value }}"
  become: yes
  become_user: "{{ ejbca_user }}"
  register: import_external_ca
  # TODO Look into if the rc should be 1 instead of 2.
  failed_when: import_external_ca.rc >= 2
  changed_when: import_external_ca.rc == 0
# Note: The cert file should only contain the certificate and not the chain

#- name: Debug import_external_ca
#  debug:
#    var: import_external_ca