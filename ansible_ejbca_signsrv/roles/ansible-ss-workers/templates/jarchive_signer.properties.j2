# {{ ansible_managed | comment }}
# Configuration of JArchiveSigner {{ main_item.0.id }}. 

## General properties

WORKER{{ main_item.0.id }}.TYPE=PROCESSABLE
WORKER{{ main_item.0.id }}.IMPLEMENTATION_CLASS=org.signserver.module.jarchive.signer.JArchiveSigner

WORKER{{ main_item.0.id }}.NAME={{ main_item.0.name }}
# Authentication. One of NOAUTH, CLIENTCERT, org.signserver.server.UsernamePasswordAuthorizer, org.signserver.server.UsernameAuthorizer
WORKER{{ main_item.0.id }}.AUTHTYPE={{ main_item.0.AuthType }}

# Crypto token: CryptoTokenP12, CryptoTokenP11, CryptoTokenP11NG1, CryptoTokenP11NG1KeyWrapping
WORKER{{ main_item.0.id }}.CRYPTOTOKEN={{ main_item.0.CryptoToken }}

# Using key from sample keystore
WORKER{{ main_item.0.id }}.DEFAULTKEY={{ main_item.1.keyalias }}
# Key using ECDSA
#{{ main_item.0.id }}.DEFAULTKEY=code00002

{% if inventory_hostname in groups['eeSignServers'] %}
# Allow peering with EJBCA
WORKER{{ main_item.0.id }}.PEERS_VISIBLE={{ main_item.0.peer_enable |default('true') }}
{% endif %}

# Signature algorithm
# Default: SHA256withRSA
# Values: SHA1withRSA, SHA256withRSA
WORKER{{ main_item.0.id }}.SIGNATUREALGORITHM={{ main_item.0.SignatureAlgorithm }}

# Algorithm for message digests
# Default: SHA-256
# Values: SHA1, SHA-256
WORKER{{ main_item.0.id }}.DIGESTALGORITHM={{ main_item.0.DigestAlgorithm |default('SHA-256') }}

# If the file entry data should be aligned
# Default: false
# Values: true, false
WORKER{{ main_item.0.id }}.ZIPALIGN={{ main_item.0.ZipAlign |default('false') }}

# If existing signature files should be kept
# Default: true
# Values: true, false
WORKER{{ main_item.0.id }}.KEEPSIGNATURES={{ main_item.0.KeepSignatures |default('true') }}

# If an existing signature with the same name should be overwritten and not fail with an error.
# Default: true
# Values: true, false
{{ main_item.0.id }}.REPLACESIGNATURE={{ main_item.0.ReplaceSignature }}

# What type of signature name to use
# Default: KEYALIAS
#{{ main_item.0.id }}.SIGNATURE_NAME_TYPE=KEYALIAS
#{{ main_item.0.id }}.SIGNATURE_NAME_VALUE=
#{{ main_item.0.id }}.SIGNATURE_NAME_TYPE=VALUE
#{{ main_item.0.id }}.SIGNATURE_NAME_VALUE=CERT
{% if main_item.0.Signature_Name_Type is defined and main_item.0.Signature_Name_Type|length %}
WORKER{{ main_item.0.id }}.SIGNATURE_NAME_TYPE={{ main_item.0.Signature_Name_Type }}
{% endif %}
{% if main_item.0.Signature_Name_Value is defined and main_item.0.Signature_Name_Value|length %}
WORKER{{ main_item.0.id }}.SIGNATURE_NAME_VALUE={{ main_item.0.Signature_Name_Value }}
{% endif %}

# Worker ID or name of internal (RFC#3161) timestamp signer in the same SignServer
# Default: none
#{{ main_item.0.id }}.TSA_WORKER=TimeStampSigner
{% if main_item.0.Tsa_Worker is defined and main_item.0.Tsa_Worker|length %}
WORKER{{ main_item.0.id }}.TSA_WORKER={{ main_item.0.Tsa_Worker }}
{% endif %}
# URL of external (RFC#3161) timestamp authority
# Default: none
#{{ main_item.0.id }}.TSA_URL=http://tsa.example.com/TimeStampSigner
{% if main_item.0.Tsa_Url is defined and main_item.0.Tsa_Url|length %}
WORKER{{ main_item.0.id }}.TSA_URL={{ main_item.0.Tsa_Url }}
{% endif %}

# Username for authentication with the TSA
# Default: none
WORKER{{ main_item.0.id }}.TSA_USERNAME=

# Password for authentication with the TSA
# Default: none
WORKER{{ main_item.0.id }}.TSA_PASSWORD=

# Time-stamping policy OID to request from the TSA
# Default: none
{% if main_item.0.TsaPolicyOid is defined and main_item.0.TsaPolicyOid|length %}
WORKER{{ main_item.0.id }}.TSA_POLICYOID={{ main_item.0.TsaPolicyOid }}
{% endif %}

# Digest algorithm used for timestamps
# Default: SHA-256
WORKER{{ main_item.0.id }}.TSA_DIGESTALGORITHM={{ main_item.0.Tsa_DigestAlgorithm |default('SHA-256') }}

# If a digest of the request should be computed and logged
# Default: true
# Values: true, false
WORKER{{ main_item.0.id }}.DO_LOGREQUEST_DIGEST={{ main_item.0.Do_LogRequest_Digest |default('true') }}

# The digest algorithm to use for the request in the log
# Default: SHA256
WORKER{{ main_item.0.id }}.LOGREQUEST_DIGESTALGORITHM={{ main_item.0.LogRequest_DefaultAlgorithm |default('SHA256') }}

# If a digest of the response should be computed and logged
# Default: true
# Values: true, false
WORKER{{ main_item.0.id }}.DO_LOGRESPONSE_DIGEST={{ main_item.0.Do_LogResponse_Digest |default('true') }}

# The digest algorithm to use for the request in the log
# Default: SHA256
WORKER{{ main_item.0.id }}.LOGRESPONSE_DIGESTALGORITHM={{ main_item.0.LogResponse_DigestAlgorithm |default('SHA256') }}

# If the key usage counter is disabled
WORKER{{ main_item.0.id }}.DISABLEKEYUSAGECOUNTER={{ main_item.0.DisableKeyUsageCounter |default('true') }}

## Archiving properties

# Using the base 64 archiver
WORKER{{ main_item.0.id }}.ARCHIVERS=org.signserver.server.archive.base64dbarchiver.Base64DatabaseArchiver

# Using the old database archiver
#{{ main_item.0.id }}.ARCHIVERS=org.signserver.server.archive.olddbarchiver.OldDatabaseArchiver

# Archiving only requests
#{{ main_item.0.id }}.ARCHIVER0.ARCHIVE_OF_TYPE=REQUEST

# Archiving only responses
#{{ main_item.0.id }}.ARCHIVER0.ARCHIVE_OF_TYPE=RESPONSE

# Archiving both requests and responses
WORKER{{ main_item.0.id }}.ARCHIVER0.ARCHIVE_OF_TYPE=REQUEST_AND_RESPONSE

# Store forwarded address (from the X-Forwarded-For header) as the request address
#{{ main_item.0.id }}.ARCHIVER0.USE_FORWARDED_ADDRESS=true

# Include additional forwarded addresses (apart from the last), only applies if the property above is set
#{{ main_item.0.id }}.ARCHIVER0.MAX_FORWARDED_ADDRESSES=3

# Included direct (non-forwarded address) at the end of forwarded addresses
#{{ main_item.0.id }}.ARCHIVER0.INCLUDE_DIRECT_ADDRESS=true