# {{ ansible_managed | comment }}
# Configuration of TimeStampSigner {{ main_item.0.id }}.
#

## General properties
WORKER{{ main_item.0.id }}.TYPE=PROCESSABLE
WORKER{{ main_item.0.id }}.IMPLEMENTATION_CLASS=org.signserver.module.tsa.TimeStampSigner

WORKER{{ main_item.0.id }}.NAME={{ main_item.0.name }}

# Authentication. One of NOAUTH, CLIENTCERT, org.signserver.server.UsernamePasswordAuthorizer, org.signserver.server.UsernameAuthorizer
WORKER{{ main_item.0.id }}.AUTHTYPE={{ main_item.0.AuthType }}

# Crypto token: CryptoTokenP12, CryptoTokenP11, CryptoTokenP11NG1, CryptoTokenP11NG1KeyWrapping
WORKER{{ main_item.0.id }}.CRYPTOTOKEN={{ main_item.0.CryptoToken }}


# Using key from keystore
WORKER{{ main_item.0.id }}.DEFAULTKEY={{ main_item.1.keyalias }}
# Key using ECDSA
#{{ main_item.0.id }}.DEFAULTKEY=ts00002

{% if inventory_hostname in groups['eeSignServers'] %}
# Allow peering with EJBCA
WORKER{{ main_item.0.id }}.PEERS_VISIBLE={{ main_item.0.peer_enable |default('true') }}
{% endif %}

# Check validity period of the certificate will be verified before processing. Default true.
WORKER{{ main_item.0.id }}.CHECKCERTVALIDITY={{ main_item.0.CheckCertValidity |default('true') }}

# Check validity of the PrivateKeyUsagePeriod in the certificate will be verified before processing if it is present. Default true.
WORKER{{ main_item.0.id }}.CHECKCERTPRIVATEKEYVALIDITY={{ main_item.0.CheckCertPrivateKeyValidity |default('true') }}

# Check the minimum remaining days of the signing certificate before expiration. 0 means disable. Default 0.
WORKER{{ main_item.0.id }}.MINREMAININGCERTVALIDITY={{ main_item.0.MinRemainingCertValidity |default('0') }}

# Sets how many signatures that are allowed to be created with the same key by this worker. Default is -1 (no limit).
# The counter is per key so if multiple workers share the same key they will all increment the counter.
WORKER{{ main_item.0.id }}.KEYUSAGELIMIT={{ main_item.0.KeyUsageLimit |default('-1') }}

## Archiving properties

# Using the base 64 archiver
#{{ main_item.0.id }}.ARCHIVERS=org.signserver.server.archive.base64dbarchiver.Base64DatabaseArchiver

# Using the old database archiver
#{{ main_item.0.id }}.ARCHIVERS=org.signserver.server.archive.olddbarchiver.OldDatabaseArchiver

# Archiving only requests
#{{ main_item.0.id }}.ARCHIVER0.ARCHIVE_OF_TYPE=REQUEST

# Archiving only responses
#{{ main_item.0.id }}.ARCHIVER0.ARCHIVE_OF_TYPE=RESPONSE

# Archiving both requests and responses
#{{ main_item.0.id }}.ARCHIVER0.ARCHIVE_OF_TYPE=REQUEST_AND_RESPONSE

# Store forwarded address (from the X-Forwarded-For header) as the request address
#{{ main_item.0.id }}.ARCHIVER0.USE_FORWARDED_ADDRESS=true

# Include additional forwarded addresses (apart from the last), only applies if the property above is set
#{{ main_item.0.id }}.ARCHIVER0.MAX_FORWARDED_ADDRESSES=3

# Included direct (non-forwarded address) at the end of forwarded addresses
#{{ main_item.0.id }}.ARCHIVER0.INCLUDE_DIRECT_ADDRESS=true

## TSA properties

# Required. The default policy ID of the time stamp authority. If no policy OID is specified in the request then will this value be used.
WORKER{{ main_item.0.id }}.DEFAULTTSAPOLICYOID={{ main_item.0.DefaultTsaPolicyOid }}

# Recommended. A ';' separated string containing accepted algorithms, can be null if it shouldn't be used.
# Supported Algorithms are: GOST3411, MD5, SHA1, SHA224, SHA256, SHA384, SHA512, RIPEMD128, RIPEMD160, RIPEMD256
#{{ main_item.0.id }}.ACCEPTEDALGORITHMS=SHA1;SHA224;SHA256;SHA384;SHA512

# Recommended. A ';' separated string containing accepted policies, can be null if it shouldn't be used.
{% if main_item.0.AcceptedPolicies is defined and main_item.0.AcceptedPolicies|length %}
WORKER{{ main_item.0.id }}.ACCEPTEDPOLICIES={{ main_item.0.AcceptedPolicies }}
{% endif %}

# Accept any requested policy (must be set if not setting ACCEPTEDPOLICIES)
# can optionally be set to false or empty value when setting ACCEPTEDPOLICIES for clarity
WORKER{{ main_item.0.id }}.ACCEPTANYPOLICY={{ main_item.0.AcceptAnyPolicy }}
#{{ main_item.0.id }}.ACCEPTANYPOLICY=false
#{{ main_item.0.id }}.ACCEPTANYPOLICY=

# Optional. A ';' separated string containing accepted extensions, can be null if it shouldn't be used.
#{{ main_item.0.id }}.ACCEPTEDEXTENSIONS=

# Optional. Class implementing the ITimeSource.
#{{ main_item.0.id }}.TIMESOURCE=org.signserver.server.LocalComputerTimeSource

# Optional. The signature algorithm to use.
WORKER{{ main_item.0.id }}.SIGNATUREALGORITHM={{ main_item.0.SignatureAlgorithm |default('SHA256WithRSA') }}

# Optional. Accuracy defines how good the time source is. Only one of the accuracy properties should be set.
#{{ main_item.0.id }}.ACCURACYMICROS=500
#{{ main_item.0.id }}.ACCURACYMILLIS=500
#{{ main_item.0.id }}.ACCURACYSECONDS=1

# Optional. The GeneralName of the Time Stamp Authority.
#{{ main_item.0.id }}.TSA=CN=...

# Optional. Set the GeneralName of the Time Stamp Authority from the subject DN of the signing
# certificate. This can not be set if the TSA property above is set
#{{ main_item.0.id }}.TSA_FROM_CERT=true

# Optional. Perform an extra check that the SIGNERCERTCHAIN only contains certificates in the chain of the signer certificate
#{{ main_item.0.id }}.REQUIREVALIDCHAIN=true

# The maximum size (in bytes) used when generating serial numbers (default 8)
#{{ main_item.0.id }}.MAXSERIALNUMBERLENGTH=16

# Optional. Specifies if the status string is to be included in the response. Setting this to true triggers a bug in some versions of OpenJDK's jarsigner utility. Default true.
#{{ main_item.0.id }}.INCLUDESTATUSSTRING=false

# Optional. Specifies if the signingTime signed CMS attribute should be included in the response. Default true.
#{{ main_item.0.id }}.INCLUDESIGNINGTIMEATTRIBUTE=false

# If the key usage counter is disabled
WORKER{{ main_item.0.id }}.DISABLEKEYUSAGECOUNTER={{ main_item.0.DisableKeyUsageCounter |default('true') }}

# Whether timestamp token signature is to be validated after signing. Default true.
WORKER{{ main_item.0.id }}.VERIFY_TOKEN_SIGNATURE={{ main_item.0.Verify_Token_Signature }}
#{{ main_item.0.id }}.VERIFY_TOKEN_SIGNATURE=
#{{ main_item.0.id }}.VERIFY_TOKEN_SIGNATURE=false