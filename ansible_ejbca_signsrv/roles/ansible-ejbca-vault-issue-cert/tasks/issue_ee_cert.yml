---

- name: Check if csr directory exists
  become: no
  stat:
    path: "{{ vault_certreq_dir }}"
  register: vault_certreq_dir_status

- name: Create certs directory structure
  become: no
  file:
    path: "{{ vault_certreq_dir }}"
    state: directory
  when: not vault_certreq_dir_status.stat.exists

- name: Check if conf file exists
  become: no
  stat:
    path: "{{ vault_certreq_dir }}/{{ item.dn_common_name }}.crt"
  register: vault_certreq_conf_status

- block:
  - name: Create openssl Conf
    become: no
    template:
      src: certReq.j2
      dest: "{{ vault_certreq_dir }}/{{ item.dn_common_name }}.conf"

  - name: Create CSR
    become: no
    command: openssl req -new -out {{ item.dn_common_name }}.csr -newkey rsa:2048 -nodes -sha256 -keyout {{ item.dn_common_name }}.key -config {{ item.dn_common_name }}.conf
    args:
      chdir: "{{ vault_certreq_dir }}"
  - name: Request certificates from vault
    become: no
    command:  "{{ vault_cli_dir }}/vault write {{ item.ejbca_vault_path }}/enrollCSR/{{ item.instance }} csr=@'{{ vault_certreq_dir }}/{{ item.dn_common_name }}.csr' username='{{ item.dn_common_name }}' -format=json"
    environment:
      VAULT_ADDR: "{{ vault_local_addr }}"
    register: ee_cert_issued

  - name: Create fact of output from End Entity Certs
    set_fact:
      ee_cert_issued_parsed: "{{ ee_cert_issued.stdout | from_json }}"

  #- name: Output the fact
  #  debug:
  #    var: ee_cert_issued_parsed

  - name: Write End Entity cert to file
    become: no
    #copy:
      #dest: "{{ vault_certreq_dir }}/{{ item.dn_common_name }}.crt"
      #content: "{{ ee_cert_issued_parsed.data.certificate }}"
    #delegate_to: localhost
    template:
      src: cert.j2
      dest: "{{ vault_certreq_dir }}/{{ item.dn_common_name }}.crt"

  #- name: Create a fact for certificate serial number
  #  set_fact: 
  #    cacheable: yes
  #    ejbca_vault_issued_cert_sn: "{{ ejbca_vault_issued_cert_sn | default( [] ) + [ ee_cert_issued_parsed.data.serial_number ] }}"
  when: not vault_certreq_conf_status.stat.exists
