---

- name: Check if keys exist on HSM for {{ key_item.0.slot_identifier_type }}:{{ key_item.0.slot_identifier_value }}
  command: >
    {% if ncipher_preload %}{{ preload_path }}{% endif %} {{ ejbca_home }}/../clientToolBox/ejbcaClientToolBox.sh
    PKCS11HSMKeyTool test 
    {{ hsm_shared_library }} 
    {{ key_item.0.slot_identifier_type }}:{{ key_item.0.slot_identifier_value }} 
    -password "{{ key_item.0.tokenpass }}"
  args:
    chdir: "{{ ejbca_home }}/../clientToolBox"
  become: yes
  become_user: "{{ ejbca_user }}"
  no_log: "{{ no_log_value }}"
  register: checking_existing_keys
  changed_when: '"Signature test of key " + key_item.1.key_label + ":" not in checking_existing_keys.stdout'

#- name: Show me the var
#  debug:
#    var: checking_existing_keys 

- name: Generate key if it does not exist for {{ key_item.0.slot_identifier_type }}:{{ key_item.0.slot_identifier_value }} - {{ key_item.1.key_label }}:{{ key_item.1.key_size }}
  command: >
    {% if ncipher_preload %}{{ preload_path }}{% endif %} {{ ejbca_home }}/../clientToolBox/ejbcaClientToolBox.sh 
    PKCS11HSMKeyTool generate 
    {% if key_item.0.slot_conf is defined %}"{{ key_item.0.slot_conf.dest }}"{% else %}"{{ hsm_shared_library }}"{% endif %} 
    {{ key_item.1.key_size }} 
    "{{ key_item.1.key_label }}" 
    {% if key_item.0.slot_conf is not defined %}{{ key_item.0.slot_identifier_type }}:{{ key_item.0.slot_identifier_value }}{% endif %}
    -password "{{ key_item.0.tokenpass }}"
  args:
    chdir: "{{ ejbca_home }}/../clientToolBox"
  become: yes
  become_user: "{{ ejbca_user }}"
  no_log: "{{ no_log_value }}"
  when: checking_existing_keys.changed
