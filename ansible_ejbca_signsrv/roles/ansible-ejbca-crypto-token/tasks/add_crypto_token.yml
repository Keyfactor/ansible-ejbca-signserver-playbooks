---

- name: Create PKCS11 cryptotoken for {% if item.crypto_token_name is defined %}{{ item.crypto_token_name }}{% else %}{{ item.caname }}{% endif %}
  keyfactor.ejbca.cli_token:
    action: create
    token: "{% if item.crypto_token_name is defined %}{{ item.crypto_token_name }}{% else %}{{ item.caname }}{% endif %}"
    type: "{{ item.tokentype }}"
    pin: "{{ item.tokenpass }}"
    config:
      auto: "{{ item.cryptotoken_enable_auto_activate }}"
      lib: "{{ hsm_shared_library }}" 
      slot_ref: "{{ item.slot_identifier_value }}"
      slot_ref_type: "{{ item.slot_identifier_type }}" 
      force_used_slots:  "{% if item.force_used_slots|default(true) %}true{% else %}false{% endif %}"
    path: "{{ ejbca_home }}"
  become: true
  become_user: "{{ ejbca_user }}"
  register: token_create
  when:
    - item.tokentype in ['SoftCryptoToken','PKCS11CryptoToken','Pkcs11NgCryptoToken']

#- debug: msg={{ token_create }}
